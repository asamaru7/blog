<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[이 세상에 하나는 남기고 가자]]></title>
  <link href="http://blog.asamaru.net/atom.xml" rel="self"/>
  <link href="http://blog.asamaru.net/"/>
  <updated>2015-11-25T21:21:54+09:00</updated>
  <id>http://blog.asamaru.net/</id>
  <author>
    <name><![CDATA[유영재]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[protobuf (Protocol Buffers)를 PHP에서 사용하기]]></title>
    <link href="http://blog.asamaru.net/2015/11/25/protobuf-protocol-buffers/"/>
    <updated>2015-11-25T19:53:52+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/25/protobuf-protocol-buffers</id>
    <content type="html"><![CDATA[<p><a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>는 무엇일까?
공식 사이트에서 아래와 같이 설명하고 있다.</p>

<blockquote>
<p>Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.</p>
</blockquote>

<p>간단히 말하면 언어와 플랫폼에 중립적이며 확장 가능한 구조화된 데이터 직렬화 도구라고 할 수 있겠다. XML과 유사하지만 더 작고, 더 빠르며, 더 단순하다고 소개하고 있다.</p>

<p>이번 글에서는 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a> 자체에 대한 연구가 목적이 아니므로 참고할 만한 글을 아래에 소개하는 것으로 자세한 설명을 대체한다.</p>

<ul>
<li><p><a href="https://developers.google.com/protocol-buffers/docs/overview">Protocol Buffers Developer Guide</a></p></li>
<li><p><a href="https://github.com/eishay/jvm-serializers/wiki">Benchmark comparing serialization libraries on the JVM</a></p></li>
<li><p><a href="http://www.cgcii.co.kr/index.php?document_srl=2017&amp;mid=board_eLHH13">Tips - C++, C#, protobuf, JSON직렬화 성능 얼마나 차이날까?</a></p></li>
<li><p><a href="http://egloos.zum.com/javawork/v/2720889">Google Protocol Buffers 기본 사용법</a></p></li>
<li><p><a href="http://knight76.tistory.com/1366">구글 프로토콜 버퍼 (Google Protocl Buffer)</a></p></li>
</ul>

<hr>

<p>본론으로 들어가자면 이번에 개인적인 작업을 하는 과정에서 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>를 사용할 일이 생겼다. 정확히 이야기하자면 Google Play를 대상으로 몇가지 실험을 하고 있다. 그런데 이 작업을 하다보니 Google Play 서버와 통신을 하려면 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>를 사용 해야만 했다. <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>가 너무 길어서 이하에서는 그냥 PB라고 하겠다.</p>

<p>이번 작업에 필요한 몇가지 요소들을 지원하는 오픈소스 라이브러리들이 몇가지 있었으나 개발이 오래동안 멈춰진 것들이 대부분이라 기존 오픈소스들을 참고해서 직접 구현하기로 했다(사실 이 부분이 나의 최대 실수다. 생각보다 작업이 만만치 않아 시간을 많이 소요했다). 기존 오픈소스들은 java와 python, ruby로 구성된 것이 많았다. 그런데 나는 PHP로 구성하고 싶었다. 지금 생각하면 왜 그런 결정을 했는지 모르겠다. python이야 아직 익숙치 않아 패스하더라도 java로 작업하면 생각보다 빠르게 작업이 완료될 수 있었는데... 이야기가 갑자기 옆으로 샜는데 다시 본론으로...</p>

<p>어쨌든 PHP로 PB를 사용하는 것부터 시작해야 했다. 그런데 PB는 기본적으로 C++, JAVA, PYTHON을 지원한다. PHP를 공식 지원하지 않으므로 지원 라이브러리부터 찾아야 한다.</p>

<p>아래의 사이트들을 참고하자. 이 외에도 찾아보면 여러가지가 있다.</p>

<ul>
<li><a href="http://stuporglue.org/using-google-protcol-buffers-with-php-and-protoc-gen-php/">Using Google Protcol Buffers with PHP and protoc-gen-php</a></li>
<li><a href="http://phptrends.com/dig_in/protobuf">Php Trends.com : protobuf</a></li>
</ul>

<p>PHP에서 PB를 사용하는 오픈소스 중 그런대로 가장 이름이 알려진 프로젝트는 <a href="https://github.com/drslump/Protobuf-PHP">drslump/Protobuf-PHP</a> 였다(주관적인 생각이다). 그런데 설치 과정과 사용법이 간단하게 설명되어 있었지만 실제로는 그리 간단하지 않았다. 그래서 일단 접어두고 다른 라이브러리들도 하나씩 테스트 했다. 두서없이 작업하다보니 일일이 기록을 남기지 못했다. 잘 정리해 두었다면 비교에 도움이 되었을텐데 그 당시에는 정신이 없었다. 생각대로 되지 않아 닥치는대로 막 적용을 해보고 있었던지라.</p>

<p>결국 현재는 <a href="https://github.com/chobie/protoc-gen-php">chobie/protoc-gen-php</a>로 정착했다. 사실 이 라이브러리도 문제가 많긴하다. php에 모듈을 별도 설치해야하고 기타 의존 라이브러리도 설치해야 한다(간단하게 사용하려고 php를 선택한 것인데). 그리고 이 라이브러리는 <a href="https://pecl.php.net/package/protocolbuffers">PECL:protocolbuffers</a>에 등록되어 있어서 PECL을 사용해 설치도 가능하다. 하지만 나는 직접 설치했다. 이 라이브러리가 업데이트가 된지 오래되서 오류가 있는 부분을 몇가지 수정해서 사용하게 되면서 모듈을 그대로 사용할 수 없었다.</p>

<p>아래는 사용에 필요한 모듈들을 설치하는 과정을 bash shell로 작성해 둔 것이다. 실제 사용시에는 자신의 환경에 맞춰서 사용하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>su -c <span class="s2">&quot;yum install -y php56w-mbstring php56w-bcmath&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># protobuf 설치</span>
</span><span class='line'><span class="c"># https://github.com/chobie/protoc-gen-php</span>
</span><span class='line'>su -c <span class="s2">&quot;yum install -y protobuf-compiler&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># https://github.com/chobie/php-protocolbuffers</span>
</span><span class='line'><span class="nb">cd </span>libs/bin/
</span><span class='line'>git clone https://github.com/chobie/php-protocolbuffers.git
</span><span class='line'><span class="nb">cd </span>php-protocolbuffers
</span><span class='line'>su -c <span class="s2">&quot;yum install -y php56w-devel&quot;</span>
</span><span class='line'>phpize
</span><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>su -c <span class="s2">&quot;make install ; echo \&quot;extension=protocolbuffers.so\&quot; &gt;&gt; /etc/php.ini&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>아래는 composer.json 설정 부분이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;require&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;asamaru7/protoc-gen-php&quot;</span><span class="p">:</span> <span class="s2">&quot;~0.1.1&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>갑자기 모듈명이 asamaru7로 변경된 것에 유의하자. <a href="https://github.com/chobie/protoc-gen-php">chobie/protoc-gen-php</a>의 fork 프로젝트에서 변경 부분을 내가 따로 fork한 프로젝트에 merge하고 내가 필요한 부분을 수정해서 <a href="https://packagist.org/packages/asamaru7/protoc-gen-php">Packagist</a>에 등록했다.</p>

<p>다음으로 proto 파일로 실제 php 파일을 만드는 과정이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>protoc <span class="se">\</span>
</span><span class='line'>    --plugin<span class="o">=</span>protoc-gen-php<span class="o">=</span><span class="s1">&#39;../vendor/asamaru7/protoc-gen-php/bin/protoc-gen-php&#39;</span> <span class="se">\</span>
</span><span class='line'>    --proto_path<span class="o">=</span><span class="s1">&#39;/home/web/google-checkin/libs/protobuf/&#39;</span> <span class="se">\</span>
</span><span class='line'>    --php_out<span class="o">=</span><span class="s1">&#39;:../Class/Protobuf&#39;</span> <span class="se">\</span>
</span><span class='line'>    <span class="s1">&#39;/home/web/project/libs/protobuf/logs.proto&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<p>이상하게 <code>--proto_path</code>를 사용함에도 full path를 지정해만 정상적으로 생성이 된다. 자주 사용할 부분이 아니므로 일단 패스했다.</p>

<p>마지막으로 php에서의 사용.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="s2">&quot;https://android.clients.google.com/~~&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_HEADER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POST</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">serializeToString</span><span class="p">());</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_FOLLOWLOCATION</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_HTTPHEADER</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;Content-type: application/x-protobuffer&quot;</span>
</span><span class='line'><span class="p">]);</span>
</span><span class='line'><span class="nv">$content</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>$request-&gt;serializeToString()</code> 이 부분이 중요한 부분이다. <code>$request</code>는 protoc에 의해 생성된 class의 인스턴스다. 전송시에는 <code>serializeToString()</code>를 사용해서 직렬화하는 것이다.</p>

<p>다음은 수신시.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$response</span> <span class="o">=</span> <span class="nx">\Response</span><span class="o">::</span><span class="na">parseFromString</span><span class="p">(</span><span class="nv">$content</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>parseFromString()</code>를 사용해서 수신된 PB 직렬화 데이터를 역직렬화 할 수 있다.</p>

<hr>

<p>그런데 가급적 PHP에서는 PB를 사용하지 말자. &quot;이제까지 사용 방법을 설명해놓고 이게 무슨 말이야?&quot;라고 생각할 수 있는데 이유를 설명하겠다.</p>

<p>이번에 설명한 라이브러리뿐 아니라 <a href="https://github.com/drslump/Protobuf-PHP">drslump/Protobuf-PHP</a> 외에도 테스트한 모든 라이브러리가 group type을 지원하지 않는다. PB v2에서 deprecated 된 type이긴 하지만 Google Play에서는 group type을 사용하고 있었다. 다행히 내가 하고자하는 부분에서는 group이 필요없어서 proto 파일에서 제거하고 작업했지만 group type을 사용하게 되면 오류가 난다. 내가 테스트 해보지 못한 라이브러리에서 지원하는 것이 있을지는 모르겠지만 내가 본 것은 없다. 또한 int의 길이 문제과 같이 데이터 타입에 대한 처리에 신경을 써줘야하는 부분들이 있다.</p>

<p>pure php로 만들어진 라이브러리가 아닌 이상 어짜피 외부 모듈의 설치가 필요하니 아예 이 부분을 python이나 java로 처리하는게 나을지도 모른다. 게다가 pure php로 제작된 모듈은 성능 상의 문제에 대한 이야기도 있다(어짜피 나의 경우는 성능은 중요하지 않은 경우이지만).</p>

<p>그 외에도 작업중에 PB 때문에 고생한 것을 생각하면... 정말 권하고 싶지 않다. 사실 내가 사용을 잘못해서 그런 것일 수 있지만... 어쨌든 JSON 등에 비해 PHP에서의 이득은 없는 것 같다.</p>

<p>그럼에도 나의 경우처럼 상대 서버가 PB를 사용해서 어쩔 수 없다면 위 글을 참고하길 바란다.</p>

<hr>

<p>이번 작업에 대해서는 자세히 설명하고자 하면 너무 길어져서 중간중간 필요한 부분만 적었다. 그러다 보니 &quot;이게 무슨 말인가?&quot;라는 생각이 들 수 있는데 양해 바란다. 이해가 안되는 부분은 질문한다면 따로 설명하도록 하겠다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift : Async - Background Threads - GCD(Grand Central Dispatch)]]></title>
    <link href="http://blog.asamaru.net/2015/11/24/swift-background-threads-gcd-grand-central-dispatch/"/>
    <updated>2015-11-24T07:35:18+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/24/swift-background-threads-gcd-grand-central-dispatch</id>
    <content type="html"><![CDATA[<p>오늘은 swift에 비동기 처리에 사용하는 <a href="https://github.com/duemunk/Async">Async</a>라는 라이브러리를 소개하고자 한다. <a href="https://github.com/duemunk/Async">Async</a>는 &quot;Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch&quot;라고 소개되어 있다. <a href="https://github.com/duemunk/Async">Async</a>를 소개하기 전에 swift에서의 기본적인 비동기 처리에 대해 먼저 설명한다.</p>

<p>swift는 비동기(Asynchronous) 처리에 사용하는 <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand Central Dispatch)</a>를 사용할 수 있다. GCD(Grand Central Dispatch)는 C로 구성된 스레드 관리 기술로 iOS4 부터 지원한다. NSThread, NSOperation 보다 쉽게 쉽게 사용할 수 있다.</p>

<p>스레드는 다양한 병렬 작업에 사용하지만 특히 앱 개발시에는 더욱 자주 사용하게 된다. 안드로이드와 iOS는 UI처리 등의 앱의 실행을 main 스레드에서 처리한다. 그런데 이 main 스레드에서 무거운 작업을 하게 된다면 UI의 갱신이 지연되므로 화면의 멈춤 현상이 발생한다. 특히 안드로이드의 경우는 main 스레드에서 네트워크 처리 등을 할 수 없도록 제한이 걸려있다(제한을 풀 수 있으나 ANR 문제 등으로 결국은 사용하지 못하는 것과 같다). 이러한 문제를 해결하기 위해서는 스레드의 사용이 필수다.</p>

<p>그럼 <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand Central Dispatch)</a>에 대해서 알아보자.</p>

<p>GCD는 기본적으로 아래의 queue를 가지고 있다.</p>

<ul>
<li><p><strong>Main</strong>: tasks execute serially on your application’s main thread</p></li>
<li><p><strong>Concurrent</strong>: tasks are dequeued in FIFO order, but run concurrently and can finish in any order.</p></li>
<li><p><strong>Serial</strong>: tasks execute one at a time in FIFO order</p></li>
</ul>

<p>GCD에 대한 자세한 설명은 워낙에 많으니 자세히 설명하지 않고 간단한 예시만 보여주고자 한다.</p>

<p>일단 swift 이전에 objective-c에서는 아래와 같이 사용한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">// do some task</span>
</span><span class='line'>  <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>      <span class="c1">// update some UI</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>동일한 동작을 swift에서 사용하면 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">priority</span> <span class="o">=</span> <span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span>
</span><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">priority</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// do some task</span>
</span><span class='line'>  <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// update some UI</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>block object의 표현만 차이가 날 뿐 사실상 거의 차이가 없다.</p>

<p>위 코드를 간단히 설명하자면 global queue에서 작업을 수행하고 main queue에서 UI 변경 작업을 하도록 한 코드다.</p>

<p>뭐 크게 사용이 어렵지도 않고 크게 불편하지는 않다. 하지만 이런 과정을 더욱 쉽게 구성할 수 있도록 도와주는 것이 <a href="https://github.com/duemunk/Async">Async</a>다. 상세한 예시는 해당 사이트를 방문하면 다양하게 소개하고 있다.</p>

<p>그 중에서 Async의 장점을 잘 보여주는 예시를 하나 소개한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">seconds</span> <span class="o">=</span> <span class="mf">0.5</span>
</span><span class='line'><span class="n">Async</span><span class="p">.</span><span class="n">main</span><span class="p">(</span><span class="nl">after</span><span class="p">:</span> <span class="n">seconds</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;Is called after 0.5 seconds&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}.</span><span class="n">background</span><span class="p">(</span><span class="nl">after</span><span class="p">:</span> <span class="mf">0.4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;At least 0.4 seconds after previous block, and 0.9 after Async code is called&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>&quot;Is called after 0.5 seconds&quot; 메시지를 main 스레드에서 0.5초 뒤에 출력한 후 0.4초 뒤 background 스레드에서 &quot;At least 0.4 seconds after previous block, and 0.9 after Async code is called&quot;를 출력하는 예시다. 이 예시를 보면 알 수 있듯이 <a href="https://github.com/duemunk/Async">Async</a>는 chaining을 지원하며 스레드를 작업 완료에 따라 순차적으로 실행 할 수 있도록 도와준다.</p>

<p>스레드 작업을 취소하는 예시 하나만 더 아래에 소개한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">// Cancel blocks not yet dispatched</span>
</span><span class='line'><span class="k">let</span> <span class="n">block1</span> <span class="o">=</span> <span class="n">Async</span><span class="p">.</span><span class="n">background</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Heavy work</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="mf">.1000</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;A \(i)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">let</span> <span class="n">block2</span> <span class="o">=</span> <span class="n">block1</span><span class="p">.</span><span class="n">background</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;B – shouldn&#39;t be reached, since cancelled&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">Async</span><span class="p">.</span><span class="n">main</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Cancel async to allow block1 to begin</span>
</span><span class='line'>    <span class="n">block1</span><span class="p">.</span><span class="n">cancel</span><span class="p">()</span> <span class="c1">// First block is _not_ cancelled</span>
</span><span class='line'>    <span class="n">block2</span><span class="p">.</span><span class="n">cancel</span><span class="p">()</span> <span class="c1">// Second block _is_ cancelled</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>위에서 소개한 것처럼 <a href="https://github.com/duemunk/Async">Async</a>는 swift에서의 thread 작업을 아주 쉽게 할 수 있도록 도와준다.</p>

<p>한가지 라이브러리를 더 소개하자면 위 라이브러리와는 성격이 조금 다르지만 안드로이드의 AsyncTask 같은 작업이 필요하다면 <a href="https://github.com/ReactKit/SwiftTask">SwiftTask</a>를 참고해보면 도움이 될 것 같다. <a href="https://github.com/ReactKit/SwiftTask">SwiftTask</a>는 &quot;Promise + progress + pause + cancel + retry for Swift.&quot;라고 소개하고 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress : pygments cant parse unknown language: </p> 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/octopress-error-pygments-cant-parse-unknown-language/"/>
    <updated>2015-11-17T14:40:02+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/octopress-error-pygments-cant-parse-unknown-language</id>
    <content type="html"><![CDATA[<p>Octopress에서 <code>rake generate</code>를 하다보면 아래와 같은 오류를 만나는 경우가 있다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jekyll 2.5.3 | Error:  Pygments can't parse unknown language: &lt;/p&gt;</span></code></pre></td></tr></table></div></figure>

<p>Pygments는 소스코드 하이라이팅을 해주는 모듈인데 언어를 알 수 없다고 오류를 내는 것이다. markdown에서 소스코드는 ```로 시작하고 그 뒤에 붙여서 언어 종류를 지정할 수 있다(```ruby 와 같이).</p>

<p>위 오류가 발생한다는 것은 여기에 문제가 있다는 것인데 오류 메시지만 보면 어디서 발생하는 것인지 짐작이 안된다. 그래서 최근에 작성한 글을 다 둘러볼 수 밖에 없다. 그래서 찾아봤더니 <a href="http://reckhhh.github.io/blog/2015/05/01/octopress-error-pygments-cant-parse-unknown-language/">Octopress Error: Pygments Can’t Parse Unknown Language: &lt;/p&gt;</a>라는 글에서 방법을 알려주고 있었다. 정확하게는 오류를 해결해 주는 것이 아니라 위치를 조금 더 찾기 쉽게 해준다.</p>

<p>결론은 <code>plugins/pygments_code.rb</code>을 열어서 다음의 부분을 수정하면 된다(<code>#{code}</code>를 추가하는 것이다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">rescue</span> <span class="no">MentosError</span>
</span><span class='line'><span class="k">raise</span> <span class="s2">&quot;Pygments can&#39;t parse unknown language: </span><span class="si">#{</span><span class="n">lang</span><span class="si">}#{</span><span class="n">code</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>이렇게 하면 위 오류가 날 때 해당 코드 영역을 함께 출력해준다.</p>

<p>사실 나의 경우엔 위 오류가 발생하는 경우의 대부분이 &quot;```ruby 파일명&quot; 형식을 사용할 때 발생했다. GFM에서는 이 형식을 지원하기 때문에 간혹 사용하려는데 이게 제대로 해석이 안되는 경우가 많다. 그렇다고 항상 안되는 것도 아니다. 원인은 알 수 없으나 octopress가 이럴 땐 맘에 들지 않는다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods : Sub Module에서 GoogleMaps 의존성 사용시 Transitive dependency 문제 해결]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library/"/>
    <updated>2015-11-17T13:19:25+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library</id>
    <content type="html"><![CDATA[<p><strong>아래에 설명한 방법을 사용시 런타임시에 문제가 될 수 있어 다른 방법을 찾고 있는 중이니 참고만 하길 바란다.</strong></p>

<p>지난 글 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 transitive dependencies 문제를 해결하는 방법을 설명하려고 한다. 미리 이야기 하지만 사실 아래의 내용은 아주 깔끔하게 해결하는 방법은 아니다. 정확한 해결이 되려면 CocoaPods에서 정식 지원을 해야 해결될 것으로 보인다. 하지만 임시로라도 사용을 해야 한다면 아래의 내용이 도움이 될지도 모르겠다(어쨌든 난 이렇게 사용중이다).</p>

<p>우선 왜 이 문제를 만나게 되었는지 부터 설명하려고 한다.
지난글에서 설명 했던 것과 같이 Sub Module에서 GoogleMaps에 대한 의존성을 지정 해야하는 상황이 발생했다. 그래서 아래와 같이 <code>podspec</code> 파일을 만들었다.</p>

<p><strong>ModuleName.podspec</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~<del>&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;<a href="mailto:nobody@nobody.com">nobody@nobody.com</a>&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://</del>~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/<em>.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/</em><em>/</em>.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;GoogleMaps&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>그런데 <code>[!] The &#39;Pods&#39; target has transitive dependencies that include static binaries: (/~~~/Pods/GoogleMaps/Frameworks/GoogleMaps.framework)</code> 오류가 발생한다(<strong>이전 글에서도 언급했지만 항상 발생하는 것이 아니라 Podfile에서 <code>use_frameworks!</code>를 사용할 경우에 발생한다.</strong>). 그래서 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 것처럼 <code>pre_install</code>을 사용해서 오류는 제거했다. 하지만 실제 작업을 위해 <code>import GoogleMaps</code>를 하면 모듈을 찾지를 못한다. 여기서 부터 삽질이 시작되었다.</p>

<p>static binaries를 포함하는 모듈이 아닌 경우 부모 프로젝트(Sub Module을 사용하는)에서 해당 의존성이 지정되어 있다면 바로 import해서 사용이 가능하다(부모 프로젝트의 Podfile에 <code>pod &#39;GoogleMaps&#39;</code>가 추가되어 있는 경우). 당연히 부모 프로젝트를 열어서 Sub Module을 수정하고 있는 경우를 말한다. 하지만 이 경우는 그것도 안된다(정확한 이유는 아직 모르겠다. static binaries를 포함하고 있어서 그런 것인지 GoogleMaps 모듈이 use_frameworks을 완전하게 지원하지 않아서 인지 명확하지는 않다). 따라서 어떻게 해서든 의존성을 지정해야 한다.</p>

<p>이를 해결하려고 여러가지 시도를 해봤으나 모두 실패했다. 그래서 다른 프로젝트들은 어떻게 해결했나 싶어 github에서 모듈들을 찾아다니다 <a href="https://github.com/poulpix/PXGoogleDirections">PXGoogleDirections</a>를 발견했다. 내가 원했던 것처럼 CocoaPods 모듈에서 GoogleMaps에 대한 의존성을 지정한 모듈이다(사실 다른 모듈들도 찾았으니 그냥 <code>dependency</code>를 사용하고 있었다. 이 모듈들은 확인해보니 나처럼 <code>use_frameworks!</code>를 사용하는 상황에서는 동일한 문제가 발생한다). 그래서 <a href="https://github.com/poulpix/PXGoogleDirections">PXGoogleDirections</a>의 소스를 조금 둘러보니 GoogleMaps의 소스를 프로젝트 내부에 포함하고 있었다. 사실 이 방법이 외부에서 사용시에는 가장 깔끔한 방법으로 보인다. 하지만 난 이렇게는 하고 싶지 않았다.</p>

<p>그래서 <a href="https://github.com/poulpix/PXGoogleDirections/blob/master/PXGoogleDirections.podspec">PXGoogleDirections.podspec</a>를 참고해서 여러 번의 시도 끝에 나름의 방법을 찾았다.</p>

<p>결론은 <code>podspec</code>파일을 아래와 같이 설정하면 된다. 단, <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 것처럼 <code>pre_install</code>을 사용해서 오류는 제거해야 한다.</p>

<p><strong>ModuleName.podspec</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~<del>&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;<a href="mailto:nobody@nobody.com">nobody@nobody.com</a>&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://</del>~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/<em>.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/</em><em>/</em>.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;GoogleMaps&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">frameworks</span>            <span class="o">=</span> <span class="s2">&quot;Accelerate&quot;</span><span class="p">,</span> <span class="s2">&quot;AVFoundation&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreBluetooth&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreData&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreLocation&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreText&quot;</span><span class="p">,</span> <span class="s2">&quot;Foundation&quot;</span><span class="p">,</span> <span class="s2">&quot;GLKit&quot;</span><span class="p">,</span> <span class="s2">&quot;ImageIO&quot;</span><span class="p">,</span> <span class="s2">&quot;OpenGLES&quot;</span><span class="p">,</span> <span class="s2">&quot;QuartzCore&quot;</span><span class="p">,</span> <span class="s2">&quot;Security&quot;</span><span class="p">,</span> <span class="s2">&quot;SystemConfiguration&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreGraphics&quot;</span><span class="p">,</span> <span class="s2">&quot;GoogleMaps&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">resource_bundles</span>      <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;GoogleMaps&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;$(PODS_ROOT)/GoogleMaps/Frameworks/GoogleMaps.framework/Resources/*.bundle&#39;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">vendored_frameworks</span>   <span class="o">=</span> <span class="s2">&quot;$(PODS_ROOT)/GoogleMaps/Frameworks/GoogleMaps.framework&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">xcconfig</span>              <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;FRAMEWORK_SEARCH_PATHS&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;$(PODS_ROOT)/GoogleMaps/Frameworks&#39;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>설명하자면 <code>dependency</code>를 통해 의존성을 설정한다. Cocoapods의 특성상 Sub Module의 의존성도 모두 <code>Pods</code>로 통합되어 추가된다(부모 프로젝트에서도 바로 사용 가능하다). 그런데 이렇게만 설정하면 정작 Sub Module에서는 GoogleMaps에 접근할 수 없으므로 관련된 설정을 <code>Pods</code>에 설치된 GoogleMaps에 맞추어준다. <code>frameworks</code>의 경우만 보더라도 GoogleMaps에서 이미 의존성이 다 지정되어 있음에도 불구하고 다시 다 설정해 주어야 한다(<a href="https://github.com/CocoaPods/Specs/blob/master/Specs/GoogleMaps/1.10.5/GoogleMaps.podspec.json">GoogleMaps.podspec.json</a> 참고)</p>

<p>어쨌든 이렇게 하면 문제는 해결된다. 서두에서 언급한 것처럼 내가 봐도 깔끔한 해결 방법은 아니다. 하지만 이런 불편함을 감수하고서라도 Sub Module로 분리하고 싶다면 위 방법을 참고하자. 원리를 보면 GoogleMaps가 아닌 다른 모듈(static binaries를 포함하는)도 동일하게 처리할 수 있다. 그리고 일단 Sub Module로 분리해서 사용하다 보면 CocoaPods에서 개선해줄 것으로 생각한다(관련되 Issue가 다수 존재하므로).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods : The 'Pods' target has transitive dependencies that include static binaries 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/"/>
    <updated>2015-11-17T13:17:38+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries</id>
    <content type="html"><![CDATA[<p>iOS용 앱 개발을 하면서 CocoaPods을 사용하고 있다. 그리고 CocoaPods을 이용해서 반복적인 기능의 구현을 Sub Module로 분리하여 프로젝트를 진행하고 있다. Sub Module 분리에 대해서는 <a href="http://blog.asamaru.net/2015/10/21/xcode-create-sub-module-using-cocoapods/">Xcode에서 CocoaPods를 이용해 sub module 만들기</a>에서 설명 했었다.</p>

<p>이렇게 만든 Sub Module에서 가지는 의존성은 <code>dependency</code> 속성을 이용해서 지정한다. 예를들면 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span>ModuleName.podspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~~~&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;nobody@nobody.com&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://~~~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/*.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/**/*.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;DependencyModuleName&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>그런데 이렇게 설정해서 사용할 경우 CocoaPods에서 아래와 같은 오류가 나는 경우가 있다. <strong>항상 발생하는 것이 아니라 Podfile에서 <code>use_frameworks!</code>를 사용할 경우에 발생한다.</strong></p>

<figure class='code notranslate'><figcaption><span>ModuleName.podspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[!]</span> <span class="no">The</span> <span class="s1">&#39;Pods&#39;</span> <span class="n">target</span> <span class="n">has</span> <span class="n">transitive</span> <span class="n">dependencies</span> <span class="n">that</span> <span class="kp">include</span> <span class="n">static</span> <span class="ss">binaries</span><span class="p">:</span> <span class="p">(</span><span class="sr">/~~~/</span><span class="no">Pods</span><span class="o">/</span><span class="no">DependencyModuleName</span><span class="o">/</span><span class="no">Frameworks</span><span class="o">/</span><span class="no">DependencyModuleName</span><span class="o">.</span><span class="n">framework</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>대표적으로 GoogleMaps 모듈을 <code>dependency</code>로 사용하면 이 오류를 만나게 된다. 이유를 간단하게 설명하자면 의존성을 지정한 모듈이 static binaries를 포함하고 있기 때문에 발생하는 오류다. 현재 사용중인 CocoaPods의 버전은 0.39.0인데 아직까지 이 상황에 대해서는 지원을 하지 않는 것으로 보인다. 이와 관련하여 <a href="https://github.com/CocoaPods/CocoaPods/issues/2926">Reject installation if a static library is used as a transitive dependency while using frameworks</a>라는 Issue가 진행중이다.</p>

<p>어쨌든 일단 CocoaPods에서 이 오류가 나지 않도록 하는 방법은 다음과 같다. 부모 프로젝트의 Podfile에 아래와 같이 추가 한다.</p>

<figure class='code notranslate'><figcaption><span>Podfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pre_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">installer</span><span class="o">.</span><span class="nf">verify_no_static_framework_transitive_dependencies</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>관련글 : <a href="https://github.com/CocoaPods/CocoaPods/issues/3289">Prevent Transitive Dependency Errors in Swift Project with Vendored Frameworks</a></p>

<p>pre_install를 이미 사용중이라면 거기에 def 라인만 추가하면 된다.</p>

<p>사실 이 방법은 일단 오류가 나오지 않도록 검사를 하지 않는 것일 뿐 근본적인 해결이 된 것은 아니다. 이와 관련한 해결 방법은 관련성이 있으나 다른 부분을 포함하고 있어 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library/">Cocoapods : Sub Module에서 GoogleMaps 의존성 사용시 Transitive dependency 문제 해결</a>에 따로 남긴다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode에서 storyboard 선택시 Crash가 발생할 경우]]></title>
    <link href="http://blog.asamaru.net/2015/11/16/xcode-crashes-when-selecting-the-main-storyboard/"/>
    <updated>2015-11-16T20:55:08+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/16/xcode-crashes-when-selecting-the-main-storyboard</id>
    <content type="html"><![CDATA[<p>최근엔 XCode로 작업하는 일이 많아졌다. 안드로이드 개발과 웹 개발도 함께하지만 iOS 작업이 급하다 보니 주로 이 일을 하고 있다.
XCode는 사용하면 할수록 잘 만들었다는 생각이 든다. 단, 코드 포멧팅 기능이 없다거나 소스 선택이 조금 부자연스럽다거나(이건 적응의 문제일 수 있다) 하는 것처럼 안드로이드 스튜디오에 비해 불편한 부분들이 있긴하다. 하지만 인터페이스 빌더 등의 도구들은 아주 잘 만들어져 있으며 결정적으로 빌드 속도가 무척 빨라서 좋다. 안드로이드 스튜디오도 지난 번에 적었던 <a href="http://blog.asamaru.net/2015/09/29/android-gradle-builds-speed-up/">Android Gradle 빌드 속도 높이기</a>에서 설명했던 것처럼 빌드 속도가 다소 개선되었지만 XCode에 비교도 되지 않는다.</p>

<p>인터페이스 빌더의 사용에 대해서는 개발자들 사이에서도 논란이 많다. 개발시 인터페이스 빌더를 사용할 것인가 하드 코딩으로 UI를 개발할 것인가? 둘 다 장단점이 있는 것은 명확하지만 개인적으로는 최대한 인터페이스 빌더를 사용하는 것이 옳다고 생각한다. 스토리보드와 같은 기능을 사용해서 앱 전체의 흐름을 파악하기 쉽도록 개발할 수 있으며 보여질 화면을 바로 보면서 작업하므로 개발 및 유지보수도 용이하다. 다만 인터페이스 빌더의 설정이 코드상에서 보여지지 못하므로 코드를 볼 때 혼란스럽게 보일 수는 있다. 그래서 나는 코드 흐름 상에서 중요한 요소는 인터페이스와 별개로 소스에서도 설정을 해주는 편이다(아주 중요할 경우만).</p>

<p>서론이 길어졌는데 오늘 이야기는 지금 부터다. 나름 선호하는 이 인터페이스 빌더에는 치명적인 약점이 있다. 이건 내가 XCode를 처음 접한 3버전대에서부터 현재의 7버전까지도 완전히 해결되지 않는 문제다. 그 약점은 바로 Crash가 잘 발생한다는 점과 설정이 엉키면 정말 난해한 상황을 만나게 된다는 것이다.</p>

<p>현재까지의 나의 해결법은 해당 부분을 통째로 지우고 새로 설정하는 것이다. 정말 최악의 방법이지만 항상 오랜 시간을 해결해 보려고 애써봐도 결론은 대부분 새로 작성하는 것이었다. 사실 이런 문제가 아주 빈번한 것은 아니지만 한번씩 발생하면 치명적이다(환장한다).</p>

<p>최근에는 작업을 하면서 <a href="https://www.jetbrains.com/objc/">AppCode</a>를 함께 사용하는 편인데 아무래도 jetbrains에서 만들다보니 단축키도 익숙하고 결정적인 코드 포멧팅 기능 때문에...
어쨌든 AppCode에서도 storyboard를 수정하려고하면 결국 XCode를 띄워준다.</p>

<p>이렇게 개발 도구를 섞어써서 그런건지 내가 뭔가를 잘못했는지는 몰라도 이번에 제대로 일이 벌어졌다. 옛날 같으면 nib파일이 따로 있어서 문제가 발생해도 그 파일만 새로 작업하면 되는데 이번엔 스토리보드로 작업되어 있었는데 그 파일을 선택만 해도 XCode가 죽는 것이다. 도저히 새로 작성한다는 것은 불가능 했다. 아직 개발 초기라 화면이 엄청 많은 것은 아니었지만 그래도 주요 화면들을 다 작성해 둔 상태라 다시 작성하기엔 무리였다.</p>

<p>그래서 인터넷에서 또 다시 해결 방법들을 찾아봤다. 사실 결론을 미리 이야기하자면 나는 아래의 방법들을 모두 시도해 보았으나 성공하지 못했다.  하지만 이 방법들로 효과를 봤다는 사람들이 있어서 기록성으로 한번 남겨두려고 한다.</p>

<p><strong>1. XML로 열기</strong></p>

<ul>
<li>스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Source Code&quot; 메뉴를 이용해 XML 코드를 편집기에서 연다.</li>
<li>의미없는 글자를 넣었다가 빼고 저장한다.</li>
<li>다시 스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Interface Builder - Storyboard&quot;로 다시 연다.</li>
</ul>

<p><strong>2. Autolayout 기능 끄기</strong></p>

<p>이 Autolayout에 대한 사람들의 이야기가 많았다. Autolayout이 새로 나오면서 많은 문제들이 있었던 것으로 보인다. 이제는 문제가 많이 줄어든 것으로 보이나 혹시나 도움이 될지도 모르겠다.</p>

<ul>
<li>스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Source Code&quot; 메뉴를 이용해 XML 코드를 편집기에서 연다.<br></li>
<li><code>useAutolayout=&quot;YES&quot;</code> 부분을 찾아 <code>useAutolayout=&quot;NO&quot;</code>로 변경한다.</li>
<li>다시 스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Interface Builder - Storyboard&quot;로 다시 연다.</li>
</ul>

<p><strong>3. xcuserdata 삭제</strong></p>

<ul>
<li>Xcode를 닫는다.</li>
<li>.xcodeproj, .xcworkspace 파일을 우클릭하여 &quot;패키지 내용보기&quot;를 선택한다.</li>
<li>xcuserdata 폴더를 삭제한다.</li>
</ul>

<p><strong>4. XCode 초기화</strong></p>

<p>이 방법은 XCode 설정을 초기화하는 것으로 권장하지는 않는다. 터미널에서 아래의 명령을 입력한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>defaults delete com.apple.dt.Xcode
</span></code></pre></td></tr></table></div></figure>

<p><strong>5. 오류 발생 부분 찾아 제거하기</strong></p>

<p>이 방법은 최후의 방법으로 내가 사용한 방법이다. storyboard 파일을 소스 상태(XML)로 열어 scene 단위로 삭제 해본다. 단, 삭제하기 전 원본 백업은 필수. 이렇게 하나씩 제거하면서 XCode에서 파일을 열어 시도해보면서 원인이 되는 scene을 찾는다. 원인이 되는 scene을 찾았다면 부분적으로 코드들을 제거해가면서 정확한 오류 지점을 찾는다. 운이 좋아 부분적 오류였다면 이 방법으로 최소한의 손실로 문제를 해결할 수 있다. 단, 찾을 수 없다면 해당 scene을 통째로 버려야 한다.</p>

<hr>

<p>결론적으로 명쾌한 답을 주지 못해 미안하지만 나도 아직은 답을 찾지 못했다. 오류가 발생할 때마다 열심히 애플에 오류 보고를 보내고 있지만 당연히 신속한 해결은 없다. 어쨌든 이런 문제를 만나지 않기를 바라며 혹시라도 문제가 발생한다면 위 방법들을 시도해보길 바란다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[안드로이드 Crash Report 도구 : ACRA에서 Fabric(Crashlytics)으로의 전환]]></title>
    <link href="http://blog.asamaru.net/2015/11/11/from-acra-to-fabric/"/>
    <updated>2015-11-11T20:33:16+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/11/from-acra-to-fabric</id>
    <content type="html"><![CDATA[<p>지난 글 <a href="http://blog.asamaru.net/2015/10/01/android-acra-please-configure-buildconfigclass-in-your-acra-config/">ACRA : Please configure &#39;buildConfigClass&#39; in your ACRA config 오류</a>와 <a href="http://blog.asamaru.net/2015/09/25/android-6-apache-http-client-removal/">Android 6(API 23 : marshmallow) : Apache HTTP 클라이언트 제거</a>에서 언급했던 것처럼 안드로이드 Crash Report 도구로 ACRA를 사용중이었다.
ACRA 사용중에 만난 오류를 해결하기 위해 시간을 들여서 원인을 찾고 개발자에게 전달해서 개선을 요청할 정도로 나름 애용하려던 도구였는데 오늘 <a href="https://fabric.io">Fabric(Crashlytics)</a>으로 바꿔버렸다.</p>

<p>사실 처음부터 대체할 목적이 있었던 것은 아니었다. 안드로이드용으로 제작된 앱을 iOS용으로도 제작할 일이 있어 개발을 진행하던 중 안드로이드의 ACRA 같은 도구가 iOS에도 있을 것이라는 생각에 몇가지를 찾아보고 있었다. 그때 눈에 띄는 것이 <a href="https://try.crashlytics.com/">Crashlytics</a> 였다(<a href="https://gist.github.com/rino0601/018c7f22aeb23cf2e2a0">Crashlytics 소개 + Android Studio에서 적용하는 방법</a>).</p>

<p>그런데 이 Crashlytics라는 서비스를 운영하는 회사가 트위터에 인수가 되었다(<a href="http://besuccess.com/2013/01/28496/">앱 충돌 리포트 서비스 Crashlytics, 트위터에 인수되다</a>). 그래서 조금 더 알아보니 트위터에서 <a href="https://fabric.io">Fabric</a>이라는 것을 새로 내놓았다.</p>

<p><a href="https://fabric.io">Fabric</a>이 무엇인지에 대해서는 트위터 한글 블로그의 &quot;<a href="https://blog.twitter.com/ko/2014/introducing-fabric-kr">패브릭(Fabric)을 소개합니다.</a>&quot;를 보면 잘 설명되어 있다.</p>

<blockquote>
<p>패브릭(Fabric)은 앱 개발자들이 흔히 직면하는 안정성, 사용자 확보, 수익성, 사용자 인증의 이슈들&gt;을 해결해 줄 세 가지의 모듈형 키트들로 이루어져 있습니다. 패브릭은 크래시리틱스(Crashlytics), 모펍(MoPub), 트위터 등의 서비스를 통합해 개발자들이 더 안정적인 앱을 만들도록 돕습니다. 패브릭은 앱 개발자들이 세계 최고의 모바일 애드 익스체인지(ad exchange)를 통해 수익을 확보할 수 있게 하며, 트위터 로그인 기능과 실시간 콘텐츠 스트림 기능을 통해 더 많은 사용자에 콘텐츠를 전달할 수 있게 하거나 더욱 간단히 사용자를 인증할 수 있도록 해줍니다.</p>
</blockquote>

<p>나는 우선 최초 목적이었던 iOS를 위한 Crash Report 도구의 설치를 위해 xcode 프로젝트에 <a href="https://fabric.io">Fabric</a>을 추가했다. 설치 과정은 복잡하지는 않으나 몇가지 설정할 부분들이 있어서 자칫 까다로워질 수 있지만 <a href="https://fabric.io">Fabric</a>에서 관련 도구를 워낙에 잘 제공 해줘서 시키는대로 따라만 하면 큰 무리없이 적용할 수 있다. &quot;기회가 되면 설치 과정을 글로 남길까?&quot; 생각했었지만 설치 도구가 워낙 잘되어 있어 &quot;굳이 내가 다시 설명할 필요가 있을까?&quot;라는 생각이다. 그 정도로 잘 되어있다. 다만 기본 설치 후 Debug 모드에서는 로그 수집을 하지 않도록 설정하는 등의 몇가지 안내가 필요한 부분들이 있는데 이건 시간이되면 따로 글을 남기려고 한다. 사실 이 부분도 메뉴얼로 모두 제공되고 있으나 막상 찾으려니 귀찮은 것들이다.</p>

<p>결론적으로는 아주 만족스러웠다. Crash Report가 잘되는 것은 물론이고 Hook을 걸 수 있도록 하는 기능도 제공되고 있어서 기존에 ACRA에서 연결해 두었던 자체 로그 수집기로도 기존처럼 정보를 전달하는 것이 가능했다(정확히 이야기 하자면 기존과 동일한 내용을 전달하는 것은 아니고 오류 발생 이벤트만 전달된다). 그리고 <a href="https://fabric.io">Fabric</a>에는 <a href="https://try.crashlytics.com/">Crashlytics</a> 외에도 <a href="https://answers.io/">Answers</a>라는 모듈도 함께 제공된다(사실 더 많은 것들이 있다). 이 모듈은 구글 어날리틱스 처럼 앱에 대한 이벤트를 수집하여 보고서를 제공해 준다. 결정적으로 이 모든 것이 무료.</p>

<p>그래서 안드로이드용 앱에서도 ACRA를 걷어내고 Fabric을 적용했다. 역시 아주 만족스럽다. ACRA에서 보내주는 무지막지한 Crash 로그 대신 잘 정리된 로그를 확인할 수 있게 되었다.</p>

<p>앞선 설명처럼 <a href="https://fabric.io">Fabric</a>에는 여러가지 모듈들이 있는데 이들 중 일부는 각각 독립적인 서비스를 가지고 있다(<a href="https://try.crashlytics.com/">Crashlytics</a>와 <a href="https://answers.io/">Answers</a> 처럼). 이 부분에 관련해서는 트위터 한글 블로그의 &quot;<a href="https://blog.twitter.com/ko/2014/introducing-fabric-kr">패브릭(Fabric)을 소개합니다.</a>&quot;의 내용 마지막에 아래와 같이 안내 되어있다.</p>

<blockquote>
<p>패브릭(Fabric)은 트위터만의 작품이 아닙니다. 패브릭(Fabric)이 가능하도록 키트(Kits)들의 관리, 설치, 업데이트에 관여하는 모든 SDK 벤더들이 만들어낸 것이라고 생각합니다. 당신이 SDK를 관리하는 사람이고, 트위터와 함께 일하고 싶다면 패브릭 파트너십 담당(<a href="mailto:partners@fabric.io">partners@fabric.io</a>)에 메일을 보내 주시길 바랍니다. 개발자 여러분들의 연락을 기다리고 있겠습니다.</p>
</blockquote>

<p>따라서 각각의 서비스를 사용해도 무방할 것으로 보인다. 하지만 <a href="https://fabric.io">Fabric</a>을 사용함으로써 통합 관리를 할 수 있으며 설치 과정이 아주 단순해진다.</p>

<p><strong>결론 : Crash Report 도구가 필요하다면, iOS와 Android 모두 한 곳에서 관리하고 싶다면, 사용자 이벤트 로깅도 하고 싶다면, <a href="https://fabric.io">Fabric</a>을 적극 추천하고 싶다.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android : is not translated in ... Lint Error 해결]]></title>
    <link href="http://blog.asamaru.net/2015/11/05/android-is-not-translated-in-dot-dot-dot-lint-error/"/>
    <updated>2015-11-05T14:27:23+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/05/android-is-not-translated-in-dot-dot-dot-lint-error</id>
    <content type="html"><![CDATA[<p>안드로이드에서 배포를 위한 빌드시에 아래와 같은 오류가 발생하는 경우가 있다. 상황에 따라 언어의 종류(en)는 다를 수 있다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error:(65) Error: "..." is not translated in "en" (English) [MissingTranslation]</span></code></pre></td></tr></table></div></figure>

<p>이 오류는 말그대로 다국어 지원에 대한 처리가 제대로 되어 있지 않다는 오류이다. 일반적으로 다국어 지원을 위한 별도의 처리를 한적이 없다면 이 오류는 발생하지 않는 것이 당연하다.
하지만 이번에 이 오류를 만나고 찾아보니 많은 개발자들이 이 문제를 겪는 것 같다. 사실 나는 다국어 지원에 관련된 별도의 처리를 한 상황이었으므로 이 오류를 만나는 것이 당연한 상황이었다.
어쨌든 인터넷에 찾아보면 대부분 다음과 같이 해결법을 제시하고 있다.</p>

<ul>
<li>Lint 관련 설정은 이클립스 메뉴의 Window - Preference - Android - Lint 에서 변경할 수 있는데요..  여기서 MissingTranslation 항목을 찾아 Severity를 warning으로 변경하면 됩니다.</li>
<li><a href="http://mytalkhome.tistory.com/816">Android Studio &quot;is not translated in &quot;en&quot; (English) [MissingTranslation]&quot; 오류 해결하기</a></li>
</ul>

<p>이 방법은 말그대로 제대로 처리되지 않은 부분을 오류에서 경고로 변경하여 빌드를 수행하는 것으로 좋지 못한 방법이다. 게다가 나의 경우는 OSX라서 그런지 안드로이드 스튜디오의 버전 때문인지 위치와 명칭이 많이 달랐다.</p>

<p>유사하지만 다른 방법도 있다. build.gradle에서 lint를 제외하는 것이다. <a href="http://stackoverflow.com/questions/20699147/gradle-build-fails-on-lint-task">gradle build fails on lint task</a></p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android {
</span><span class='line'>  lintOptions {
</span><span class='line'>      checkReleaseBuilds false
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

<p>그리고 또 다른 방법 한가지. <a href="http://stackoverflow.com/questions/28106875/missingtranslation-for-default-language-is-not-translated-in-en">MissingTranslation for default language ( “…” is not translated in “en”)</a>
이 방법은 Strings.xml에서 locale을 아예 미리 입력해 버리는 것이다. 위 오류에 맞추어 en이라고 했지만 자신의 상황에 맞게 입력해야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resources</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">tools:locale=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>당연히 문제의 원인을 정확히 파악하여 해결하는 것이 가장 좋은 방법이다.
당장 급하고 원인을 찾지 못하겠다면 위의 방법들을 쓸 수도 있겠지만 계속 저렇게 사용하는 것은 권장하고 싶지는 않다.</p>

<p>이제부터는 내가 문제를 만난 상황이다. 사실 나 또한 다국어를 지원할 필요가 있었던 것은 아니다. 다만 사용한 라이브러리 중 하나가 다국어를 지원하고 있었다.
따라서 한국어 부분은 <code>values-ko/strings.xml</code>파일로 분리되어서 처리되고 있었다. 이 상황에서 내가 필요한 것은 설정된 문장의 일부를 변경하는 것이었다.
그래서 내 프로젝트의 <code>values/strings.xml</code>에 필요한 문장들을 재정의 했다. 오류는 나지 않지만 적용되지 않는다. 다시 내 프로젝트에도 <code>values-ko/strings.xml</code> 파일을 만들고 필요한 부분을 재정의 했다.
여기서부터 문제의 시작이다. 아래의 오류가 발생한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>Error:(65) Error: &quot;...&quot; is not translated in &quot;ko&quot;
</span></code></pre></td></tr></table></div></figure>

<p><code>values-ko/strings.xml</code> 파일에 모든 내용을 넣지 않고 필요한 부분만 넣었으므로 나머지 부분이 번역되지 않았다고 오류가 나는 것이다. 간단한 해결 방법은 <code>values-ko/strings.xml</code> 파일에 <code>values/strings.xml</code>의 내용을 모두 복사해 넣어준다. 그런데 이 방법은 싫다. 둘다 한국어인데 굳이 두군데를 관리하고 싶지 않다. 이런 경우라면 아래와 같이 <code>tools:ignore=&quot;MissingTranslation&quot;</code>를 사용해서 문제를 해결할 수 있다.</p>

<p><strong>Strings.xml</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resources</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;<a href="http://schemas.android.com/tools">http://schemas.android.com/tools</a>&quot;</span>
</span><span class='line'>    <span class="na">tools:ignore=</span><span class="s">&quot;MissingTranslation&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>명확히 이 영역은 다국어 지원이 필요하지 않은 이므로 명시적으로 번역 누락을 무시하도록 하는 것이다. 어떻게 보면 상기 설명했던 오류를 무시하는 것과 같아 보일 수 있으나 이 방법은 무시할 범위를 명확히 인지하고 해당 영역만 필요에 의해 무시하도록 했다는 것이다.
단, 한가지 추가 작업이 필요하다. <code>values-ko/strings.xml</code> 파일에서 재정의 했던 항목들을 <code>values/strings.xml</code>에도 넣어주어야 한다는 것이다. 안그러면 아래와 같은 오류가 난다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>Error:(3) Error: &quot;XXX&quot; is translated here but not found in default locale [ExtraTranslation]
</span></code></pre></td></tr></table></div></figure>

<p>사실 불편함이 생기는 부분이지만 앞서 설명처럼 반대로 모두를 두군데서 관리하는 것보다 필요한 몇줄만 별도 관리하는 것을 선택했다.</p>

<p><strong>결론적으로 선택은 자유다. 위 방법들 중 필요에 맞게 선택해서 사용하면 되겠다.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 7.1의 StoryBoard에서 UIViewController(using Generics)를 Custom Class로 연결할 때 발생하는 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/04/xcode-storyboard-with-uiviewcontroller-using-generics/"/>
    <updated>2015-11-04T20:46:51+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/04/xcode-storyboard-with-uiviewcontroller-using-generics</id>
    <content type="html"><![CDATA[<p>현재 xcode의 최신 버전은 7.1이다. 이 버전에서(이하 버전은 확인하지 못했다) 스토리보드와 <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html">Generics</a>를 사용한 UIViewController를 연결하는 부분에서 버그가 있다. 버그는 인터페이스 빌더에서 찾지 못하는 문제와 강제 추가시 <code>Unknown class &lt;MyClass&gt; in Interface Builder file</code> 오류를 발생시키는 것이다. 자세한 내용은 아래에 설명하겠다.</p>

<p>일단 <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html">Generics</a>가 어떤 것인지 정보를 더 얻고 싶다면 <a href="http://minsone.github.io/mac/ios/swift-generics-summary/">Swift - Generics 정리</a>를 참고하자.</p>

<p>항상 이런 글을 쓰려고하면 상황을 설명하기가 어렵다. 그렇다고 설명없이 코드만 적어놓으면 어떻게 사용되는지를 알 수 없으니 일단 최선을 다해 보겠다.</p>

<p>UIPageViewController를 사용하고자 하는 상황을 가정하고 설명한다.</p>

<ol>
<li>스토리보드에서 &quot;Page View Controller&quot;를 추가했다.</li>
<li>그 다음에 해야할 작업은 UIPageViewController class를 하나 추가한다.</li>
<li>추가한 class를 인터페이스 빌더에서 Custom Class로 연결한다.</li>
</ol>

<p>위 상황의 결과가 아래의 이미지다. UIPageViewController class로 PageViewController라는 class를 추가한 것이다.</p>

<p><img src="http://blog.asamaru.net/img/2015-11/04-xcode-storyboard-with-uiviewcontroller-using-generics-1.png" alt="xcode"></p>

<p>비교를 위해 소스도 추가 한다. 사실 볼 것도 없다. 내부 기능은 설명에 필요하지 않아 모두 제거 했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewController</span><span class="p">:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>이 상황에서 빌드하고 실행하면 아무런 문제가 없다. 당연하다. 가장 일반적인 상황이니까.</p>

<p>이제부터가 내가 버그라고 주장하는 부분의 시작이다. 아래의 코드를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewController</span><span class="p">:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewControllerChild</span><span class="p">:</span> <span class="n">PageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="n">PageViewControllerT</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewControllerTChild</span><span class="p">:</span> <span class="n">PageViewControllerT</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>3개의 class를 추가했다. 하지만 여전히 아무런 기능은 없다. 이 상황에서 위의 이미지와 동일한 상황을 캡춰한 것이 아래 이미지다.</p>

<p><img src="http://blog.asamaru.net/img/2015-11/04-xcode-storyboard-with-uiviewcontroller-using-generics-2.png" alt="xcode"></p>

<p>비교가 되는가? 달라진 점은 우측의 Custom Class 영역의 Class에서 선택할 수 있는 대상 Class 목록이다.
그런데 위의 소스를 자세히 보고 이 이미지를 봤다면 뭔가 이상함을 느낄 것이다.</p>

<p><strong>바로 <code>PageViewControllerTChild</code>가 목록에 없다는 것이다.</strong> 내가 캡춰를 잘못한 것이 아니다. 실제로 나타나지 않는다.</p>

<p>그렇다면 이게 내가 말하고자 하는 버그인가? 아니다. 그냥 목록에만 나오지 않는 것이라면 조금 귀찮을 뿐 문제되지는 않는다.
자 이제 다시 테스트 해보자. 목록에는 없지만 실제로 class는 존재하므로 강제로 타이핑해서 <code>PageViewControllerTChild</code>를 집어 넣자.
다시 빌드하고 실행. 그런데 기존과 다르게 오류가 난다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mo">04</span> <span class="mi">21</span><span class="o">:</span><span class="mi">08</span><span class="o">:</span><span class="mf">24.886</span> <span class="n">Test</span><span class="p">[</span><span class="mi">32048</span><span class="o">:</span><span class="mi">90982</span><span class="p">]</span> <span class="n">Unknown</span> <span class="k">class</span> <span class="n">_TtC4Test24PageViewControllerTChild</span> <span class="k">in</span> <span class="n">Interface</span> <span class="n">Builder</span> <span class="n">file</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>

<p>앱을 죽이지는 않으나 해당 View가 아무것도 나오지 않는다.
오류의 내용은 인터페이스 빌더에서 알 수 없는 <code>_TtC4Test24PageViewControllerTChild</code> class에 접근 한다는 것.
이상한 일이다. 분명 해당 class는 존재한다. 오류에 나온 <code>_TtC4Test24PageViewControllerTChild</code>과 이름은 다르지만 분명 같은 class에 접근하려는 것이다.
이 문제가 바로 내가 버그라고 이야기하는 부분이다.</p>

<p>요약하자면 다음과 같다. <strong>Generics를 사용하는 UIViewController는 인터페이스 빌더에 연결되지 않는다.</strong></p>

<p>이 문제 하나로 인해 인터페이스 빌더와 스토리보드를 다 걷어내거나 이것만 따로 처리하기는 싫다.
자.. 이제부터 그럼 해결을 해보자. 해결을 위해서는 원인을 알아야 한다.</p>

<p>중요한 내용은 <a href="http://stackoverflow.com/a/1725893">“Unknown class <MyClass> in Interface Builder file” error at runtime</a>에 설명되어 있다.
이 글은 내가 말하는 Generics와 관련된 상황이 아닌 조금 더 일반적인 상황에 대한 것으로 약간의 차이가 있다. 하지만 거의 유사하므로 해결에 도움을 얻을 수 있었다.
게다가 기본적인 설명은 Objective-C 기준으로 되어있고 swift의 경우는 <code>init(coder aDecoder: NSCoder)</code>를 추가하는 것으로 설명하고 있지만 이 것은 위 문제를 해결하는 것에는 도움이 되지 않는다.
어쨌든 이 글의 결론을 이야기 하자면 이렇다. 인터페이스 빌더에서 해당 class를 제대로 찾지 못하고 있기 때문에 linking이 제대로 되지 못하고 있다는 것이다.
따라서 해당 class에 직접 접근하는 코드를 넣어주어야 한다는 것이다. 그래서 이 글에서는 불필요한 함수 하나를 추가하고 사용 전에 강제로 호출함으로써 문제를 해결할 수 있다고 되어 있다.</p>

<p>위 글에서 설명한 것을 기초로 해결을 위한 코드는 다음과 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="p">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="k">class</span> <span class="nl">AppDelegate</span><span class="p">:</span> <span class="bp">UIResponder</span><span class="p">,</span> <span class="bp">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">var</span> <span class="nl">window</span><span class="p">:</span> <span class="bp">UIWindow</span><span class="o">?</span>
</span><span class='line'><span class="c1">//   let x = PageViewControllerTChild.description()</span>
</span><span class='line'>
</span><span class='line'>  <span class="kr">override</span> <span class="k">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">super</span><span class="p">.</span><span class="k">init</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">PageViewControllerTChild</span><span class="p">.</span><span class="n">description</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application</span><span class="p">:</span> <span class="bp">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions</span><span class="p">:</span> <span class="p">[</span><span class="nl">NSObject</span><span class="p">:</span> <span class="n">AnyObject</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//       PageViewControllerTChild.description()</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p><strong>해결 방법은 AppDelegate의 <code>init()</code> 내부에서 <code>PageViewControllerTChild</code>의 함수를 하나 호출한다.</strong></p>

<p>호출하는 함수는 어떠한 것이라도 상관없다. 하지만 호출 시점은 아주 중요하다. 호출 시점은 해당 화면이 보여지기 전(초기화 전) 이어야 한다.
위 코드는 시작 화면으로 사용한 화면을 대상으로 하고 있기 때문에 <code>init()</code>에 추가 했다. 하지만 시작 화면이 아니라면 <code>func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&gt; Bool</code>에 추가되어도 상관없다. 하지만 어짜피 특별한 기능을 수행할 것이 아니므로 <code>init()</code>에 넣어주는게 속 편할 것이다. 앞서 설명과 같이 어떻게 넣을 수 있는지를 설명하기 위해서 비슷한 코드가 여러군데 있다(대신 주석으로 제외시켜 둔 것이다).</p>

<p>사실 나는 이 해결 방법을 고심해서 찾았지만 실제로는 적용하지 않았다. 설계 구조를 변경해서 Generics를 제거하는 쪽으로 결정했다. 필히 Generics이 필요한 상황이 아니었기 때문에 굳이 이렇게까지 할 필요는 없다고 생각했기 때문이다.</p>

<p>어쨌든 비슷한 문제를 겪고 있다면 위의 설명을 참고로 해결 방법을 찾길 바란다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift UIPageViewController에서 UIPageControl 오버랩하기]]></title>
    <link href="http://blog.asamaru.net/2015/11/03/swift-uipagecontrol-overlap/"/>
    <updated>2015-11-03T17:12:21+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/03/swift-uipagecontrol-overlap</id>
    <content type="html"><![CDATA[<p>UIPageViewController 사용시에 하단에 현재 페이지의 위치를 알려주는 UIPageControl가 별도의 공간을 차지하고 표시된다.</p>

<p><img src="http://blog.asamaru.net/img/2015-11-03-swift-uipagecontrol-overlap-1.png" alt="UIPageControl"></p>

<p>이 부분의 공간을 제거하고 내용 페이지의 위에 오버랩하려면 아래와 같이 <code>viewDidLayoutSubviews</code>에 필요한 소스를 추가하면 된다. 기본적으로 UIPageControl는 투명이라 자연스럽게 덮힌다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="nl">PageViewController</span><span class="p">:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">func</span> <span class="n">viewDidLayoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// UIPageControl overlap</span>
</span><span class='line'>      <span class="k">let</span> <span class="n">v</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span>
</span><span class='line'>      <span class="k">let</span> <span class="n">subviews</span> <span class="o">=</span> <span class="n">v</span><span class="p">.</span><span class="n">subviews</span>
</span><span class='line'>      <span class="k">var</span> <span class="nl">sv</span><span class="p">:</span> <span class="bp">UIView</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>      <span class="k">var</span> <span class="nl">pc</span><span class="p">:</span> <span class="bp">UIView</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>      <span class="k">for</span> <span class="nl">t</span><span class="p">:</span> <span class="bp">UIView</span> <span class="k">in</span> <span class="n">subviews</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">isKindOfClass</span><span class="p">(</span><span class="bp">UIScrollView</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">sv</span> <span class="o">=</span> <span class="n">t</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">isKindOfClass</span><span class="p">(</span><span class="bp">UIPageControl</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">pc</span> <span class="o">=</span> <span class="n">t</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">((</span><span class="n">sv</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pc</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">sv</span><span class="o">!</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">v</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>          <span class="n">v</span><span class="p">.</span><span class="n">bringSubviewToFront</span><span class="p">(</span><span class="n">pc</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nb">super</span><span class="p">.</span><span class="n">viewDidLayoutSubviews</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>Objective-c에서의 처리 방법은 <a href="http://stackoverflow.com/a/24851985">How do I make the bottom bar with dots of a UIPageViewController translucent?</a>를 참고.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android에서 runOnUiThread 작업이 종료 될 때까지 대기하기]]></title>
    <link href="http://blog.asamaru.net/2015/11/03/how-to-wait-for-android-runonuithread-to-be-finished/"/>
    <updated>2015-11-03T15:04:46+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/03/how-to-wait-for-android-runonuithread-to-be-finished</id>
    <content type="html"><![CDATA[<p>아래에서 설명하고자 하는 내용을 뭐라고 표현 해야할지 몰라서 &quot;Android에서 runOnUiThread 작업이 종료 될 때까지 대기하기&quot;라고 글 제목을 정했다.
내용을 요약하자면 thread에서 wait()과 notify()를 이용해서 runOnUiThread 작업이 종료될 때까지 대기하도록 하는 것이다. 쉽게 말해서 runOnUiThread는 main thread에서 처리되므로 비동기로 처리되게 되는데 필요한 작업이 완료되기 전까지 다른 처리를 대기시키는 것이다. 이렇게 설명하는 것도 정확한 설명은 아니다. 그냥 내가 하고자 했던 의도를 설명하고자 한 것이다. 따라서 정확한 의미와는 차이가 있다.</p>

<p>설명하기 어려워 이리저리 이야기 했는데 그냥 내가 하고자 했던 상황을 설명하는게 이해에 도움이 될 것 같다.</p>

<blockquote>
<p>PagerAdapter를 사용하는 상황에서 <code>java.lang.IllegalStateException: The application&#39;s PagerAdapter changed the adapter&#39;s contents without calling PagerAdapter#notifyDataSetChanged!</code> 오류가 발생한다. 이 문제가 발생하는 원인은 notifyDataSetChanged 호출 후 적용되기 전에 PagerAdapter의 데이터가 변경되었기 때문이다.</p>
</blockquote>

<p>보통의 경우 위의 상황이 자주 발생하지는 않는다. 나의 경우엔 PagerAdapter의 데이터가 UI에서 버튼 터치에 의해서 변경되는 상황이다. 상황을 조금 더 자세히 설명해야 할 것 같다.</p>

<ul>
<li>화면 상에 버튼 A, B가 있다.</li>
<li>A 버튼을 누르면 A 데이터 목록을 서버에서 가져와 PagerAdapter에 적용한다.</li>
<li><p>B 버튼을 누르면 B 데이터 목록을 서버에서 가져와 PagerAdapter에 적용한다.</p></li>
<li><p>A 버튼이 눌려진 후 서버에서 데이터를 가져와 PagerAdapter에 반영하고 notifyDataSetChanged()를 runOnUiThread 내부에서 호출했다. runOnUiThread 내부에서 호출하는 이유는 데이터의 변경시 UI가 변경되는 부분들이 있어서 main thread 오류를 막기 위해서 이다.</p></li>
<li><p>notifyDataSetChanged()가 적용되기 전에 버튼 B가 눌려지고 데이터를 가져와 PagerAdapter에 반영되었다.</p></li>
<li><p>notifyDataSetChanged()가 적용되면서 데이터의 변경을 감지하고 <code>java.lang.IllegalStateException: The application&#39;s PagerAdapter changed the adapter&#39;s contents without calling PagerAdapter#notifyDataSetChanged!</code> 오류가 발생한다.</p></li>
</ul>

<p>설명이 되었을런지 모르겠다. 앞서 말한 것과 같이 자주 발생하는 상황은 아니나 A, B 버튼을 번갈아 빠르게 터치하면 오류를 재현할 수 있다. 소스 코드를 올리면 더 이해가 쉬울 수 있는데 작업중인 소스들이 모두 섞여 있어 구분해서 남기는게 힘들어서 말로 설명했다.</p>

<p>일단 기존 소스와 해결된 소스부터 보자. 당연히 동작하는 소스는 아니다. 하지만 무엇을 하고 있는지를 확인하는데는 충분할 것으로 본다.</p>

<p><strong>오류가 발생하던 소스</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PreviewPagerAdapterBase</span><span class="o">&lt;</span><span class="n">T</span> <span class="kd">extends</span> <span class="n">DataItem</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">PagerAdapter</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Runnable</span> <span class="n">notifyDataSetChangedRunnalbe</span> <span class="o">=</span> <span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setItems</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">items</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">setItems</span><span class="o">(</span><span class="n">items</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Helper</span><span class="o">.</span><span class="na">runOnUiThread</span><span class="o">(</span><span class="k">new</span> <span class="nf">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>              <span class="kd">synchronized</span> <span class="o">(</span><span class="k">this</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">this</span><span class="o">.</span><span class="na">notify</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><strong>수정된 소스</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PreviewPagerAdapterBase</span><span class="o">&lt;</span><span class="n">T</span> <span class="kd">extends</span> <span class="n">DataItem</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">PagerAdapter</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Runnable</span> <span class="n">notifyDataSetChangedRunnalbe</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>          <span class="kd">synchronized</span> <span class="o">(</span><span class="k">this</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">this</span><span class="o">.</span><span class="na">notify</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">setItems</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">items</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">setItems</span><span class="o">(</span><span class="n">items</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">notifyDataSetChangedRunnalbe</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Helper</span><span class="o">.</span><span class="na">runOnUiThread</span><span class="o">(</span><span class="n">notifyDataSetChangedRunnalbe</span><span class="o">);</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">notifyDataSetChangedRunnalbe</span><span class="o">.</span><span class="na">wait</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">hasFirstItem</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>중요한 부분은 notifyDataSetChangedRunnalbe로 synchronized 처리하고 Runnable을 wait()한 다음 처리가 완료된 후 notify() 하는 것이다. 그리고 wait() 호출시 try 처리하고 있는데 InterruptedException이 발생할 수 있기 때문이다. 실제로 위에서 설명한 오류가 발생하는 상황에서는 InterruptedException이 대신 발생하는 것을 확인했다. 하지만 무시되어도 되는 상황이며 catch되었기 때문에 앱이 죽는 것은 막을 수 있다.</p>

<p>wait()와 notify()에 대해서는 <a href="http://warmz.tistory.com/370">Thread(쓰레드) - 동기화(Synchronized) / wait()와 notify()</a>를 참고하면 된다.</p>

<p>사실 위 방법은 <a href="http://stackoverflow.com/a/5996961">how to wait for Android runOnUiThread to be finished?</a>에서 참고한 것이다. 이 글을 보면 이 방법 외에도 여러가지 답변이 있다.</p>

<p>이 글은 정확한 이해를 하고 쓴 글이 아니므로 여러가지 문제가 있을 수 있다. 하지만 내가 원하는 문제에 대한 해결법이 되었기 때문에 기록성으로 글을 남겨둔다.
결론적으로 notifyDataSetChanged()를 명확히 적용하고 넘어 가야하는 상황에서는 위 방법이 도움이 될 수 있다. 그 외의 경우엔 UIThread의 작업을 굳이 sync 할 필요가 떠오르진 않는다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android.view.WindowManager$BadTokenException: Unable to add window 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/03/android-dot-view-dot-windowmanager/"/>
    <updated>2015-11-03T09:00:30+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/03/android-dot-view-dot-windowmanager</id>
    <content type="html"><![CDATA[<p>안드로이드에서 아래와 같은 오류가 나는 경우가 있다.</p>

<p><code>android.view.WindowManager$BadTokenException: Unable to add window -- token android.os.BinderProxy@420d8488 is not valid; is your activity running?</code></p>

<p>대부분은 Dialog를 띄우러고 할 때 발생한다. 소스로 보자면 아래와 같은 경우다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">context</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;알림&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;알림 메시지&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">setNegativeButton</span><span class="o">(</span><span class="s">&quot;취소&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<p>위 소스를 실행 했을 때 BadTokenException 오류가 발생한다면 대부분은 context에 Activity Context를 넣지 않고 Application Context를 넣었을 경우다. 이와 관련해서 <a href="http://blog.asamaru.net/2015/09/04/android-dialog-windowmanager-badtokenexception/">안드로이드에서 Dialog 사용시 WindowManager$BadTokenException 발생</a>이라는 글을 적은 적이 있었다. 이런 경우라면 처음부터 오류가 발생하기 때문에 발견하고 수정하기가 쉽다.</p>

<p>그런데 분명 Activity Context를 넣어주었음에도 불구하고 불특정하게 오류가 발생하는 상황이 있다. 나의 경우는 다음과 같은 상황에서 이 문제가 발생했다.</p>

<p>앱 시작시 splash 화면에서 네트워크 활성 여부를 검사해서 비활성(서버 접속 불가)되어 있다면 알림 Dialog를 띄우고 앱을 종료하도록 했다. 그런데 여기서 불특정하게 오류가 발생하여 앱이 알림 Dialog를 띄우지 못하고 죽어 버리는 현상이 발생했다.</p>

<p>ACRA를 통해 보고된 오류 메시지를 확인하니 위에서 언급했던 오류가 발생하고 있었다. 그래서 원인을 찾기 위해 소스 코드를 확인해 보았으나 아무리 봐도 문제가 될 부분을 찾을 수 없었다. 그래서 구글에서 관련 정보를 찾아보니 <a href="http://stackoverflow.com/a/18665887">“android.view.WindowManager$BadTokenException: Unable to add window” on buider.show()</a>에 원인과 해결 방법이 나와 있었다.</p>

<p>결론은 context의 null 검사 뿐만 아니라  <a href="http://developer.android.com/intl/ko/reference/android/app/Activity.html#isFinishing%28%29">isFinishing()</a>도 함께 검사 해줘야 한다는 것이다.</p>

<p>적용된 코드는 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">((</span><span class="n">context</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(!</span><span class="n">context</span><span class="o">.</span><span class="na">isFinishing</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">context</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;알림&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;알림 메시지&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">setNegativeButton</span><span class="o">(</span><span class="s">&quot;취소&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>사실 이것 만으로 오류가 모두 해결된 것인지는 확인하지 못했다(오류 재현이 너무 힘들다).   하지만 안드로이드에서 발생하는 비슷한 다른 오류들을 감안하면 이것이 원인이 맞을 것이라고 생각한다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[번역중] Android : Spans, a Powerful Concept]]></title>
    <link href="http://blog.asamaru.net/2015/11/02/android-spans-a-powerful-concept/"/>
    <updated>2015-11-02T20:12:10+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/02/android-spans-a-powerful-concept</id>
    <content type="html"><![CDATA[<p>안드로이드의 <a href="http://developer.android.com/intl/ru/reference/android/text/Spannable.html">Spannable</a>에 관련된 좋은 글이 있어 번역해 본다.
사실 부족한 영어 실력으로 번역이라기 보다 내용을 옮겨보는 정도라고 생각하면 될 듯하다(의역이 많다).</p>

<p><strong>게다가 아직은 번역중이다. 시간이 되는대로 조금씩 번역해 나갈 예정이다.</strong></p>

<blockquote>
<p><a href="http://flavienlaurent.com/blog/2014/01/31/spans/">Spans, a Powerful Concept.</a><br>
Jan 31st, 2014 6:09 pm<br>
<a href="https://github.com/flavienlaurent/spans">Github Sample : flavienlaurent/spans</a></p>
</blockquote>

<p>최근에, 나는 NewStand 앱과 ActionBar icon의 전환 효과에 대해 블로그에 남겼다. Cyril Mottier는 ActionBar의 title에 Spans을 사용하여 fade in/out하는 우아한 방법을 제안했다.</p>

<p>또한, 난 항상 사용 가능한 모든 종류의 Span(ImageSpan, BackgroundColorSpan 등)을 시도하고 싶었다. 그것들은 매우 유용하고 사용이 간단하지만 그것들에 대한 문서나 자세한 정보가 없었다.</p>

<p>그래서 이 문서에는 프레임워크의 Spans으로 무엇을 할 수 있는지 탐색하고, Spans으로 어떠한 새로운 것을 할 수 있는지 보여주고자 한다. <a href="https://github.com/flavienlaurent/spans/raw/master/sample.apk">sample application</a>를 다운받아 설치할 수 있다. 여기에서 <a href="https://github.com/flavienlaurent/spans">source</a>를 확인 할 수 있다.</p>

<h2 id="in-the-framework">In the framework</h2>

<h3 id="hierarchy">HIERARCHY</h3>

<p>Main rules:</p>

<ul>
<li>Span이 텍스트 문자 레벨에 영향을 미칠 경우, <a href="http://developer.android.com/reference/android/text/style/CharacterStyle.html">CharacterStyle</a>를 상속</li>
<li>Span이 단락 레벨에 영향을 미칠 경우, <a href="http://developer.android.com/reference/android/text/style/ParagraphStyle.html">ParagraphStyle</a>를 상속</li>
<li>Span이 텍스트 문자 레벨의 외형에 영향을 미칠 경우,
<a href="http://developer.android.com/reference/android/text/style/UpdateAppearance.html">UpdateAppearance</a>를 상속</li>
<li>Span이 단락 레벨의 외형에 영향을 미칠 경우, <a href="http://developer.android.com/reference/android/text/style/UpdateLayout.html">UpdateLayout</a>를 상속</li>
</ul>

<p>그것은 우리를 위해 다음과 같은 클래스 다이어그램을 제공합니다 :</p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-1.png" alt="cdcharacterstyle">  </p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-2.png" alt="cdparagraphstyle">  </p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-3.png" alt="cdupdateappearance">  </p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-4.png" alt="cdupdatelayout">  </p>

<p>그러나 이것은 조금 복잡하기 때문에 나는 class visualizer (like <a href="http://www.class-visualizer.net/">this</a>)를 사용하길 권한다.</p>

<h2 id="how-it-works">How it works?</h2>

<h3 id="layout">LAYOUT</h3>

<p>당신이 text를 TextView에 설정하고자 할때, <a href="http://developer.android.com/reference/android/text/Layout.html">Layout</a> base class를 사용하여 텍스트 렌더링을 관리한다.</p>

<p>Layout Class는 <code>mSpannedText</code>라는 boolean 값을 포함하고 있다: text가 <a href="http://developer.android.com/reference/android/text/Spanned.html">Spanned</a>(<a href="http://developer.android.com/reference/android/text/Spanned.html">Spanned</a>을 구현한 <a href="http://developer.android.com/reference/android/text/SpannableString.html">SpannableString</a>)의 인스턴스라면 true가 된다.
이 Class는 오직 ParagraphStyle Spans에만 동작한다.</p>

<p><a href="http://developer.android.com/reference/android/text/Layout.html#draw%28android.graphics.Canvas,%20android.graphics.Path,%20android.graphics.Paint,%20int%29">draw</a> method는 2개의 다른 method들을 호출한다:</p>

<ul>
<li>drawBackground</li>
</ul>

<p>For each line of text, if there is a <a href="http://developer.android.com/reference/android/text/style/LineBackgroundSpan.html">LineBackgroundSpan</a> for a current line, <a href="http://developer.android.com/reference/android/text/style/LineBackgroundSpan.html#drawBackground%28android.graphics.Canvas,%20android.graphics.Paint,%20int,%20int,%20int,%20int,%20int,%20java.lang.CharSequence,%20int,%20int,%20int%29">LineBackgroundSpan#drawBackground</a> is called.</p>

<ul>
<li>drawText</li>
</ul>

<p>For each line of text, it computes <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.html">LeadingMarginSpan</a> and <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.LeadingMarginSpan2.html">LeadingMarginSpan2</a> and calls <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.html#drawLeadingMargin%28android.graphics.Canvas,%20android.graphics.Paint,%20int,%20int,%20int,%20int,%20int,%20java.lang.CharSequence,%20int,%20int,%20boolean,%20android.text.Layout%29">LeadingMarginSpan#drawLeadingMargin</a> when it’s necessary. This is also where <a href="http://developer.android.com/reference/android/text/style/AlignmentSpan.html">AlignmentSpan</a> is used to determine the text alignment. Finally, if the current line is spanned, Layout calls TextLine#draw (a TextLine object is created for each line).</p>

<h3 id="textline">TEXTLINE</h3>

<p><a href="https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/text/TextLine.java">android.text.TextLine</a> documentation says: Represents a line of styled text, for measuring in visual order and for rendering.</p>

<p>TextLine class contains 3 sets of Spans:</p>

<ul>
<li>MetricAffectingSpan set</li>
<li>CharacterStyle set</li>
<li>ReplacementSpan set</li>
</ul>

<p>The interesting method is TextLine#handleRun. It’s where all Spans are used to render the text. Relative to the type of Span, TextLine calls:</p>

<ul>
<li><a href="http://developer.android.com/reference/android/text/style/CharacterStyle.html#updateDrawState%28android.text.TextPaint%29">CharacterStyle#updateDrawState</a> to change the TextPaint configuration for MetricAffectingSpan and CharacterStyle Spans.</li>
<li>TextLine#handleReplacement for ReplacementSpan. It calls <a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html#getSize%28android.graphics.Paint,%20java.lang.CharSequence,%20int,%20int,%20android.graphics.Paint.FontMetricsInt%29">Replacement#getSize</a> to get the replacement width, update the font metrics if it’s needed and finally call <a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html#draw%28android.graphics.Canvas,%20java.lang.CharSequence,%20int,%20int,%20float,%20int,%20int,%20int,%20android.graphics.Paint%29">Replacement#draw</a>.</li>
</ul>

<h3 id="fontmetrics">FONTMETRICS</h3>

<p>If you want to know more about what is font metrics, just look at the following schema:</p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-5.png" alt="fontmetrics">  </p>

<h2 id="playground">Playground</h2>

<h3 id="bulletspan">BULLETSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/BulletSpan.html">android.text.style.BulletSpan</a></p>

<p>The BulletSpan affects paragraph-level text formatting. It allows you to put a bullet on paragraph start.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public BulletSpan (int gapWidth, int color)</span>
</span><span class='line'><span class="cm">-gapWidth: gap in px between bullet and text</span>
</span><span class='line'><span class="cm">-color: bullet color (optionnal, default is transparent)</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//create a black BulletSpan with a gap of 15px</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BulletSpan</span><span class="o">(</span><span class="mi">15</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-6.png" alt="BulletSpan">  </p>

<h3 id="quotespan">QUOTESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/QuoteSpan.html">android.text.style.QuoteSpan</a></p>

<p>The QuoteSpan affects paragraph-level text formatting. It allows you to put a quote vertical line on a paragraph.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public QuoteSpan (int color)</span>
</span><span class='line'><span class="cm">-color: quote vertical line color (optionnal, default is Color.BLUE)</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//create a red quote</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">QuoteSpan</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-7.png" alt="QuoteSpan">  </p>

<h3 id="alignmentspan-standard">ALIGNMENTSPAN.STANDARD</h3>

<p><a href="http://developer.android.com/reference/android/text/style/AlignmentSpan.Standard.html">android.text.style.AlignmentSpan.Standard</a></p>

<p>The AlignmentSpan.Standard affects paragraph-level text formatting. It allows you to align (normal, center, opposite) a paragraph.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public Standard(Layout.Alignment align)</span>
</span><span class='line'><span class="cm">-align: alignment to set</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//align center a paragraph</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlignmentSpan</span><span class="o">.</span><span class="na">Standard</span><span class="o">(</span><span class="n">Layout</span><span class="o">.</span><span class="na">Alignment</span><span class="o">.</span><span class="na">ALIGN_CENTER</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-8.png" alt="AlignmentSpan">  </p>

<h3 id="underlinespan">UNDERLINESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/UnderlineSpan.html">android.text.style.UnderlineSpan</a></p>

<p>The UnderlineSpan affects character-level text formatting. It allows you to underline a character thanks to <a href="http://developer.android.com/reference/android/graphics/Paint.html#setUnderlineText%28boolean%29">Paint#setUnderlineText(true)</a>.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//underline a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">UnderlineSpan</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-9.png" alt="UnderlineSpan">  </p>

<h3 id="strikethroughspan">STRIKETHROUGHSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/StrikethroughSpan.html">android.text.style.StrikethroughSpan</a></p>

<p>The StrikethroughSpan affects character-level text formatting. It allows you to strikethrough a character thanks to <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrikeThruText%28boolean%29">Paint#setStrikeThruText(true)</a>.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//strikethrough a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StrikethroughSpan</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-10.png" alt="StrikethroughSpan">  </p>

<h3 id="subscriptspan">SUBSCRIPTSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/SubscriptSpan.html">android.text.style.SubscriptSpan</a></p>

<p>The SubscriptSpan affects character-level text formatting. It allows you to subscript a character by reducing the <a href="http://developer.android.com/reference/android/text/TextPaint.html#baselineShift">TextPaint#baselineShift</a> .</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//subscript a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SubscriptSpan</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-11.png" alt="SubscriptSpan">  </p>

<h3 id="superscriptspan">SUPERSCRIPTSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/SuperscriptSpan.html">android.text.style.SuperscriptSpan</a></p>

<p>The SuperscriptSpan affects character-level text formatting. It allows you to superscript a character by increasing the <a href="http://developer.android.com/reference/android/text/TextPaint.html#baselineShift">TextPaint#baselineShift</a> .</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//superscript a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SuperscriptSpan</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-12.png" alt="SuperscriptSpan">  </p>

<h3 id="backgroundcolorspan">BACKGROUNDCOLORSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/BackgroundColorSpan.html">android.text.style.BackgroundColorSpan</a></p>

<p>The BackgroundColorSpan affects character-level text formatting. It allows you to set a background color on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public BackgroundColorSpan (int color)</span>
</span><span class='line'><span class="cm">-color: background color</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set a green background</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BackgroundColorSpan</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-13.png" alt="BackgroundColorSpan">  </p>

<h3 id="foregroundcolorspan">FOREGROUNDCOLORSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/ForegroundColorSpan.html">android.text.style.ForegroundColorSpan</a></p>

<p>The ForegroundColorSpan affects character-level text formatting. It allows you to set a foreground color on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public ForegroundColorSpan (int color)</span>
</span><span class='line'><span class="cm">-color: foreground color</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set a red foreground</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ForegroundColorSpan</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-14.png" alt="ForegroundColorSpan">  </p>

<h3 id="imagespan">IMAGESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/ImageSpan.html">android.text.style.ImageSpan</a></p>

<p>The ImageSpan affects character-level text formatting. It allows you to a character by an image. It’s one of the few span that is well documented so enjoy it!</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//replace a character by pic1_small image</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ImageSpan</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">pic1_small</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-15.png" alt="ImageSpan">  </p>

<h3 id="stylespan">STYLESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/StyleSpan.html">android.text.style.StyleSpan</a></p>

<p>The StyleSpan affects character-level text formatting. It allows you to set a style (bold, italic, normal) on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public StyleSpan (int style)</span>
</span><span class='line'><span class="cm">-style: int describing the style (android.graphics.Typeface)</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set a bold+italic style</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StyleSpan</span><span class="o">(</span><span class="n">Typeface</span><span class="o">.</span><span class="na">BOLD</span> <span class="o">|</span> <span class="n">Typeface</span><span class="o">.</span><span class="na">ITALIC</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-16.png" alt="StyleSpan">  </p>

<h3 id="typefacespan">TYPEFACESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/TypefaceSpan.html">android.text.style.TypefaceSpan</a></p>

<p>The TypefaceSpan affects character-level text formatting. It allows you to set a font family (monospace, serif etc) on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public TypefaceSpan (String family)</span>
</span><span class='line'><span class="cm">-family: a font family</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set the serif family</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">TypefaceSpan</span><span class="o">(</span><span class="s">&quot;serif&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-17.png" alt="TypefaceSpan">  </p>

<h3 id="textappearancespan">TEXTAPPEARANCESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/TextAppearanceSpan.html">android.text.style.TextAppearanceSpan</a></p>

<p>The TextAppearanceSpan affects character-level text formatting. It allows you to set a appearance on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public  TextAppearanceSpan(Context context, int appearance, int colorList)</span>
</span><span class='line'><span class="cm">-context: a valid context</span>
</span><span class='line'><span class="cm">-appearance: text appearance resource (ex: android.R.style.TextAppearance_Small)</span>
</span><span class='line'><span class="cm">-colorList: a text color resource (ex: android.R.styleable.Theme_textColorPrimary)</span>
</span><span class='line'>
</span><span class='line'><span class="cm">public TextAppearanceSpan(String family, int style, int size, ColorStateList color, ColorStateList linkColor)</span>
</span><span class='line'><span class="cm">-family: a font family</span>
</span><span class='line'><span class="cm">-style: int describing the style (android.graphics.Typeface)</span>
</span><span class='line'><span class="cm">-size: text size</span>
</span><span class='line'><span class="cm">-color: a text color</span>
</span><span class='line'><span class="cm">-linkColor: a link text color</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set the serif family</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">TextAppearanceSpan</span><span class="o">(</span><span class="k">this</span><span class="cm">/*a context*/</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">style</span><span class="o">.</span><span class="na">SpecialTextAppearance</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p>styles.xml
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">&quot;SpecialTextAppearance&quot;</span> <span class="na">parent=</span><span class="s">&quot;@android:style/TextAppearance&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textColor&quot;</span><span class="nt">&gt;</span>@color/color1<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textColorHighlight&quot;</span><span class="nt">&gt;</span>@color/color2<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textColorHint&quot;</span><span class="nt">&gt;</span>@color/color3<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textColorLink&quot;</span><span class="nt">&gt;</span>@color/color4<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textSize&quot;</span><span class="nt">&gt;</span>28sp<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textStyle&quot;</span><span class="nt">&gt;</span>italic<span class="nt">&lt;/item&gt;</span>
</span><span class='line'><span class="nt">&lt;/style&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-18.png" alt="TextAppearanceSpan">  </p>

<h3 id="absolutesizespan">ABSOLUTESIZESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/AbsoluteSizeSpan.html">android.text.style.AbsoluteSizeSpan</a></p>

<p>The AbsoluteSizeSpan affects character-level text formatting. It allows you to set an absolute text size on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public AbsoluteSizeSpan(int size, boolean dip)</span>
</span><span class='line'><span class="cm">-size: a size</span>
</span><span class='line'><span class="cm">-dip: false, size is in px; true, size is in dip (optionnal, default false)</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set text size to 24dp</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">AbsoluteSizeSpan</span><span class="o">(</span><span class="mi">24</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-19.png" alt="AbsoluteSizeSpan">  </p>

<h3 id="relativesizespan">RELATIVESIZESPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/RelativeSizeSpan.html">android.text.style.RelativeSizeSpan</a></p>

<p>The RelativeSizeSpan affects character-level text formatting. It allows you to set an relative text size on a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public RelativeSizeSpan(float proportion)</span>
</span><span class='line'><span class="cm">-proportion: a proportion of the actual text size</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//set text size 2 times bigger</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">RelativeSizeSpan</span><span class="o">(</span><span class="mf">2.0f</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-20.png" alt="RelativeSizeSpan">  </p>

<h2 id="scalexspan">SCALEXSPAN</h2>

<p><a href="http://developer.android.com/reference/android/text/style/ScaleXSpan.html">android.text.style.ScaleXSpan</a></p>

<p>The ScaleXSpan affects character-level text formatting. It allows you to scale on x a character.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public ScaleXSpan(float proportion)</span>
</span><span class='line'><span class="cm">-proportion: a proportion of actual text scale x</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//scale x 3 times bigger</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ScaleXSpan</span><span class="o">(</span><span class="mf">3.0f</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-21.png" alt="ScaleXSpan">  </p>

<h3 id="maskfilterspan">MASKFILTERSPAN</h3>

<p><a href="http://developer.android.com/reference/android/text/style/MaskFilterSpan.html">android.text.style.MaskFilterSpan</a></p>

<p>The MaskFilterSpan affects character-level text formatting. It allows you to set a <a href="http://developer.android.com/reference/android/graphics/MaskFilter.html">android.graphics.MaskFilter</a> on a character.</p>

<p><strong>Warning: BlurMaskFilter is not supported with hardware acceleration.</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">public MaskFilterSpan(MaskFilter filter)</span>
</span><span class='line'><span class="cm">-filter: a filter to apply</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Blur a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MaskFilterSpan</span><span class="o">(</span><span class="k">new</span> <span class="nf">BlurMaskFilter</span><span class="o">(</span><span class="n">density</span><span class="o">*</span><span class="mi">2</span><span class="o">,</span> <span class="n">BlurMaskFilter</span><span class="o">.</span><span class="na">Blur</span><span class="o">.</span><span class="na">NORMAL</span><span class="o">));</span>
</span><span class='line'><span class="c1">//Emboss a character</span>
</span><span class='line'><span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MaskFilterSpan</span><span class="o">(</span><span class="k">new</span> <span class="nf">EmbossMaskFilter</span><span class="o">(</span><span class="k">new</span> <span class="kt">float</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span> <span class="o">},</span> <span class="mf">0.4f</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mf">3.5f</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>

<p><strong>BlurMaskFilter</strong></p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-22.png" alt="MaskFilterSpan">  </p>

<p><strong>EmbossMaskFilter with a blue ForegroundColorSpan and a bold StyleSpan</strong></p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-23.png" alt="MaskFilterSpan">  </p>

<h2 id="pushing-spans-to-the-next-level">Pushing Spans to the next level</h2>

<h3 id="animate-the-foreground-color">ANIMATE THE FOREGROUND COLOR</h3>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-24.gif" alt="AnimateSpan">  </p>

<p>ForegroundColorSpan is read-only. It means that you can’t change the foreground color after instanciation. So, the first thing to do is to code a MutableForegroundColorSpan.</p>

<p>MutableForegroundColorSpan.java
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MutableForegroundColorSpan</span> <span class="kd">extends</span> <span class="n">ForegroundColorSpan</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">mAlpha</span> <span class="o">=</span> <span class="mi">255</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">mForegroundColor</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MutableForegroundColorSpan</span><span class="o">(</span><span class="kt">int</span> <span class="n">alpha</span><span class="o">,</span> <span class="kt">int</span> <span class="n">color</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">color</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mAlpha</span> <span class="o">=</span> <span class="n">alpha</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mForegroundColor</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MutableForegroundColorSpan</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">src</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">src</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mForegroundColor</span> <span class="o">=</span> <span class="n">src</span><span class="o">.</span><span class="na">readInt</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mAlpha</span> <span class="o">=</span> <span class="n">src</span><span class="o">.</span><span class="na">readInt</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeToParcel</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">dest</span><span class="o">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">writeToParcel</span><span class="o">(</span><span class="n">dest</span><span class="o">,</span> <span class="n">flags</span><span class="o">);</span>
</span><span class='line'>        <span class="n">dest</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="n">mForegroundColor</span><span class="o">);</span>
</span><span class='line'>        <span class="n">dest</span><span class="o">.</span><span class="na">writeFloat</span><span class="o">(</span><span class="n">mAlpha</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">updateDrawState</span><span class="o">(</span><span class="n">TextPaint</span> <span class="n">ds</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ds</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">getForegroundColor</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * @param alpha from 0 to 255</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAlpha</span><span class="o">(</span><span class="kt">int</span> <span class="n">alpha</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mAlpha</span> <span class="o">=</span> <span class="n">alpha</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setForegroundColor</span><span class="o">(</span><span class="kt">int</span> <span class="n">foregroundColor</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mForegroundColor</span> <span class="o">=</span> <span class="n">foregroundColor</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">float</span> <span class="nf">getAlpha</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mAlpha</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getForegroundColor</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Color</span><span class="o">.</span><span class="na">argb</span><span class="o">(</span><span class="n">mAlpha</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">(</span><span class="n">mForegroundColor</span><span class="o">),</span> <span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">(</span><span class="n">mForegroundColor</span><span class="o">),</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">(</span><span class="n">mForegroundColor</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Now, we can change alpha or foreground color on the same instance. But when you set those properties, it doesn’t refresh the View: you have to do this manually by re-setting the SpannableString.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MutableForegroundColorSpan</span> <span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MutableForegroundColorSpan</span><span class="o">(</span><span class="mi">255</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'><span class="n">spannableString</span><span class="o">.</span><span class="na">setSpan</span><span class="o">(</span><span class="n">span</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">text</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">Spanned</span><span class="o">.</span><span class="na">SPAN_EXCLUSIVE_EXCLUSIVE</span><span class="o">);</span>
</span><span class='line'><span class="n">textView</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">spannableString</span><span class="o">);</span>
</span><span class='line'><span class="c1">//here the text is black and fully opaque</span>
</span><span class='line'><span class="n">span</span><span class="o">.</span><span class="na">setAlpha</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'><span class="n">span</span><span class="o">.</span><span class="na">setForegroundColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">);</span>
</span><span class='line'><span class="c1">//here the text hasn&#39;t changed.</span>
</span><span class='line'><span class="n">textView</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">spannableString</span><span class="o">);</span>
</span><span class='line'><span class="c1">//finally, the text is red and translucent</span>
</span></code></pre></td></tr></table></div></figure>

<p>Now, we want to animate the foreground color. We use a custom <a href="http://developer.android.com/reference/android/util/Property.html">android.util.Property</a>.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Property</span><span class="o">&lt;</span><span class="n">MutableForegroundColorSpan</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">MUTABLE_FOREGROUND_COLOR_SPAN_FC_PROPERTY</span> <span class="o">=</span>
</span><span class='line'><span class="k">new</span> <span class="n">Property</span><span class="o">&lt;</span><span class="n">MutableForegroundColorSpan</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;(</span><span class="n">Integer</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">&quot;MUTABLE_FOREGROUND_COLOR_SPAN_FC_PROPERTY&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="n">MutableForegroundColorSpan</span> <span class="n">span</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">span</span><span class="o">.</span><span class="na">setForegroundColor</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Integer</span> <span class="nf">get</span><span class="o">(</span><span class="n">MutableForegroundColorSpan</span> <span class="n">span</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">span</span><span class="o">.</span><span class="na">getForegroundColor</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>

<p>Finally, we animate the custom property with an <a href="http://developer.android.com/reference/android/animation/ObjectAnimator.html">ObjectAnimator</a>. Don’t forget to refresh the View on update.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MutableForegroundColorSpan</span> <span class="n">span</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MutableForegroundColorSpan</span><span class="o">(</span><span class="mi">255</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'><span class="n">mSpannableString</span><span class="o">.</span><span class="na">setSpan</span><span class="o">(</span><span class="n">span</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">text</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">Spanned</span><span class="o">.</span><span class="na">SPAN_EXCLUSIVE_EXCLUSIVE</span><span class="o">);</span>
</span><span class='line'><span class="n">ObjectAnimator</span> <span class="n">objectAnimator</span> <span class="o">=</span> <span class="n">ObjectAnimator</span><span class="o">.</span><span class="na">ofInt</span><span class="o">(</span><span class="n">span</span><span class="o">,</span> <span class="n">MUTABLE_FOREGROUND_COLOR_SPAN_FC_PROPERTY</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">);</span>
</span><span class='line'><span class="n">objectAnimator</span><span class="o">.</span><span class="na">setEvaluator</span><span class="o">(</span><span class="k">new</span> <span class="nf">ArgbEvaluator</span><span class="o">());</span>
</span><span class='line'><span class="n">objectAnimator</span><span class="o">.</span><span class="na">addUpdateListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ValueAnimator</span><span class="o">.</span><span class="na">AnimatorUpdateListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationUpdate</span><span class="o">(</span><span class="n">ValueAnimator</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//refresh</span>
</span><span class='line'>        <span class="n">mText</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">mSpannableString</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="n">objectAnimator</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<h2 id="actionbar-‘fireworks’">ACTIONBAR ‘FIREWORKS’</h2>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-25.gif" alt="FIREWORKS">  </p>

<p>The ‘fireworks’ animation is to make letter fade in randomly. First, cut the text into multiple spans (for example, one span by character) and fade in spans after spans. Using the previously introduced MutableForegroundColorSpan, we are going to create a special object representing a group of span. And for each call to setAlpha on the group, we randomly set the alpha for each span.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">FireworksSpanGroup</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="kt">float</span> <span class="n">mAlpha</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">MutableForegroundColorSpan</span><span class="o">&gt;</span> <span class="n">mSpans</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="nf">FireworksSpanGroup</span><span class="o">(</span><span class="kt">float</span> <span class="n">alpha</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mAlpha</span> <span class="o">=</span> <span class="n">alpha</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mSpans</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">MutableForegroundColorSpan</span><span class="o">&gt;();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addSpan</span><span class="o">(</span><span class="n">MutableForegroundColorSpan</span> <span class="n">span</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">span</span><span class="o">.</span><span class="na">setAlpha</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">mAlpha</span> <span class="o">*</span> <span class="mi">255</span><span class="o">));</span>
</span><span class='line'>        <span class="n">mSpans</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">span</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Collections</span><span class="o">.</span><span class="na">shuffle</span><span class="o">(</span><span class="n">mSpans</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAlpha</span><span class="o">(</span><span class="kt">float</span> <span class="n">alpha</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">mSpans</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">total</span> <span class="o">=</span> <span class="mf">1.0f</span> <span class="o">*</span> <span class="n">size</span> <span class="o">*</span> <span class="n">alpha</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">MutableForegroundColorSpan</span> <span class="n">span</span> <span class="o">=</span> <span class="n">mSpans</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span><span class="o">(</span><span class="n">total</span> <span class="o">&gt;=</span> <span class="mf">1.0f</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">span</span><span class="o">.</span><span class="na">setAlpha</span><span class="o">(</span><span class="mi">255</span><span class="o">);</span>
</span><span class='line'>                <span class="n">total</span> <span class="o">-=</span> <span class="mf">1.0f</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">span</span><span class="o">.</span><span class="na">setAlpha</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">total</span> <span class="o">*</span> <span class="mi">255</span><span class="o">));</span>
</span><span class='line'>                <span class="n">total</span> <span class="o">=</span> <span class="mf">0.0f</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">float</span> <span class="nf">getAlpha</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">mAlpha</span><span class="o">;</span> <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>We create a custom property to animate the alpha of a FireworksSpanGroup.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Property</span><span class="o">&lt;</span><span class="n">FireworksSpanGroup</span><span class="o">,</span> <span class="n">Float</span><span class="o">&gt;</span> <span class="n">FIREWORKS_GROUP_PROGRESS_PROPERTY</span> <span class="o">=</span>
</span><span class='line'><span class="k">new</span> <span class="n">Property</span><span class="o">&lt;</span><span class="n">FireworksSpanGroup</span><span class="o">,</span> <span class="n">Float</span><span class="o">&gt;(</span><span class="n">Float</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">&quot;FIREWORKS_GROUP_PROGRESS_PROPERTY&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="n">FireworksSpanGroup</span> <span class="n">spanGroup</span><span class="o">,</span> <span class="n">Float</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">spanGroup</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Float</span> <span class="nf">get</span><span class="o">(</span><span class="n">FireworksSpanGroup</span> <span class="n">spanGroup</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">spanGroup</span><span class="o">.</span><span class="na">getProgress</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>

<p>Finally, we create the group and animate it with an ObjectAnimator.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">FireworksSpanGroup</span> <span class="n">spanGroup</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">FireworksSpanGroup</span><span class="o">();</span>
</span><span class='line'><span class="c1">//init the group with multiple spans</span>
</span><span class='line'><span class="c1">//spanGroup.addSpan(span);</span>
</span><span class='line'><span class="c1">//set spans on the ActionBar spannable title</span>
</span><span class='line'><span class="c1">//mActionBarTitleSpannableString.setSpan(span, start, end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span>
</span><span class='line'><span class="n">spanGroup</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
</span><span class='line'><span class="n">ObjectAnimator</span> <span class="n">objectAnimator</span> <span class="o">=</span> <span class="n">ObjectAnimator</span><span class="o">.</span><span class="na">ofFloat</span><span class="o">(</span><span class="n">spanGroup</span><span class="o">,</span> <span class="n">FIREWORKS_GROUP_PROGRESS_PROPERTY</span><span class="o">,</span> <span class="mf">0.0f</span><span class="o">,</span> <span class="mf">1.0f</span><span class="o">);</span>
</span><span class='line'><span class="n">objectAnimator</span><span class="o">.</span><span class="na">addUpdateListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ValueAnimator</span><span class="o">.</span><span class="na">AnimatorUpdateListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationUpdate</span><span class="o">(</span><span class="n">ValueAnimator</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//refresh the ActionBar title</span>
</span><span class='line'>        <span class="n">setTitle</span><span class="o">(</span><span class="n">mActionBarTitleSpannableString</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="n">objectAnimator</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

<h2 id="draw-with-your-own-span">DRAW WITH YOUR OWN SPAN</h2>

<p>In this section, we are going to see a way to draw via a custom Span. This opens interesting perspectives for text customization.</p>

<p>First, we have to create a custom Span that extends the abstract class <a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html">ReplacementSpan</a>.</p>

<p>If you only want to draw a custom background, you can implements <a href="http://developer.android.com/reference/android/text/style/LineBackgroundSpan.html">LineBackgroundSpan</a> which is at paragraph-level.</p>

<p>We have to implement 2 methods:</p>

<ul>
<li><a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html#getSize%28android.graphics.Paint,%20java.lang.CharSequence,%20int,%20int,%20android.graphics.Paint.FontMetricsInt%29">getSize</a>: this method returns the new with of your replacement.</li>
</ul>

<p>text: text managed by the Span</p>

<p>start: start index of text</p>

<p>end: end index of text</p>

<p>fm: font metrics, can be null</p>

<ul>
<li><a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html#draw%28android.graphics.Canvas,%20java.lang.CharSequence,%20int,%20int,%20float,%20int,%20int,%20int,%20android.graphics.Paint%29">draw</a>: it’s here you can draw with the Canvas.</li>
</ul>

<p>x: x-coordinate where to draw the text</p>

<p>top: top of the line</p>

<p>y: the baseline</p>

<p>bottom: bottom of the line</p>

<p>Let’s see an example where we draw a blue rectangle around the text.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSize</span><span class="o">(</span><span class="n">Paint</span> <span class="n">paint</span><span class="o">,</span> <span class="n">CharSequence</span> <span class="n">text</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">end</span><span class="o">,</span> <span class="n">Paint</span><span class="o">.</span><span class="na">FontMetricsInt</span> <span class="n">fm</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//return text with relative to the Paint</span>
</span><span class='line'>    <span class="n">mWidth</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">paint</span><span class="o">.</span><span class="na">measureText</span><span class="o">(</span><span class="n">text</span><span class="o">,</span> <span class="n">start</span><span class="o">,</span> <span class="n">end</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mWidth</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">(</span><span class="n">Canvas</span> <span class="n">canvas</span><span class="o">,</span> <span class="n">CharSequence</span> <span class="n">text</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">end</span><span class="o">,</span> <span class="kt">float</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">top</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">bottom</span><span class="o">,</span> <span class="n">Paint</span> <span class="n">paint</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//draw the frame with custom Paint</span>
</span><span class='line'>    <span class="n">canvas</span><span class="o">.</span><span class="na">drawRect</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">top</span><span class="o">,</span> <span class="n">x</span> <span class="o">+</span> <span class="n">mWidth</span><span class="o">,</span> <span class="n">bottom</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-26.png" alt="DRAW WITH YOUR OWN SPAN">  </p>

<h2 id="bonus">BONUS</h2>

<p>The Sample app contains some examples of pushing Spans to the next level like:</p>

<ul>
<li>Progressive blur</li>
</ul>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-27.gif" alt="Progressive blur">  </p>

<ul>
<li>Typewriter</li>
</ul>

<p><img src="http://blog.asamaru.net/img/2015-11-02-android-spans-a-powerful-concept-28.gif" alt="Typewriter">  </p>

<h2 id="conclusion">Conclusion</h2>

<p>Working on this article, I realised Spans are really powerfull and like Drawables, I think they are not used enough. Text is the main content of an application, it’s everywhere so don’t forget to make it more dynamic and attractive with Spans!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 7.1에서 Google Maps SDK 사용시 빌드가 되지 않는 결함]]></title>
    <link href="http://blog.asamaru.net/2015/11/02/google-maps-sdk-with-xcode-7-dot-1-bug/"/>
    <updated>2015-11-02T16:57:18+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/02/google-maps-sdk-with-xcode-7-dot-1-bug</id>
    <content type="html"><![CDATA[<p>얼마전 iOS 앱 개발에 사용하던 xcode를 7.1로 업데이트 했다. 그런데 앱에서 사용중이던 Google Maps SDK가 빌드되지 못해 앱을 실행할 수가 없었다. 문제는 header 생성 부분인데 해결 방법을 찾지 못해 다시 7.0을 재설치해서 사용하고 있었다. 그렇게 지내던 중 오늘 갑자기 생각이 나서 다시 확인해 봤다. 다행히 그 사이에 Google에서 update를 내 놓았다. 이 문제가 수정된 버전은 1.10.5 버전이다. 그리고 관련된 issue는 <a href="https://code.google.com/p/gmaps-api-issues/issues/detail?id=8524&amp;can=1&amp;q=Could%20not%20build%20Objective-C%20module&amp;colspec=ID%20Type%20Status%20Introduced%20Fixed%20Summary%20Stars%20ApiType%20Internal">Issue 8524: Bug: Running under Xcode 7 beta 6 with Google Maps SDK results in broken debugging.</a>이다.</p>

<p>오류 메시지는 <code>Include of non-modular header inside framework module &#39;GoogleMaps&#39;</code>이다.</p>

<p>대략 아래의 이미지처럼 오류가 난다(이미지는 캡춰하기 귀찮아 인터넷에 있는 이미지를 가져왔다).</p>

<p><img src="http://blog.asamaru.net/img/2015-11-02-google-maps-sdk-with-xcode-7-dot-1-bug-1.png" alt="오류"></p>

<p>혹 xcode 7.1 사용시 이런 오류가 나온다면 Google Maps SDK를 1.10.5 이상으로 업데이트 후 빌드 해보기 바란다.</p>

<p>이 문제에 대한 원인은 처음 오류를 만났을 때 다른 사람들이 이야기하는 것을 봤었는데 정확한 내용이 기억이 나지 않는다. 대충 기억이 나는 것은 xcode가 7.1로 버전업 되면서 swift 모듈에 header 처리하는 부분이 변경되었다고 했던 것 같은데... 나중에라도 원인을 알게되면 다시 남기도록 하겠다.</p>

<p>Apple Developer Forums에서 나온 <a href="https://forums.developer.apple.com/thread/23554">Include of non-modular header inside framework module</a> issue도 있다. 혹시 GoogleMaps가 아닌 모듈에서 동일한 오류가 난다면 참고.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android apk download / decompile 하기]]></title>
    <link href="http://blog.asamaru.net/2015/11/02/android-online-apk-download-and-decompile/"/>
    <updated>2015-11-02T12:27:06+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/02/android-online-apk-download-and-decompile</id>
    <content type="html"><![CDATA[<p>오늘은 <a href="https://play.google.com/store">Google Play</a>에서 apk 파일을 다운 받는 방법과 apk 파일을 decompile하는 방법을 소개하려고 한다.
일반적인 상황에서는 apk를 받거나 decompile 할 일은 거의 없다. 하지만 안드로이드 개발을 하다보면 필요해지는 경우가 있다. 나의 경우는 ACRA를 이용해서 서비스 앱에서 crash가 발생하면 오류를 보고하도록 해두고 사용한다. 그런데 proguard를 사용해서 난독화가 되어 있다보니 오류 메시지만 보고는 어디에서 발생한 오류인지 확인할 수 없다. 그래서 서비스 중이 apk를 다운 받아 decompile해서 오류 위치를 파악한다. 배포 전에 apk 파일을 따로 보관해두는 방법도 있으나 귀찮아서 일일이 보관하지 않고 있다. 소스야 Git에서 tagging을 해두기 때문에 해당 버전을 바로 확인할 수 있지만 proguard가 적용되면서 package 등을 모두 바꾸게 되어 있어서 서비스 중인 apk가 따로 필요하다.</p>

<p>본론으로 들어가서 일단 APK 파일을 받으려면 <a href="http://apk-dl.com/">Online Google Play APK Downloader</a>를 사용하면 된다. 사이트에 가서 원하는 앱의 package명을 넣으면 다운 받아진다. 간혹 실패하는 경우가 있으나 다시 시도하면 대부분은 받아진다.</p>

<p>받아진 apk 파일을 decompile 하려면 <a href="http://www.decompileandroid.com/">Android APK Decompiler</a>를 사용하면 된다. 다운 받은 파일을 업로드하면 잠시 후에 Manifest 파일 정보와 함께 다운로드 링크가 나온다. 다운 받으면 소스가 zip로 압축되어 있으니 압축을 풀어서 보면 된다. 당연히 완벽한 소스로 복구되지는 않는다. 하지만 오류 위치를 파악하거나 하는 경우에는 충분한 소스가 나온다.</p>

<p>물론 위의 사이트들을 사용해야만 가능한 일들은 아니다. apk 다운로드의 경우 별도의 app도 있고 decompile의 경우도 shell에서 직접할 수 있다. 하지만 위 사이트들을 사용하면 간단하게 처리가 가능하니 필요하다면 한번 쯤은 사용해 봐도 좋을 듯하다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[구글앱스 관리자 비밀번호 초기화]]></title>
    <link href="http://blog.asamaru.net/2015/10/29/google-apps-admin-password-reset/"/>
    <updated>2015-10-29T14:14:03+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/29/google-apps-admin-password-reset</id>
    <content type="html"><![CDATA[<p>얼마 전에 구글앱스의 관리자 비밀번호를 초기화 해야 할 일이 있었다. 지금은 이미 <a href="https://admin.google.com/scanmon.net/VerifyAdminAccountPasswordReset">구글앱스가 유료화</a>되었지만 예전에 50인 이하에 대해서는 무료였다. 그 당시에 내 개인적으로 사용하기 위한 구글앱스와 회사용으로 1개를 만들어 두었었다. 그런데 회사용으로 만들어 두었던 것을 사용하지 않다가 다시 사용하려고 했더니 비밀번호를 알 수가 없었다. 더 정확히는 관리자 아이디도 뭐로 했었는지도 기억이 나지 않았다. 그래서 관리자를 초기화하려고 했으나 도저히 메뉴를 찾을 수가 없었다.</p>

<p>관련된 정보를 한참을 찾아다니다가 겨우 방법을 찾아서 기록해둔다.</p>

<p>방법은 간단하다. 아래의 주소에서 &quot;YOUR_APPS_DOMAIN.COM&quot; 대신에 개설시 사용했던 도메인을 넣고 방문하면 소유주 확인을 위한 &quot;도메인 확인&quot; 화면이 나온다.</p>

<p><code>https://admin.google.com/YOUR_APPS_DOMAIN.COM/VerifyAdminAccountPasswordReset</code></p>

<p>이 화면에서 안내하는대로 따라가면 관리자 비밀번호를 초기화 할 수 있다. 스샷을 넣으려고 하다가 도메인 등을 지우기 귀찮아서 넣지 않았다. 사실 화면도 단순해서 큰 어려움은 없다. 게다가 화면이 언제 바뀔지도 모르고.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java setChunkedStreamingMode를 php-fpm 서버와 연결할 때 발생하는 문제]]></title>
    <link href="http://blog.asamaru.net/2015/10/29/java-setchunkedstreamingmode-with-php-fpm-problem/"/>
    <updated>2015-10-29T12:22:02+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/29/java-setchunkedstreamingmode-with-php-fpm-problem</id>
    <content type="html"><![CDATA[<p><a href="http://blog.asamaru.net/2015/10/01/android-acra-please-configure-buildconfigclass-in-your-acra-config/">ACRA : Please configure &#39;buildConfigClass&#39; in your ACRA config 오류</a>에서  http 접속시 <code>setChunkedStreamingMode</code>를 사용하면 request의 body가 수신되지 못하는 문제를 언급하고 Github에 <a href="https://github.com/ACRA/acra/issues/310#issuecomment-151826809">issue로 등록</a> 했었다. 그런데 어제 ACRA로 부터 답변을 받았다.
간단히 요약하자면 &quot;일반적인 상황에 대한 문제가 아니므로 수정 해 줄 수 없다.&quot;라는 것이다. 게다가 자신의 생각을 바꾸려면 정당한 근거를 제시하란다. 안그래도 영어가 안되서 겨우 report했는데 근거를 달라니...
현재로써는 ACRA를 대체할만한 라이브러리를 찾지 못했기 때문에 어떻게든 방법을 찾아보려고 노력했다. 우선 proxy 상황에서만 문제가 되므로 apache에서 해결 방법이 있을 것이라고 생각하고 자료를 찾아봤다. 이와 관련된 문제와 해결 방법은 무수히 많았지만 정작 해결이 되는 자료는 찾을 수 없었다. 찾았던 정보 중에 도움이 될만한  것들을 링크하고 싶지만 다시 찾으려니 못찾겠다. 구글에서 &quot;http chunked proxy&quot;와 같은 키워드들로 검색하면 무지하게 나온다. 그중 그나마 기억에 남아있는 것 몇가지만 아래에 언급하려고 한다.</p>

<p>일단 nginx를 web 서버로 사용하는 경우라면 <a href="http://serverfault.com/a/408131">Enabling Chunked Uploading in Nginx</a>를 참고하면 해결이 될지도 모르겠다. nginx는 현재 사용을 검토중이고 서비스 서버에 적용되지 않은 상황이라 적용해서 테스트해보지는 못했다.</p>

<p>내가 사용하는 apache에 대해서는 해결 방법을 찾지는 못했지만 관련된 bug report가 된 것이 있었다. <a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=55475">mod_proxy breaks HTTP chunked transfer coding</a>. 사실 정확히 동일한 문제는 아니지만 mod_proxy와 관련이 있어서 내용을 봤다. 2.4.8버전에 수정되었다는 말이 있어서 apache도 버전업해서 확인 했지만 도움이 되지는 못했다. php-fpm을 사용하면서 mod_proxy_fcgi를 사용하고 있는데 여기에 문제인 것으로 추정만 하고 있다.</p>

<p><a href="https://gnunet.org/book/export/html/1932">Configuring HTTP(S) reverse proxy functionality using Apache or nginx</a>라는 글도 있으나 역시 도움이 되지 않았다.</p>

<p>그 외에도 무수히 많은 자료를 봤지만 대부분 SenEnv를 사용해서 인자를 넘겨주는 방법들을 제시했는데 모두 해결에 도움이 되지 않았다. 결국 내 서버를 수정하는 것은 방법이 없다는 결론을 내리고 ACRA에 다시 요청했다.</p>

<p>요청 내용은 이렇다.</p>

<blockquote>
<p><code>setChunkedStreamingMode</code>를 사용하는 것은 proxy 상황에서 정상적인 동작을 하지 않는 웹 서버들이 많으니 <code>setFixedLengthStreamingMode</code> 함수로 교체하는 것이 어떠냐?</p>
</blockquote>

<p>사실 ACRA의 경우는 소스를 보면 굳이 <code>setChunkedStreamingMode</code>를 사용할 필요는 없다. 전송할 내용을 미리 다 생성해 놓았기 때문에 길이를 알 수 있는 상황이기 때문이다. 따라서 <code>setFixedLengthStreamingMode</code>를 사용해도 되며 실제로 테스트 결과 정상적으로 값을 받을 수 있었다. 가급적 ACRA를 custom해서 사용하는 것은 피하고 싶으므로 이 요구를 ACRA 측에서 받아들여 줬으면 한다.</p>

<p>마지막으로 <code>setChunkedStreamingMode</code>와 <code>setFixedLengthStreamingMode</code>에 관련된 내용은 <a href="https://byunsooblog.wordpress.com/2013/03/26/urlconnection-httpurlconnection/">URLConnection &amp; HttpURLConnection</a>에서 <code>HttpURLconnection</code>를 설명하는 과정에 나와있다.</p>

<p>내용을 일부를 발췌하여 아래에 추가해 둔다.</p>

<blockquote>
<p><strong>Posting Content</strong></p>

<p>데이터를 웹 서버로 보내기 위해, setDoOutput(true)를 써서 커넥션을 구성한다.</p>

<p>setFixedLengthStreamingMode(int),setChunkedStreamingMode(int)</p>

<ul>
<li>좋은 성능을 위해서, 이 둘 중 하나의 함수를 불러야 한다.</li>
<li>setFixedLengthStreamingMode() : body의 길이를 미리 알고있을때 쓴다.</li>
<li>setChunkedStreamingMode(int) : body의 길이를 모를 때 쓴다.</li>
<li>안그러면 HttpURLConnection은 전송되기전에 완성된 request body를 메모리 buffer에 넣도록 강요된다.

<ul>
<li>이건 heap을 낭비하는 일이고 지연시간을 늘리는 일이다.</li>
</ul></li>
</ul>
</blockquote>

<p>첨언 : 방금 ACRA 측의 답변을 받았다. 다행히 나의 요구사항을 수용해서 패치를 완료했단다. <a href="https://github.com/ACRA/acra/pull/318">Configuring request length instead of using chunked streaming mode.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[카카오톡 링크를 requirejs(AMD)와 함께 사용시 발생하는 오류]]></title>
    <link href="http://blog.asamaru.net/2015/10/27/kakaotalk-share-link-with-requirejs-error/"/>
    <updated>2015-10-27T14:23:28+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/27/kakaotalk-share-link-with-requirejs-error</id>
    <content type="html"><![CDATA[<p>어제 고객으로부터 사용중인 페이지에서 카카오톡 링크가 동작하지 않는다는 보고를 받았다.
확인해 보니 안드로이드 크롬 브라우저에서 <code>탐색이 차단됨: intent:kakaolink://send?appkey=TGIF&amp;appver=1.0&amp;apiver=3.0&amp;linkver=3.5&amp;extras=%7B%2…b.io%22%7D&amp;objs=%5B%5D&amp;forwardable=false#Intent;package=com.kakao.talk;end;</code>라는 오류를 발생시키면서 기능이 정상적으로 동작하지 않았다. 웃긴건 해당 링크를 빠르게 여러번 클릭하면 한번씩 동작한다는 것. 이 문제는 항상 발생한다기 보다 특수한 경우에 발생하는 것으로 보인다.</p>

<p>아래의 코드를 보자. 오류를 kakao에 전달하기 위해 github에 페이지도 하나 만들어 두었다. <a href="https://asamaru7.github.io/requirejs-test/index2.html">https://asamaru7.github.io/requirejs-test/index2.html</a>
그리고 kakao api가 버전업되면 상황이 달라질 수도 있다. 현재는 v1.0.49다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">data</span><span class="o">-</span><span class="nx">main</span><span class="o">=</span><span class="s2">&quot;app2&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/require.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">test1</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">requirejs</span><span class="p">([</span><span class="s2">&quot;kakao&quot;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">Kakao</span><span class="p">,</span> <span class="nx">print</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">Kakao</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="s1">&#39;TGIF&#39;</span><span class="p">);</span>
</span><span class='line'>                  <span class="nx">Kakao</span><span class="p">.</span><span class="nx">Link</span><span class="p">.</span><span class="nx">sendTalkLink</span><span class="p">({});</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="err">탐색이</span> <span class="err">차단됨</span> <span class="err">오류</span> <span class="err">테스트</span> <span class="o">:</span> <span class="err">스마트폰에서</span> <span class="err">테스트</span><span class="o">&lt;</span><span class="err">/h1&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> <span class="nx">onclick</span><span class="o">=</span><span class="s2">&quot;test1();&quot;</span><span class="o">&gt;</span><span class="nx">KAKAO</span> <span class="nx">link</span><span class="o">&lt;</span><span class="err">/button&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>이 코드를 모바일 크롬 브라우저에서 확인하면 위의 오류를 볼 수 있다.
추정하는 상황은 이렇다. 브라우저에서 팝업창을 열려고 할 경우 사용자의 액션(클릭 이벤트)의 스코프를 벗어나서 <code>window.open</code>을 하려고하면 보안상의 이유로 팝업을 기본적으로 차단한다. 이것 또한 동일한 원인으로 예상된다. requirejs를 통해 kakao js를 호출하고 완료되면 동작을 실행하므로 스코프를 벗어나게 된다. 그렇기에 크롬에서 해당 링크를 차단시켜버리는 것으로 추정하고 있다. 현재로써는 이 문제를 해결하려면 kakao js의 호출과 init을 액션(클릭 이벤트)이 발생하기 이전에 해주는 방법 밖에 없다.</p>

<p>이 부분에 관련한 오류 보고를 개발자 센터에 등록했지만 kakao에서도 어쩔 수 없을 것으로 생각된다.</p>

<p><strong>하지만 정작 하고자 하는 이야기는 지금 부터다.</strong></p>

<p>사실 이 문제를 확인하다가 다른 오류를 만났다. 이와 관련된 오류 보고는 이미 수개월 전에 <a href="https://devtalk.kakao.com/t/amd-requirejs/10948">kakao 개발자 센터에 보고</a>되어 있었다.</p>

<p>요약하자만 이렇다. AMD(requirejs)를 사용해서 Kakao 모듈을 로드하고 나면 그 후 최초로 호출(require)되는 모듈은 <code>Uncaught Error: Mismatched anonymous define() module: function (){return dt}</code> 오류가 나면서 불려지지 않는다. 이를 해결하는 방법은 오류 보고에서 나왔던 것 처럼 dummy 모듈을 kakao 모듈 호출 후 한번 불러주는 것이다. 실제로 효과가 있고 나 또한 이렇게 임시 처리해서 서비스 중이다(찜찜하지만 현재로써는 다른 방법이 없다). 정확하게 이야기하자면 js 호출 시점이 문제가 아니라 init 함수 호출 직후부터 위 문제가 발생한다.</p>

<p>아래는 샘플 코드다. 이대로 넣으면 안되고 어떻게 처리하는지 흐름만 참고하기 바란다. 중요한 포인트는 init 직후 DUMMY 모듈을 한번 호출한다는 것이다. 당연히 DUMMY는 정의되지 않은 모듈이다. 불필요한 js 호출이 싫다면 실제로 dummy를 만들어 두고 호출해도 상관없다. 그리고 아래 코드에서는 kakao js를 호출하는 부분이 빠져있는데 당연히 불러줘야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">kakaoApiInit</span> <span class="o">==</span> <span class="s1">&#39;undefined&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">Kakao</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="s1">&#39;apikey&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">kakaoApiInit</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="p">{</span> <span class="nx">require</span><span class="p">([</span><span class="s1">&#39;DUMMY&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{});</span> <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">Kakao</span><span class="p">.</span><span class="nx">Link</span><span class="p">.</span><span class="nx">sendTalkLink</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><strong>사실 당황스러운 것은 이런 오류가 발생한다는 것보다 관련된 오류 보고가 수개월 전에 되었음에도 불구하고 아직 해결이되지 않았다는 것이다.</strong> kakao 개발자 측에서는 오류 재현이 되지 않으니 샘플 코드를 올려달라는 것이다. 이미 문제를 제기한 사람이 정확한 상황을 제시 했음에도 불구하고 재현을 하지 못한다니... 의아스럽다.</p>

<p>처음엔 나도 일단은 그냥 이대로 두려고 했다. 하지만 아무래도 찝찝해서 오늘 시간을 내서 kakao에서 원하는 샘플 코드를 친절히(?) 작성해서 오류 보고에 댓글로 추가해 두었다. 앞으로의 kakao의 대응을 지켜보겠지만 사실 이미 실망스럽다. 비단 이번 오류가 아니더라도 예전에도 다수의 kakao api 오류를 접해 본 입장에서 다수가 사용하게되는 api에서 어이없는 오류가 발생하고 대처가 미흡하다는 점이 실망스럽다는 것이다. 그래서 안쓰고 싶지만 고객이 원하니 그럴수도 없고...</p>

<p>어쨌든 빠르게 수정되기를 바라며 혹시 동일한 문제를 겪는 개발자가 있다면 위의 방법대로 임시 처리라도 하기 바란다.</p>

<p><strong>첨언 : 2015/10/30</strong></p>

<p>얼마전 KAKAO로 부터 답변을 받았다. 보내준 샘플을 확인해서 문제가 될만한 부분을 찾았으며 다음번 패치에 수정이 되도록 하겠다고 한다. 다만 &quot;탐색이 차단됨&quot; 문제는 오류 재현이 되지 않아 확인을 못했다고하여 기종과 브라우저 버전 등에 대한 상세 정보를 다시 보냈다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ANSI text를 HTML로 변환하기]]></title>
    <link href="http://blog.asamaru.net/2015/10/26/ansi-to-html/"/>
    <updated>2015-10-26T14:38:36+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/26/ansi-to-html</id>
    <content type="html"><![CDATA[<p>지난 글 <a href="http://blog.asamaru.net/2015/10/23/php-cli-ansi-colors/">PHP를 CLI에서 사용시 ANSI Colors 적용하기</a>에서 php cli에서 ANSI를 사용해서 출력하는 것에 대해 설명했었다. 이번엔 ANSI text를 HTML로 변환하는 것에 대해서 설명하려고 한다.
이게 왜 필요할까? ANSI는 shell에서만 색상이 적용되므로 해당 내용을 text 파일로 저장해서 다른 곳에서 열어보면 ANSI code가 그대로 보이거나 일반 text로 보인다. 따라서 결과물을 색상을 포함해서 다른 곳에 공유하기가 어렵다.
나의 경우는 ANSI를 html로 변환해서 chrome에서 열고 pdf로 출력헤서 사용했다.</p>

<p>그럼 본론으로 들어가서 어떻게 하면 되는가? 여러가지 방법이 있다. PHP를 사용하는 방법, Bash script를 사용하는 방법, 특정 프로그램을 사용하는 방법 등 많지만 오늘은 그 중에서 몇가지만 소개하려고 한다.</p>

<p>우선 지난 번에 PHP에서 ANSI를 생성하는 것을 설명했으니 PHP 부터 보자.</p>

<p><a href="https://github.com/sensiolabs/ansi-to-html">ansi-to-html</a> 라이브러리를 사용해서 변환할 수 있다. 자세한 설명은 해당 사이트를 참고하면 자세히 나와 있다.</p>

<p>다음은 Bash script.</p>

<p><a href="http://pablomarin-garcia.blogspot.kr/2011/04/converting-ansi-to-html-how-to-convert.html">converting ANSI to HTML. How to convert to html the colored shell output</a>를 참고하면 Perl CPAN을 사용하는 방법과 <a href="http://www.pixelbeat.org/scripts/ansi2html.sh">ansi2html.sh from pixelbeat</a> Bash script를 사용하는 방법을 안내하고 있다.
하지만 이 스크립트는 크게 권장하고 싶지는 않다. 간단한 내용엔 문제가 되지 않는데 text 양이 많아지니 너무 느렸다(300kb 가량).</p>

<p>마지막으로 <a href="https://github.com/theZiz/aha">aha</a>를 사용하는 방법이다. 링크를 따라가면 github의 aha repository를 볼 수 있다. 설명은 설치 방법만 나와 있는데 아주 심플하다. 그래서 아래에 직접 사용한 방법을 조금 더 설명하겠다.</p>

<p>centos 기준으로 아래와 같이 설치가 가능하다. 우분투라면 <code>sudo apt-get install aha</code>로 설치가 가능하다고 설명하는 사람이 있는데 확인은 못했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su -
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/theZiz/aha.git
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>install
</span></code></pre></td></tr></table></div></figure>

<p>사용법은 help를 보면 아래와 같이 나온다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Ansi Html Adapter Version 0.4.8.0
</span><span class='line'>aha takes SGR-colored Input and prints W3C conform HTML-Code
</span><span class='line'>use: aha &lt;options&gt; <span class="o">[</span>-f file<span class="o">]</span>
</span><span class='line'>     aha <span class="o">(</span>--help<span class="p">|</span>-h<span class="p">|</span>-?<span class="o">)</span>
</span><span class='line'>aha reads the Input from a file or stdin and writes HTML-Code to stdout
</span><span class='line'>options: --black,      -b: Black Background and White <span class="s2">&quot;standard color&quot;</span>
</span><span class='line'>         --pink,       -p: Pink Background
</span><span class='line'>         --stylesheet, -s: Use a stylesheet instead of inline styles
</span><span class='line'>         --iso X,    -i X: Uses ISO 8859-X instead of utf-8. X must be 1..16
</span><span class='line'>         --title X,  -t X: Gives the html output the title <span class="s2">&quot;X&quot;</span> instead of
</span><span class='line'>                           <span class="s2">&quot;stdin&quot;</span> or the filename
</span><span class='line'>         --line-fix,   -l: Uses a fix <span class="k">for</span> inputs using control sequences to
</span><span class='line'>                           change the cursor position like htop. It<span class="s1">&#39;s a hot fix,</span>
</span><span class='line'><span class="s1">                           it may not work with any program like htop. Example:</span>
</span><span class='line'><span class="s1">                           echo q | htop | aha -l &gt; htop.htm</span>
</span><span class='line'><span class="s1">         --word-wrap,  -w: Wrap long lines in the html file. This works with</span>
</span><span class='line'><span class="s1">                           CSS3 supporting browsers as well as many older ones.</span>
</span><span class='line'><span class="s1">         --no-header,  -n: Don&#39;</span>t include header into generated HTML,
</span><span class='line'>                           useful <span class="k">for</span> inclusion in full HTML files.
</span><span class='line'>Example: aha --help <span class="p">|</span> aha --black &gt; aha-help.htm
</span><span class='line'>         Writes this <span class="nb">help </span>text to the file aha-help.htm
</span><span class='line'>
</span><span class='line'>Copyleft Alexander Matthes aka Ziz 2015
</span><span class='line'>         zizsdl@googlemail.com
</span><span class='line'>         http://ziz.delphigl.com/tool_aha.php
</span><span class='line'>This application is subject to the MPL or LGPL.
</span></code></pre></td></tr></table></div></figure>

<p>간단한 사용법은 다음과 같다. 기타 옵션들은 몇가지 안되니 바로 보면 된다(사실상 사용할 일이 거의 없을 거 같다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls -ahl <span class="p">|</span> aha &gt; result.html
</span><span class='line'>
</span><span class='line'><span class="c"># 또는</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>aha -f <span class="o">{</span>ANSI 파일<span class="o">}</span> &gt; result.html
</span></code></pre></td></tr></table></div></figure>

<p>나는 이 방법을 사용했다. 일단 c로 만들어져서 그런지 속도가 아주 빠르다. 하지만 한가지 단점이 있다. 표준 ANSI만 지원하는 것 같다. aixterm 에서 사용하는 속성들은 결과에서 무시되었다. 예를들어 글자색은 30-37 만 사용 가능하다.</p>

<p>구글에서 ansi to html 이라고 검색하면 보다 다양한 방법들이 있으니 필요하다면 한번 검색해보길 바란다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP를 CLI에서 사용시 ANSI Colors 적용하기]]></title>
    <link href="http://blog.asamaru.net/2015/10/23/php-cli-ansi-colors/"/>
    <updated>2015-10-23T20:46:06+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/23/php-cli-ansi-colors</id>
    <content type="html"><![CDATA[<p>php를 CLI(shell 환경)에서 사용시 처리 과정을 확인하기 위한 로그나 결과를 <code>echo</code> 등을 사용해서 출력하는 방법을 사용할 것이다.</p>

<p>보통 shell script 작성시 python이나 bash script를 많이 사용하지만 php 프로그램과 연결된 작업을 해야 하거나 php가 손에 익어서 편할 경우 등 여러가지 이유로 php를 shell에서 사용하는 경우도 많다.</p>

<p>실제로 나는 가급적 프로세스 처리는 bash를 사용하고 간단한 작업은 python으로 하려고 하지만 php가 아무래도 손에 익은지라 조금 복잡한 작업은 php 프로그램과 무관하더라고 php를 사용하는 경우가 많다.</p>

<p>나는 이런 작업 과정에서 출력되는 내용을 보기 좋게 표현하는 부분이 항상 불만이었다. 몇 줄 안나오는 문제면 상관없지만 다량의 로그가 출력되는 작업시에는 중요한 부분을 조금더 잘 보이게 할 방법이 필요했다. 그래서 여러 줄을 띄우거나 탭을 들여쓰는 등의 방법을 주로 사용했었다.</p>

<p>그런데 오늘도 이런 작업을 하던 중에 갑자기 <a href="https://en.wikipedia.org/wiki/ANSI_escape_code">ANSI escape code</a> 중 <a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">ANSI Color</a>가 생각났다(왜 이제야 이런 것이 있다는 것을 떠 올렸는지 모르겠다). 직접 구현해도 되겠지만 아무래도 귀찮을 듯해서 검색을 해봤더니 생각보다 많은 자료를 찾을 수 있었다. 역시 사람들은 비슷한 생각을 하나보다.</p>

<p>아래는 이번에 찾은 자료들의 목록이다.</p>

<ul>
<li><a href="http://www.if-not-true-then-false.com/2010/php-class-for-coloring-php-command-line-cli-scripts-output-php-output-colorizing-using-bash-shell-colors/">PHP CLI Colors – PHP Class Command Line Colors (bash)</a></li>
<li><a href="https://gist.github.com/superbrothers/3431198">superbrothers/ansi-color.php</a></li>
<li><a href="http://softkube.com/blog/generating-command-line-colors-with-php">Generating Command Line Colors with PHP</a></li>
<li><a href="http://blog.ianty.com/php/ansicolor/">PHP port of Term::ANSIColor</a></li>
</ul>

<p>나는 이 중에서 맨마지막의 <a href="http://blog.ianty.com/php/ansicolor/">PHP port of Term::ANSIColor</a>를 선택했다. 필요에 맞게 아주 약간의 수정을 해서 사용해 봤는데 다양한 형식을 지원해서 나름 만족스럽다.</p>

<p>혹시 php를 CLI에서 사용할 일이 있다면 한번쯤 사용해 보기를 추천한다. 위의 라이브러리들을 굳이 쓰지 않더라도 소스 코드를 조금만 보면 ANSI를 적용하는 방법을 알 수 있으니 보기 좋은 결과물을 원할때 써보기 바란다.</p>
]]></content>
  </entry>
  
</feed>
