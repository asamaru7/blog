<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[이 세상에 하나는 남기고 가자]]></title>
  <link href="http://blog.asamaru.net/atom.xml" rel="self"/>
  <link href="http://blog.asamaru.net/"/>
  <updated>2015-12-10T21:44:11+09:00</updated>
  <id>http://blog.asamaru.net/</id>
  <author>
    <name><![CDATA[유영재]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[안드로이드 Realm 0.82.2 -> 0.86.0 버전업]]></title>
    <link href="http://blog.asamaru.net/2015/12/10/realm/"/>
    <updated>2015-12-10T20:43:17+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/10/realm</id>
    <content type="html"><![CDATA[<p>모바일 앱 개발시에 DB는 주로 Sqlite 또는 Core Data를 많이 사용한다. 그런데 Sqlite 등을 사용하는 것이 조금 불편한 부분들이 많아서 지난 앱 개발시 <a href="https://realm.io/kr/">Realm</a>을 사용했다. <a href="https://realm.io/kr/">Realm</a>을 사용하면 개발이 용이해지기는 한데 간혹 다루기가 까다로워지는 경우가 있다. 사실 그런 문제 상황은 내가 사용시 뭔가를 잘못했을 확률이 높지만 개인적으로 다소 예민한 라이브러리라고 생각한다. 어찌보면 당연할 수도 있는 것이 아직 1.0 버전이 되지도 못한 라이브러리니 그럴만도 하다. 실제로 아직은 버전업이 자주 발생하고 버전업시에 변경 사항이 다소 있는 편이다. 중요 변경이 있을 때 마이그레이션을 잘못하거나 하면 앱 크래시의 원인이 되기도 하니 버전업시에는 유의해야 한다.
<strong>그렇지만 다행인 것은 <a href="https://realm.io/kr/docs/java/latest/">문서화</a>가 잘되어 있고 한글본도 번역도 빠르게 올라온다.</strong></p>

<hr>

<p>얼마전 기존 프로젝트의 Realm의 0.82.2에서 0.86.0으로 버전업을 했다(버전을 확인한지 그리 오래되지 않았는데 그 사이 많이도 버전업되었다). 그랬더니 아래와 같은 오류가 발생했다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Field 'date' is required. Either set @Required to field 'date' or migrate using io.realm.internal.Table.convertColumnToNullable(). : io.realm.exceptions.RealmMigrationNeededException: Field 'date' is required. Either set @Required to field 'date' or migrate using io.realm.internal.Table.convertColumnToNullable().</span></code></pre></td></tr></table></div></figure>

<p>사용하는 테이블의 <code>date</code> 필드가 <code>required</code>이니 <code>@Required</code> 어노테이션을 붙이거나 테이블을 마이그레이션하라는 안내다. 이미 Realm에서 해결 방법을 친절히도 안내해주고 있다. <code>@Required</code>는 기존에 사용하지 않던 것이라 찾아봤다. <a href="https://realm.io/kr/news/realm-java-0.83.0/">Realm 자바 0.83 — Null 지원!</a>를 보니 0.83 버전에서 데이터값으로 null을 사용할 수 있게 됨에 따라 추가된 어노테이션이다. 그러니 기존 0.82.2의 데이터는 null이 될 수 없었으므로 required 타입으로 인식하는 것이다. 그외에도 다른 변경 사항을 보고 싶다면 <a href="https://github.com/realm/realm-java/blob/master/changelog.txt">changelog</a>를 참고하자.</p>

<p>기존에도 null이 들어올 수 없는 구조로 프로그램되어 있었으니 <code>@Required</code>를 해당 핃르(변수)에 붙이는 것으로 해결하는 것이 맞겠다. 나는 여기서 다른 문제를 겪었었는데 <code>@Required</code>만 붙이면 될 것을 스키마 버전 정보까지 올리는 바람에 엉망이 되었었다. 어쨌든 결론은 이 문제에 대해서는 <code>@Required</code>를 붙이는 방법으로 간단히 해결된다.</p>

<hr>

<p>그런데 문제는 여기서 끝나지 않았다. <a href="https://realm.io/docs/java/latest/api/io/realm/RealmMigration.html">RealmMigration</a> 클래스도 방식이 변경되어 맞춰줬다.</p>

<p>그리고 또 하나. 기존에는 아래와 같이 인스턴스를 생성해서 사용했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">RealmConfiguration</span><span class="o">.</span><span class="na">Builder</span> <span class="n">realmBuilder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RealmConfiguration</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">context</span><span class="o">).</span><span class="na">name</span><span class="o">(</span><span class="n">realmName</span><span class="o">)</span> <span class="o">.</span><span class="na">schemaVersion</span><span class="o">(</span><span class="n">SCHEME_VERSION</span><span class="o">);</span>
</span><span class='line'><span class="n">RealmConfiguration</span> <span class="n">config</span> <span class="o">=</span> <span class="n">realmBuilder</span><span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'><span class="n">Realm</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">Realm</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">config</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

<p>그런데 여기서 문제가 발생하기 시작했다. 이 부분은 realm 접속을 생성하는 과정으로 사용하는 시점에 처리하고 있었다. 기존에 사용처 자체가 워낙에 간단한 부분이라서 그랬는지는 몰라도 문제가 없었다. 그런데 버전업 이후 이상하게 앱 크래시가 발생했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">E</span><span class="o">/</span><span class="nl">AndroidRuntime:</span> <span class="n">FATAL</span> <span class="nl">EXCEPTION:</span> <span class="n">main</span>
</span><span class='line'>                  <span class="nl">Process:</span> <span class="o">~~~,</span> <span class="nl">PID:</span> <span class="mi">21532</span>
</span><span class='line'>                  <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">RuntimeException</span><span class="o">:</span> <span class="n">Unable</span> <span class="n">to</span> <span class="n">start</span> <span class="n">activity</span> <span class="n">ComponentInfo</span><span class="o">{~~~/~~~}:</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">IllegalArgumentException</span><span class="o">:</span> <span class="n">Configurations</span> <span class="n">cannot</span> <span class="n">be</span> <span class="n">different</span> <span class="k">if</span> <span class="n">used</span> <span class="n">to</span> <span class="n">open</span> <span class="n">the</span> <span class="n">same</span> <span class="n">file</span><span class="o">.</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>

<p>오류 내용은 이렇다. 동일 table 파일을 다른 Configurations으로 열 수 없다. 이 오류는 처음에 앱이 열릴 때는 발생하지 않다가 종료 후 다시 들어오면 발생했다. 이상했다. 분명이 앱을 종료 했음에도 불구하고 왜 다른 Configurations을 넣고 있다는 것인지.</p>

<p>이번에 알게 되었는데 root activity에서의 finish()는 앱의 종료를 의미하는 것이 아니었다. 마지막 activity가 finish()되면 화면에서는 즉시 종료된 것으로 보이나 프로세스는 살아 남는다. 아마도 시스템 자원이 부족해지면 프로세스가 OS에 의해 죽을 수는 있다. 이와 관련해서는 조만간 별도로 글을 남기려고 한다.</p>

<p>어쨌든 이러한 상황이 발생하는 것으로 보아 기존 버전과 최신 버전의 Realm 생명 주기를 관리하는 방법이 변경된 것으로 보인다. 메뉴얼에 보면 <a href="https://realm.io/kr/docs/java/0.86.0/#section-52">모범 사용예 - Realm 인스턴스들의 생명주기 관리하기</a>라는 부분이 있다. &quot;모범 사용예&quot;라는 항목 자체가 0.85.0 버전부터 있는 것으로 보아 그 시점에 변경이 된 것으로 생각한다. 그런데 여기서 사용하는 함수는 <a href="https://realm.io/news/realm-java-0.81.1/">Realm Java 0.81.1</a>에서 추가된 것으로 소개하고 있다. 기존에 내가 사용하던 것이 0.82.2 였지만 위 문제가 발생하지 않았던 것으로 보아 앞선 예상대로 그 후에 관리 방법이 변경된 것 같기는 하다. 어쨌든 이 부분에 관련된 정보가 있어 발췌한다.</p>

<blockquote>
<p><strong>Realm 인스턴스들의 생명주기 관리하기</strong></p>

<p>RealmObjects과 RealmResults는 데이터 전체를 느긋하게 가져옵니다. 이런 이유로 Realm 오브젝트나 질의 결과를 접근할 때 가능한 오래 Realm 인스턴스를 유지하는 것이 중요합니다. Realm 데이터 커넥션을 열고 닫는 추가 비용을 줄이기 위해 레퍼런스 카운트화된 캐시를 가집니다. 이는 Realm.getDefaultInstance()를 같은 스레드에서 여러번 호출하는 것은 비용이 들지 않고 내부의 리소스는 자체적으로 모든 인스턴스가 닫히면 해제됨을 의미합니다.</p>

<p>모든 액티비티와 프래그먼트의 UI 스레드에서 Realm 인스턴스를 열고 Activity나 Fragment가 파괴될 때 닫는 것은 쉽고 안전한 접근 법입니다.</p>
</blockquote>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 애플리케이션에서 Realm 설정하기</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyApplication</span> <span class="kd">extends</span> <span class="n">Application</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">();</span>
</span><span class='line'>        <span class="n">RealmConfiguration</span> <span class="n">realmConfiguration</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RealmConfiguration</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Realm</span><span class="o">.</span><span class="na">setDefaultConfiguration</span><span class="o">(</span><span class="n">realmConfiguration</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 액티비티들을 전환하며 onCreate()/onDestroy()가 중첩되면 Activity 2의 onCreate가</span>
</span><span class='line'><span class="c1">// Activity 1의 onDestroy()보다 먼저 호출 됩니다.</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Realm</span> <span class="n">realm</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">realm</span> <span class="o">=</span> <span class="n">Realm</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onDestroy</span><span class="o">();</span>
</span><span class='line'>        <span class="n">realm</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 프래그먼트에서 onStart()/onStop()를 사용합니다.</span>
</span><span class='line'><span class="c1">// 프래그먼트의 onDestroy()는 호출되지 않을 수 있습니다.</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyFragment</span> <span class="kd">extends</span> <span class="n">Fragment</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Realm</span> <span class="n">realm</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStart</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onStart</span><span class="o">();</span>
</span><span class='line'>        <span class="n">realm</span> <span class="o">=</span> <span class="n">Realm</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onStop</span><span class="o">();</span>
</span><span class='line'>        <span class="n">realm</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>그렇다. 이제는 앱 생성시 <code>Realm.setDefaultConfiguration()</code>를 이용해서 Configuration을 지정하고 필요한 곳에서 <code>Realm.getDefaultInstance()</code>으로 인스턴스를 받아 사용하는 것을 권장한다. 위에 이야기한 문제도 이 방식을 사용하면 발생하지 않는다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[selinux enforcing 후 로그인이 되지 않을 때 복구 방법(CentOS 7)]]></title>
    <link href="http://blog.asamaru.net/2015/12/10/linux-login-error-with-selinux-enforcing/"/>
    <updated>2015-12-10T10:58:10+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/10/linux-login-error-with-selinux-enforcing</id>
    <content type="html"><![CDATA[<p>이 글은 특수한 상황에 대한 이야기다. 하지만 여러가지 경우에 대한 설명이 포함되어 있어 향후 비슷한 상황에 대한 대처를 위해 남겨둔다.</p>

<p>일단 상황은 이렇다. CentOS 7을 selinux가 disabled 상태로 운영하던 중 selinux를 enforcing 상태로 변경해서 재시작했다. 그후로 부팅은 되나 모든 계정으로 로그인을 할 수 없었다.</p>

<p><strong>이 상황의 발생 원인을 먼저 설명하자면 selinux가 켜지면서 권한 문제로 shell이 /etc/passwd와 /etc/shadow에 접근할 수 없어 로그인을 할 수 없었던 것이다.</strong></p>

<p>이런 상황이 왜 발생했을까? selinux가 꺼진 상태에서 운영하다가 켜서 재시작하게되면 파일에 대한 selinux rule이 적용하는 과정을 거치게 된다(이로인해 변경 후 최초 시작시 시간이 오래 걸리면 적용이 끝나면 다시 한번 재부팅된다). 이 과정이 정상적으로 완료되었었다면 위 문제가 발생하지 않았겠지만 나의 경우는 내가 설정해 놓은 다른 옵션으로 인해 문제가 발생했다.</p>

<p>나의 경우는 보안상의 이유로 <code>chattr +i /etc/passwd</code>, <code>chattr +i /etc/shadow</code>를 적용한다. 그런데 내가 이걸 잊고 그냥 selinux만 켠 것이다. 그로인해 재시작시 두 파일에 대한 selinux rule이 적용되지 못했던 것이다.</p>

<p>로그인을 할 수 없었기 때문에 파일 상태를 확인할 수 없어 single mode로 부팅해서 확인해야 했다.
single mode 부팅에 관련해서는 <a href="http://linux.systemv.pe.kr/centos-7-%EC%8B%B1%EA%B8%80%EB%AA%A8%EB%93%9C-%EB%B6%80%ED%8C%85/">CENTOS 7 싱글모드 부팅</a>에서 잘 설명하고 있다(CentOS 7부터 Grub2로 변경되었다고 한다. 그래서 처음엔 어떻게 single mode 부팅을 해야할지 몰라서 당황했다). 요약하자면 부팅 메시지가 나왔을 때 <code>e</code>를 눌러 편집 모드로 들어가서 <code>ro</code>가 나오는 부분을 찾아서 <code>rw init=/sysroot/bin/sh</code>로 변경한다(찾기가 어려울 수 있다. <code>ro</code>로 시작하는게 아니라 명령줄 내에 <code>ro</code>라고 된 부분이 있다. 나의 경우는 linux16 /vmlinuz-3.10.0-~~ 으로 시작하는 라인에 있었다). 수정 후에는 <code>crtl+x</code>를 눌러서 부팅한다. 부팅이 되고나면 실제 서버의 <code>/</code>는 <code>/sysroot</code>로 마운트되어 있다. 따라서 <code>chroot /sysroot</code>를 하면 기존 서버처럼 <code>/</code> 경로로 변경할 수 있다. 사실 꼭 필요하진 않다. 경로가 헛갈리지 않도록 작업하기 위해서 한다.</p>

<p>single mode로 들어가서 일단 selinux를 끄고(permissive 모드 사용) 다시 부팅했다(여기서 바로 변경해도 되었을 수 있지만 확인을 위해서 일단 다시 부팅했다). 부팅 후 아래와 같이 확인했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls -Z /etc/passwd
</span><span class='line'>-rw-r--r--. root root system_u:object_r:unlabeled_t:s0 /etc/passwd
</span></code></pre></td></tr></table></div></figure>

<p>원래는 <code>/etc/passwd</code>는 <code>passwd_file_t</code>가 되어야 한다. 그런데 <code>unlabeled_t</code>로 되어있어 제대로 로그인 할 수 없었던 것이다. 그래서 <code>restorecon</code>를 사용해서 아래처럼 복구하려고 했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>restorecon -v /etc/passwd
</span><span class='line'>restorecon reset /etc/passwd context system_u:object_r:unlabeled_t:s0-&gt;system_u:object_r:passwd_file_t:s0
</span><span class='line'>restorecon <span class="nb">set </span>context /etc/passwd-&gt;system_u:object_r:passwd_file_t:s0 failed:<span class="s1">&#39;Operation not permitted&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<p>그런데 위와 같은 오류가 났다. 아마도 selinux를 켜고 최초 부팅시에도 동일한 오류로 인해 정상적으로 rule이 적용되지 않았을 것이다. 그래서 아래와 같이 다시 처리했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chattr -i /etc/passwd
</span><span class='line'><span class="nv">$ </span>chattr -i /etc/shadow
</span><span class='line'><span class="nv">$ </span>restorecon -v /etc/passwd
</span><span class='line'><span class="nv">$ </span>restorecon -v /etc/shadow
</span></code></pre></td></tr></table></div></figure>

<p>이제 다시 재부팅하면 기존처럼 로그인이 잘 된다. 아직 selinux를 잘 다루지 못해 발생한 문제이지만 덕분에 여러가지를 알게 되었다. 사실 다행히 이 문제를 vagrant로 띄운 가상 머신에서 겪어서 다양하게 시도해 보면서 좋은 경험을 했다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sftp-only 사용자 추가 (CentOS 7)]]></title>
    <link href="http://blog.asamaru.net/2015/12/09/centos-7-create-sftp-only-user/"/>
    <updated>2015-12-09T11:17:23+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/09/centos-7-create-sftp-only-user</id>
    <content type="html"><![CDATA[<p>linux 서버를 운영하면서 sftp가 필요한 경우가 있다. 일반 계정이라면 sftp로 그냥 접속하면 되지만 특정 사용자에게 shell 접속은 차단하고 파일 업/다운로드만 제공해야 하는 상황이 있을 수 있다. 파일 전송을 주로 해야하는 서버가 아니라면 이런 경우를 위해 ftp 데몬을 구동하는 것도 부담스럽다. 이런 경우라면 sftp 전용 사용자를 추가하는 방법을 사용할 수 있다.</p>

<p>우선 아래의 과정을 보자. 미리 이야기 하지만 아래의 설정 과정은 앞으로 설명하는 요구 사항에 맞추어 작성된 것이다. 따라서 그룹 설정, home directory 설정 등 여러가지 설정들은 자신에게 맞게 변경해도 된다. 단, 설정을 잘못하면 실제로 접속시에 오류가 날 수 있으니 내용을 이해하고 사용하기를 당부한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/sbin/groupadd sftp
</span><span class='line'><span class="nv">$ </span>/usr/sbin/useradd -g sftp <span class="o">[</span>username<span class="o">]</span> -d <span class="o">[</span>user home directory<span class="o">]</span> -s /bin/false
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;[password]&quot;</span> <span class="p">|</span> passwd --stdin <span class="o">[</span>username<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>chown -R <span class="o">[</span>username<span class="o">]</span>.sftp <span class="o">[</span>user home directory<span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>chown root <span class="o">[</span>user home directory<span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>chmod <span class="m">755</span> <span class="o">[</span>user home directory<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sed -i <span class="s2">&quot;s/Subsystem[[:space:]]*sftp/#Subsystem   sftp/g&quot;</span> /etc/ssh/sshd_config
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;Subsystem   sftp    internal-sftp&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;Match Group sftp&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;    ChrootDirectory %h&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;    AllowTcpForwarding no&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;    X11Forwarding no&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;    ForceCommand internal-sftp&quot;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>setsebool -P ssh_chroot_rw_homedirs on
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>systemctl restart sshd.service
</span></code></pre></td></tr></table></div></figure>

<p>이제 하나씩 살펴보자</p>

<ul>
<li><p><code>/sbin/groupadd sftp</code> : sftp라는 사용자 그룹을 추가한다. 필요없다면 하지 않아도 되고 다른 이름을 사용해도 된다. 나의 경우는 sftp 전용 사용자들을 묶어서 관리하기 위해 sftp라는 그룹을 추가한 것이다.</p></li>
<li><p><code>/usr/sbin/useradd -g sftp [username] -d [user home directory] -s /bin/false</code></p>

<ul>
<li><code>-g sftp</code> : sftp 그룹에 사용자를 추가한다.</li>
<li><code>[username]</code> : 원하는 사용자명을 입력한다.</li>
<li><code>-d [user home directory]</code> : 사용자의 home directory를 지정한다. 이 옵션은 지정하지 않아도 상관없다. 미지정시 일반 계정을 생성할 때와 동일하게 지정된다(일반적으로 /home/[username]).     그리고 이미 directory가 생성되어 있다면 <code>-d [user home directory]</code>를 지정하지 않고 <code>-M</code>을 사용하여 home directory 생성을 건너뛸 수 있다.</li>
<li><code>-s /bin/false</code> : 이 사용자는 shell로 접속할 수 없음을 지정한다.</li>
</ul></li>
<li><p><code>$ echo &quot;[password]&quot; | passwd --stdin [username]</code> : 추가한 사용자 계정의 비밀번호를 입력한다. 일반적으로 비밀번호를 추가하는 방식으로 그냥 <code>passwd</code>를 사용해도 되나 나의 경우는 자동으로 처리하는 스크립트를 만들려고 하다보니 이런 방식을 사용한 것이다.</p></li>
<li><p><code>chown -R [username].sftp [user home directory]</code> : 사용자가 접속하게 될 폴더의 하위 파일의 소유자를 변경한다. 이 명령도 사용자 추가시 기존에 있던 폴더를 home directory로 지정한 것이 아니라면 실행하지 않아도 된다.</p></li>
<li><p><code>chown root [user home directory]</code> : 나중에 <code>ChrootDirectory</code>를 적용하려면 home directory의 소유자가 root가 되어야 한다. 이유는 chroot()에서 root가 소유한 directory를 요구하기 때문이다. 관련 내용은 <a href="https://www.debian-administration.org/article/590/OpenSSH_SFTP_chroot_with_ChrootDirectory">OpenSSH SFTP chroot() with ChrootDirectory</a>에 나와 있다.</p></li>
<li><p><code>chmod 755 [user home directory]</code> : <code>ChrootDirectory</code> 적용시 소유자를 root로 변경하는 것과 함께 권한도 755로 변경해야 한다. 이렇게되면 사용자의 home directory에서는 쓰기 권한을 제거한 것이므로 하위에 폴더를 더 만들어서 소유자를 <code>[username]</code>로 변경하거나 쓰기 권한을 줘야한다(사용자는 해당 폴더들에서 쓰기를 할 수 있다). 이 부분이 상당히 불편할 수 있는 부분인데 chroot 적용이 되려면 보안상 쓰기 권한을 줄 수 없기 때문에 어쩔 수 없다. 사실 나도 이 부분을 제대로 몰라 한참을 고생한 적이있다.</p></li>
<li><p><code>sed -i &quot;s/Subsystem[[:space:]]*sftp/#Subsystem   sftp/g&quot; /etc/ssh/sshd_config</code> : <code>/etc/ssh/sshd_config</code> 파일에서 <code>Subsystem   sftp</code> 설정 부분을 주석 처리한다. 직접 파일을 열어서 해당 내용을 주석 처리해도 된다.</p></li>
<li><p>echo section : 이 부분은 <code>/etc/ssh/sshd_config</code>에 필요한 부분을 추가하는 과정이다. 꼭 이렇게 해야하는 것은 아니고 직접 파일을 열어서 수정해도 된다. 그리고 나는 그룹 단위로 제어하기 위해서 <code>Match Group sftp</code>를 사용했지만 사용자 단위로 지정하려면 <code>Match User [username]</code>의 형식을 사용해도 된다.</p>

<ul>
<li><code>ChrootDirectory %h</code> : 이 설정은 chroot를 사용자 home directory로 지정하는 것이다. <code>%h</code> 대신 특정 경로를 직접 지정해도 된다.</li>
</ul></li>
<li><p><code>setsebool -P ssh_chroot_rw_homedirs on</code> : 이 부분은 selinux를 사용할 경우에만 해당된다. chroot가 적용된 home directory에 읽기/쓰기를 할 수 있도록 권한을 열어준다. 그런데 테스트 해보니 이 명령은 하지 않아도 파일 업로드는 이상이 없다. 대부분의 경우에 이 옵션을 주도록 설명하고 있어 추가는 해 두었지만 sftp 전용으로 계정을 사용할 경우는 사용하지 않아도 되는 것으로 보인다. 따라서 지정하지 않은 상태에서 업로드를 테스트 해보고 이상이 없다면 처리하지 않아도 되지 않을까 생각한다.</p></li>
<li><p><code>systemctl restart sshd.service</code> : 설정이 완료되었으므로 sshd를 재시작 해주면 바로 사용할 수 있다. <code>[username]</code> 계정으로 접속(<code>sftp [username]@127.0.0.1</code>)해서 테스트 해보고 이상이 없다면 완료된 것이다.</p></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant box repackage(unpacked box에서 box 파일 만들기)]]></title>
    <link href="http://blog.asamaru.net/2015/12/09/vagrant-box-repackage/"/>
    <updated>2015-12-09T08:17:05+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/09/vagrant-box-repackage</id>
    <content type="html"><![CDATA[<p>vagrant box를 생성하는 것에 대해서는 <a href="http://blog.asamaru.net/2015/10/14/creating-a-vagrant-base-box/">Vagrant BASE Box 만들기(CentOS 7)</a>에서 설명했었다. 이번에도 box를 생성하는 것에 대한 것이지만 대상이 다르다. 기존 글에서는 생성한 가상 머신을 대상으로 box 파일을 만들었지만 아래에서 설명하고자 하는 것은 <code>vagrant box add</code> 명령을 사용하거나 <code>vagrant up</code> 명령을 통해 box 파일을 unpacked(~/.vagrant.d/boxes에 보관)한 것을 다시 배포용(distributable) box 파일로 만드는 것이다.</p>

<p>이 방법이 필요한 경우를 예를 들자면 box를 생성하고 unpacked 했지만 box 파일을 배포 경로(원격/로컬)로 이동하지 않고 지워버린 경우에 사용할 수 있다.</p>

<p>vagrant는 이런 경우를 위해 <code>repackage</code> 명령을 제공한다. <a href="https://docs.vagrantup.com/v2/cli/box.html">VAGRANT DOCS : BOX REPACKAGE</a>에는 아래와 같이 설명되어 있다.</p>

<blockquote>
<p>Command: vagrant box repackage NAME PROVIDER VERSION</p>

<p>This command repackages the given box and puts it in the current directory so you can redistribute it. The name, provider, and version of the box can be retrieved using vagrant box list.</p>

<p>When you add a box, Vagrant unpacks it and stores it internally. The original *.box file is not preserved. This command is useful for reclaiming a *.box file from an installed Vagrant box.</p>
</blockquote>

<p><code>repackage</code> 명령은 NAME, PROVIDER, VERSION 인자 모두를 지정해야 한다. 각 인자에 어떤 정보를 넣는지 알아보자.</p>

<ul>
<li>NAME : <code>vagrant box list</code> 명령으로 확인할 수 있는 box명을 지정한다.</li>
<li>PROVIDER : 가상 머신을 구동하는 PROVIDER를 지정한다.</li>
<li>VERSION : box의 버전을 지정한다.</li>
</ul>

<p>우선 실제로 사용하는 예시를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box repackage centos7-dev-1 virtualbox 0
</span></code></pre></td></tr></table></div></figure>

<p>이 명령을 실행하면 box 파일이 실행한 경로에 생성된다.</p>

<p>예시를 보면 어떻게 사용해야 하는지 이해가 될 것이다. NAME은 별다를 것이 없고 PROVIDER의 경우는 일반적으로 <code>virtualbox</code>를 지정한다(box 생성시 virtualbox를 대부분 사용하므로). VERSION의 경우는 별도의 version을 사용하지 않았다면 그냥 0을 입력하면 된다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql_secure_installation 자동화]]></title>
    <link href="http://blog.asamaru.net/2015/12/04/mysql-secure-installation-automation/"/>
    <updated>2015-12-04T12:35:49+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/04/mysql-secure-installation-automation</id>
    <content type="html"><![CDATA[<p>이전 글 <a href="2015/12/04/installing-mariadb-on-centos-7/">MariaDB 최신 버전 설치(yum) - CentOS 7</a>에서 MariaDB를 설치하면서 <code>mysql_secure_installation</code> 명령을 자동화하는 부분을 언급했었다. 이 글에서는 이를 설명하려고 한다. 우선 바로 만들어둔 bash shell script를 보자.</p>

<p><strong>mysql_secure_installation_automation.sh</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># https://gist.github.com/Mins/4602864</span>
</span><span class='line'>
</span><span class='line'>yum -y install expect
</span><span class='line'>
</span><span class='line'><span class="c"># Not required in actual script</span>
</span><span class='line'><span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SECURE_MYSQL</span><span class="o">=</span><span class="k">$(</span>expect -c <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">set timeout 3</span>
</span><span class='line'><span class="s2">spawn mysql_secure_installation</span>
</span><span class='line'><span class="s2">expect \&quot;Enter current password for root (enter for none):\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;$MYSQL\r\&quot;</span>
</span><span class='line'><span class="s2">expect \&quot;Change the root password?\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;n\r\&quot;</span>
</span><span class='line'><span class="s2">expect \&quot;Remove anonymous users?\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;y\r\&quot;</span>
</span><span class='line'><span class="s2">expect \&quot;Disallow root login remotely?\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;y\r\&quot;</span>
</span><span class='line'><span class="s2">expect \&quot;Remove test database and access to it?\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;y\r\&quot;</span>
</span><span class='line'><span class="s2">expect \&quot;Reload privilege tables now?\&quot;</span>
</span><span class='line'><span class="s2">send \&quot;y\r\&quot;</span>
</span><span class='line'><span class="s2">expect eof</span>
</span><span class='line'><span class="s2">&quot;</span><span class="k">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;$SECURE_MYSQL&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>이 스크립트는 <a href="https://gist.github.com/Mins/4602864">mysql_secure_installation automation</a> 스크립트를 참고하여 CentOS에 맞게 조금 수정한 것이다.</p>

<p>위 스크립트를 mysql_secure_installation_automation.sh 파일로 저장했다면 아래와 같이 실행하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod <span class="m">700</span> mysql_secure_installation_automation.sh
</span><span class='line'><span class="nv">$ </span>./mysql_secure_installation_automation.sh
</span></code></pre></td></tr></table></div></figure>

<p>특별히 설명할 것도 없지만 간략하게나마 원리를 설명하자면 <code>expect</code>라는 도구를 사용해서 사용자 입력을 대신하도록 하는 것이다. 이를 응용하면 <code>mysql_secure_installation</code> 외에도 여러가지 상황에 적용할 수 있다. 나의 경우는 <code>expect</code>를 이용해서 ssh 비밀번호 자동 입력 기능을 만들어 사용하고 있었다. 사실 ssh의 경우는 key를 등록하는 방식으로 비밀번호 없이 로그인이 가능하고 비밀번호를 외부로 노출하는 것이 보안상 문제가 있지만 간단하게 접속이 필요하고 보안상의 이슈가 없는 곳에서 유용하게 사용하고 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB 최신 버전 설치(yum) - CentOS 7]]></title>
    <link href="http://blog.asamaru.net/2015/12/04/installing-mariadb-on-centos-7/"/>
    <updated>2015-12-04T08:37:25+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/04/installing-mariadb-on-centos-7</id>
    <content type="html"><![CDATA[<p>CentOS 7에서의 <a href="https://mariadb.org/">MariaDB</a>의 기본적인 설치는 아주 간단하다. yum epel 저장소가 추가된 상태에서 아래와 같이 설치가 가능하다(epel이 없어도 동일할 것으로 생각되나 이 글에서의 주요 내용이 아니기 때문에 테스트 해보지는 않았다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yum install -y mariadb mariadb-server
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb.service
</span><span class='line'><span class="nv">$ </span>systemctl start mariadb.service
</span><span class='line'><span class="nv">$ </span>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure>

<p>기본 설치는 끝이다. 이제부터 mariadb을 설정하는 부분이 남았지만 이 부분은 서버 상황에 따라 모두 다르니 여기서는 다루지 않는다. 그리고 한가지 더. <code>mysql_secure_installation</code>를 실행하면 자신의 상황에 맞게 설정하기 위해 몇가지를 물어본다. 그런데 이게 거의 일정하고 설치 자동화를 할 때 입력창이 나오면 처리가 귀찮아진다. 이 부분을 자동화하는 부분에 대해서는 <a href="http://blog.asamaru.net/2015/12/04/mysql-secure-installation-automation/">mysql_secure_installation 자동화</a>에서 따로 글을 남긴다.</p>

<p>이제부터가 본격적인 이 글에서 하고자하는 이야기다.</p>

<p>위의 방법으로 설치하면 현재 기준으로 5.5.44 버전이 설치된다. 하지만 최신 버전은 10.1.9다. 그렇다면 최신 버전을 설치하려면 어떻게 해야하는가? 아래의 과정을 보자.</p>

<p>우선 yum에 mariadb 저장소를 추가한다. <code>http://yum.mariadb.org/10.1/centos7-amd64</code>는 현재 최신 버전과 CentOS7을 기준으로한 주소다. <a href="http://yum.mariadb.org">http://yum.mariadb.org</a> 를 열어보면 다른 기준에서 사용할 수 있는 레포지토리들도 확인할 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;[mariadb]&quot;</span> &gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;name = MariaDB&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;baseurl = http://yum.mariadb.org/10.1/rhel7-amd64&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;gpgcheck=1&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span></code></pre></td></tr></table></div></figure>

<p>더 간단한 방법도 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -O /etc/yum.repos.d/MariaDB.repo http://mariadb.if-not-true-then-false.com/rhel/<span class="k">$(</span>rpm -E %rhel<span class="k">)</span>/<span class="k">$(</span>uname -i<span class="k">)</span>/10_1
</span></code></pre></td></tr></table></div></figure>

<p>이후는 기존과 동일하다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yum install -y mariadb mariadb-server
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb.service
</span><span class='line'><span class="nv">$ </span>systemctl start mariadb.service
</span><span class='line'><span class="nv">$ </span>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure>

<p>단, 10.1.8 버전 이상일 경우만 위와 같이 처리가 가능한 것으로 보인다(<a href="https://mariadb.com/kb/en/mariadb/systemd/">MariaDB Systemd</a>).</p>

<p>따라서 10.0 버전대를 설치한다면  아래와 같이 하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yum install -y mariadb mariadb-server
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mysql.service
</span><span class='line'><span class="nv">$ </span>systemctl start mysql.service
</span><span class='line'><span class="nv">$ </span>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure>

<p>하지만 약간의 차이가 있다. systemctl에서 사용하는 service 명이 다르다. 왜 다른지는 모르겠지만 설치를 했는데 서비스 등록이 되지 않아서 처음엔 당황스러웠다. 이 부분도 처음과 동일하게 사용하고 싶다면 alias를 사용하는 방법이 있다(<a href="https://www.centos.org/forums/viewtopic.php?f=47&amp;t=47373">service name alias? mariadb-&gt;mysql - how?</a>).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Alias=mysql.service&quot;</span> &gt; /usr/lib/systemd/system/mariadb.service
</span></code></pre></td></tr></table></div></figure>

<p>이렇게 해주면 mariadb라는 이름으로 service를 등록할 수 있다. 큰 의미가 없으니 굳이 적용할 필요는 없으나 혼선을 없애기 위해서라면 적용하는 것도 나쁘지는 않을 듯하다.</p>

<p>자.. 그런데 위 설치 방법대로 따라하면 아래와 같은 화면을 만나게 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mysql.service
</span><span class='line'>mysql.service is not a native service, redirecting to /sbin/chkconfig.
</span><span class='line'>Executing /sbin/chkconfig mysql on
</span><span class='line'>The unit files have no <span class="o">[</span>Install<span class="o">]</span> section. They are not meant to be enabled
</span><span class='line'>using systemctl.
</span><span class='line'>Possible reasons <span class="k">for</span> having this kind of units are:
</span><span class='line'>1<span class="o">)</span> A unit may be statically enabled by being symlinked from another unit<span class="s1">&#39;s</span>
</span><span class='line'><span class="s1">   .wants/ or .requires/ directory.</span>
</span><span class='line'><span class="s1">2) A unit&#39;</span>s purpose may be to act as a helper <span class="k">for</span> some other unit which has
</span><span class='line'>   a requirement dependency on it.
</span><span class='line'>3<span class="o">)</span> A unit may be started when needed via activation <span class="o">(</span>socket, path, timer,
</span><span class='line'>   D-Bus, udev, scripted systemctl call, ...<span class="o">)</span>.
</span></code></pre></td></tr></table></div></figure>

<p>내용을 보면 mariadb가 systemd에 등록되지 않고 chkconfig로 initd에 등록된다. 앞서 설명했던 5.5/10.1 버전 설치와는 다른 결과다. CentOS의 레포지토리를 이용해서 설치하면 <code>/usr/lib/systemd/system/mariadb.service</code> 파일이 함께 설치되는데 MariaDB 레포지토리로 설치하면 이 파일이 설치되지 않는다(확인해보니 다른 몇가지도 차이가 있다).</p>

<p>이 부분은 MariaDB 10.0이 systemd 지원을 아직 제대로 하지 않아서 그런 것 같다(테스트는 해보지 않았지만 찾아보니 Fedora 22 이상부터는 바로 지원이 되는 것으로 보인다).</p>

<p>그냥 이렇게 사용해도 문제는 되지 않지만 기존과 동일하게 systemd로 사용하고 싶다면 10.1 버전을 사용하면 된다.</p>

<hr>

<p>10.0을 굳이 써야 한다면 다음과 같이 처리할 수는 있으나 권장하지는 않는다. 이왕이면 최신 버전을 사용하자.</p>

<p>이미 위 명령을 입력했었다면 아래와 같이 제거하자. 아직 설치하지 않았다면 이 과정은 생략한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl disable mysql.service
</span><span class='line'>mysql.service is not a native service, redirecting to /sbin/chkconfig.
</span><span class='line'>Executing /sbin/chkconfig mysql off
</span></code></pre></td></tr></table></div></figure>

<p>아직 설치를 하지 않았다면 10.1과 유사하게 아래의 과정을 처리한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;[mariadb]&quot;</span> &gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;name = MariaDB&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;baseurl = http://yum.mariadb.org/10.0/rhel7-amd64&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;gpgcheck=1&quot;</span> &gt;&gt; /etc/yum.repos.d/MariaDB.repo
</span></code></pre></td></tr></table></div></figure>

<p>10.1과 유사하게 아래의 방법도 가능하다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -O /etc/yum.repos.d/MariaDB.repo http://mariadb.if-not-true-then-false.com/rhel/<span class="k">$(</span>rpm -E %rhel<span class="k">)</span>/<span class="k">$(</span>uname -i<span class="k">)</span>/10
</span></code></pre></td></tr></table></div></figure>

<p>이제 mariadb 10.0을 설치한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yum install -y mariadb mariadb-server
</span></code></pre></td></tr></table></div></figure>

<p>아래의 내용으로 <code>/usr/lib/systemd/system/mariadb.service</code> 파일을 만든다. 이 스크립트는 5.5 설치시에 생성되었던 <code>/usr/lib/systemd/system/mariadb.service</code> 파일을 가져다가 조금 수정했다. 그대로 사용하려니 정상적으로 동작하지 않았다. <code>/usr/libexec/mariadb-prepare-db-dir</code> 파일을 필요로해서 동일하게 넣어주었으나 구동은 되나 실행 스크립트가 종료되지 않고 <code>systemctl stop</code>으로 종료 할 수도 없었다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># It&#39;s not recommended to modify this file in-place, because it will be</span>
</span><span class='line'><span class="c"># overwritten during package upgrades.  If you want to customize, the</span>
</span><span class='line'><span class="c"># best way is to create a file &quot;/etc/systemd/system/mariadb.service&quot;,</span>
</span><span class='line'><span class="c"># containing</span>
</span><span class='line'><span class="c">#   .include /lib/systemd/system/mariadb.service</span>
</span><span class='line'><span class="c">#   ...make your changes here...</span>
</span><span class='line'><span class="c"># or create a file &quot;/etc/systemd/system/mariadb.service.d/foo.conf&quot;,</span>
</span><span class='line'><span class="c"># which doesn&#39;t need to include &quot;.include&quot; call and which will be parsed</span>
</span><span class='line'><span class="c"># after the file mariadb.service itself is parsed.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># For more info about custom unit files, see systemd.unit(5) or</span>
</span><span class='line'><span class="c"># http://fedoraproject.org/wiki/Systemd#How_do_I_customize_a_unit_file.2F_add_a_custom_unit_file.3F</span>
</span><span class='line'>
</span><span class='line'><span class="c"># For example, if you want to increase mariadb&#39;s open-files-limit to 10000,</span>
</span><span class='line'><span class="c"># you need to increase systemd&#39;s LimitNOFILE setting, so create a file named</span>
</span><span class='line'><span class="c"># &quot;/etc/systemd/system/mariadb.service.d/limits.conf&quot; containing:</span>
</span><span class='line'><span class="c">#   [Service]</span>
</span><span class='line'><span class="c">#   LimitNOFILE=10000</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Note: /usr/lib/... is recommended in the .include line though /lib/...</span>
</span><span class='line'><span class="c"># still works.</span>
</span><span class='line'><span class="c"># Don&#39;t forget to reload systemd daemon after you change unit configuration:</span>
</span><span class='line'><span class="c"># root&gt; systemctl --system daemon-reload</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Unit<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span><span class="o">=</span>MariaDB database server
</span><span class='line'><span class="nv">After</span><span class="o">=</span>syslog.target
</span><span class='line'><span class="nv">After</span><span class="o">=</span>network.target
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Service<span class="o">]</span>
</span><span class='line'><span class="c">#Type=simple</span>
</span><span class='line'><span class="nv">Type</span> <span class="o">=</span> forking
</span><span class='line'><span class="nv">User</span><span class="o">=</span>mysql
</span><span class='line'><span class="nv">Group</span><span class="o">=</span>mysql
</span><span class='line'><span class="nv">ExecStart</span> <span class="o">=</span> /etc/rc.d/init.d/mysql start
</span><span class='line'><span class="nv">ExecStop</span> <span class="o">=</span> /etc/rc.d/init.d/mysql stop
</span><span class='line'>
</span><span class='line'><span class="c">#ExecStartPre=/usr/libexec/mariadb-prepare-db-dir %n</span>
</span><span class='line'><span class="c"># Note: we set --basedir to prevent probes that might trigger SELinux alarms,</span>
</span><span class='line'><span class="c"># per bug #547485</span>
</span><span class='line'><span class="c">#ExecStart=/usr/bin/mysqld_safe --basedir=/usr</span>
</span><span class='line'><span class="c">#ExecStartPost=/usr/libexec/mariadb-wait-ready $MAINPID</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Give a reasonable amount of time for the server to start up/shut down</span>
</span><span class='line'><span class="nv">TimeoutSec</span><span class="o">=</span>300
</span><span class='line'>
</span><span class='line'><span class="c"># Place temp files in a secure directory, not /tmp</span>
</span><span class='line'><span class="nv">PrivateTmp</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Install<span class="o">]</span>
</span><span class='line'><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span></code></pre></td></tr></table></div></figure>

<p>이후의 과정은 동일하다. 단, 10.0 설치에서 설명했던 <code>mysql.service</code> 대신 10.1 처럼 <code>mariadb.service</code>을 사용한다. 해당 파일을 만들어 줬으므로.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl daemon-reload
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb.service
</span><span class='line'><span class="nv">$ </span>systemctl start mariadb.service
</span><span class='line'><span class="nv">$ </span>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure>

<p>이제 설치가 끝났다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant Box Packaging 후 "Warning: Authentication failure. Retrying... " 오류가 발생할 경우 해결 방법]]></title>
    <link href="http://blog.asamaru.net/2015/12/03/vagrant-warning-authentication-failure-retrying-dot-dot-dot-after-packaging-box/"/>
    <updated>2015-12-03T20:35:25+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/03/vagrant-warning-authentication-failure-retrying-dot-dot-dot-after-packaging-box</id>
    <content type="html"><![CDATA[<p>vagrant를 사용하면서 직접 box를 만들 경우가 자주 발생하지는 않는다. 하지만 환경 구성을 위해 간혹 작업을 하게되는데 작업 과정에 문제가 생기는 경우가 간혹 있다. 이번에 CentOS 7 환경을 구성하면서 vagrant로 테스트를 진행했었다. 최초 설치 상태로 box를 만들어두고 환경을 구성해보고 문제가 있으면 초기 box로 다시 구성하는 식으로 작업을 했다. 그런데 이번엔 작업을 하면서 이전에 발생하지 않았던 문제가 발생했다.</p>

<p>이전글 <a href="http://blog.asamaru.net/2015/10/14/creating-a-vagrant-base-box/">Vagrant BASE Box 만들기(CentOS 7)</a>에서 설명했던 것처럼 box 생성 전에 분명 ssh 관련 처리를 해 주었음에도 불구하고 만들어진 box를 사용해서 <code>vagrant up</code>을 하게되면 아래와 같은 결과가 계속 나왔다(여러번 box를 다시 만들어 봤음에도 불구하고).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'>Bringing machine <span class="s1">&#39;default&#39;</span> up with <span class="s1">&#39;virtualbox&#39;</span> provider...
</span><span class='line'><span class="o">==</span>&gt; default: Importing base box <span class="s1">&#39;centos7-dev-1&#39;</span>...
</span><span class='line'><span class="o">==</span>&gt; default: Matching MAC address <span class="k">for</span> NAT networking...
</span><span class='line'><span class="o">==</span>&gt; default: Setting the name of the VM: <span class="nv">dev7_default_1449141471748_10760</span>
</span><span class='line'><span class="o">==</span>&gt; default: Clearing any previously <span class="nb">set </span>network interfaces...
</span><span class='line'><span class="o">==</span>&gt; default: Preparing network interfaces based on configuration...
</span><span class='line'>    default: Adapter 1: nat
</span><span class='line'>    default: Adapter 2: <span class="nv">hostonly</span>
</span><span class='line'><span class="o">==</span>&gt; default: Forwarding ports...
</span><span class='line'>    default: <span class="nv">80</span> <span class="o">=</span>&gt; <span class="m">8080</span> <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'>    default: <span class="nv">22</span> <span class="o">=</span>&gt; <span class="m">2222</span> <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'><span class="o">==</span>&gt; default: Running <span class="s1">&#39;pre-boot&#39;</span> VM customizations...
</span><span class='line'><span class="o">==</span>&gt; default: Booting VM...
</span><span class='line'><span class="o">==</span>&gt; default: Waiting <span class="k">for</span> machine to boot. This may take a few minutes...
</span><span class='line'>    default: SSH address: 127.0.0.1:2222
</span><span class='line'>    default: SSH username: vagrant
</span><span class='line'>    default: SSH auth method: private key
</span><span class='line'>    default: Warning: Connection timeout. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>    default: Warning: Authentication failure. Retrying...
</span><span class='line'>Timed out <span class="k">while</span> waiting <span class="k">for</span> the machine to boot. This means that
</span><span class='line'>Vagrant was unable to communicate with the guest machine within
</span><span class='line'>the configured <span class="o">(</span><span class="s2">&quot;config.vm.boot_timeout&quot;</span> value<span class="o">)</span> <span class="nb">time </span>period.
</span><span class='line'>
</span><span class='line'>If you look above, you should be able to see the error<span class="o">(</span>s<span class="o">)</span> that
</span><span class='line'>Vagrant had when attempting to connect to the machine. These errors
</span><span class='line'>are usually good hints as to what may be wrong.
</span><span class='line'>
</span><span class='line'>If you<span class="s1">&#39;re using a custom box, make sure that networking is properly</span>
</span><span class='line'><span class="s1">working and you&#39;</span>re able to connect to the machine. It is a common
</span><span class='line'>problem that networking isn<span class="err">&#39;</span>t setup properly in these boxes.
</span><span class='line'>Verify that authentication configurations are also setup properly,
</span><span class='line'>as well.
</span><span class='line'>
</span><span class='line'>If the box appears to be booting properly, you may want to increase
</span><span class='line'>the timeout <span class="o">(</span><span class="s2">&quot;config.vm.boot_timeout&quot;</span><span class="o">)</span> value.
</span></code></pre></td></tr></table></div></figure>

<p>ssh 인증에 실패하면서 계속 시도하다가 결국 그냥 종료되어 버린다. 사실 가상 머신이 종료된 것은 아니다. ssh로 직접 접속하면 접속은 된다. 이 문제가 발생한 것은 이전이지만 당장 다른 작업들이 급해서 그냥 아래의 방법을 통해 사용중이었다.</p>

<p><strong>Vagrantfile 에 아래의 내용을 추가한다.</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&quot;vagrant&quot;</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s2">&quot;vagrant&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>이 방법은 ssh key를 사용하지 않고 아이디/비밀번호를 입력하는 방식으로 ssh 접속하는 것이다. 사실 이렇게하면 문제는 해결된다. 어짜피 비밀번호에 대한 보안이 중요한 상황도 아니므로 그냥 사용해도 무방하다. 그런데 그냥 사용하기에는 찜찜했다. 특별히 권장하거나 일반적인 방법이 아닌데다가 기존에는 굳이 이렇게하지 않아도 잘 동작하고 있었기 때문이다.</p>

<p>그래서 오늘 많은 검색과 여러가지 방법을 시도한 끝에 해결 방법을 찾았다. 결론은 box 내부에서 처리하는 과정에 문제가 아니라 내 PC의 문제로 보인다. 해결 방법은 다음과 같다.</p>

<p><strong>Vagrantfile 에 아래의 내용을 추가한다.</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">insert_key</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>

<p>아마도 내가 vagrant를 자주 변경하고 실험하는 사이에 뭔가 설정이 꼬인 것 같다. 이 옵션을 해결되는 것으로 볼 때 내 컴퓨터에 잘못된 키가 저장되어 있고 <code>vagrant up</code> 과정에서 가상 머신에 key를 변경해 버려서 위 문제가 발생했던 것으로 보인다.</p>

<p>config.ssh.insert_key는 <a href="https://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html">메뉴얼</a>에 아래와 같이 설명되어 있다.</p>

<blockquote>
<p>config.ssh.insert_key - If true, Vagrant will automatically insert an keypair to use for SSH, replacing the default Vagrant&#39;s insecure key inside the machine &gt; if detected. By default, this is true.</p>

<p>This only has an effect if you don&#39;t already use private keys for authentication or if you are relying on the default insecure key. If you don&#39;t have to take care about security in your project and want to keep using the default insecure key, set this to false.</p>
</blockquote>

<p>검색을 하다보니 이 두가지 방법 외에도 여러가지 방법이 제안되는 것으로 보아 다른 문제로 인해 이런 현상이 나타나는 경우도 있는 것 같다. 어쨌든 위와 같은 문제를 겪는다면 제시한 2가지 방법도 한번 적용해 보면 도움이 될 것으로 생각한다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox 버전업 후 Vagrant synced_folder 설정에서 오류가 날 경우]]></title>
    <link href="http://blog.asamaru.net/2015/12/02/vagrant-cant-mount-shared-folder/"/>
    <updated>2015-12-02T19:39:43+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/02/vagrant-cant-mount-shared-folder</id>
    <content type="html"><![CDATA[<p>vagrant를 사용하면서 로컬과 가상 머신 사이의 파일 전달을 간단히 하려면 synced_folder를 사용하면 된다. 설정도 아주 간단하다. <code>Vagrantfile</code>에 아래의 내용을 추가하면 된다. 당연히 설정값은 자신의 상황에 맞게 지정하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>config.vm.synced_folder <span class="s2">&quot;/local/vagrant/share&quot;</span>, <span class="s2">&quot;/vagrant&quot;</span>, owner: <span class="s2">&quot;web&quot;</span>, group: <span class="s2">&quot;usergroup&quot;</span>, mount_options: <span class="o">[</span><span class="s2">&quot;dmode=777,fmode=777&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>

<p>사실 synced_folder의 단점은 퍼미션에 있다. 나의 경우는 osx 환경에서 centos 가상 머신을 사용하는 상황이라 퍼미션을 유지한 상태로 폴더를 연결하고 싶으나 그렇게는 되지 않는다. 그래서 나는 synced_folder는 파일 전달용으로 사용하고 작업 소스 폴더 등은 NFS를 이용해서 로컬과 가상 머신을 연결한다. 그렇게하면 퍼미션도 유지할 수 있기 때문에 관련 작업시 편하다. 이와 관련해서는 오늘 이야기하고자 하는 부분이 아니므로 일단 넘어가기로 한다.</p>

<p>사실 나도 이렇게 잘 사용하고 있었는데 얼마 전부터 아래와 같은 오류가 나면서 정상적으로 연결이 되지 않았다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>default: /vagrant <span class="o">=</span>&gt; /local/vagrant/share
</span><span class='line'>Failed to mount folders in Linux guest. This is usually because
</span><span class='line'>the <span class="s2">&quot;vboxsf&quot;</span> file system is not available. Please verify that
</span><span class='line'>the guest additions are properly installed in the guest and
</span><span class='line'>can work properly. The <span class="nb">command </span>attempted was:
</span><span class='line'>
</span><span class='line'>mount -t vboxsf -o <span class="nv">uid</span><span class="o">=</span><span class="sb">`</span>id -u web<span class="sb">`</span>,gid<span class="o">=</span><span class="sb">`</span>getent group usergroup <span class="p">|</span> cut -d: -f3<span class="sb">`</span>,dmode<span class="o">=</span>777,fmode<span class="o">=</span><span class="m">777</span> vagrant /vagrant
</span><span class='line'>mount -t vboxsf -o <span class="nv">uid</span><span class="o">=</span><span class="sb">`</span>id -u web<span class="sb">`</span>,gid<span class="o">=</span><span class="sb">`</span>id -g usergroup<span class="sb">`</span>,dmode<span class="o">=</span>777,fmode<span class="o">=</span><span class="m">777</span> vagrant /vagrant
</span></code></pre></td></tr></table></div></figure>

<p>synced_folder의 경우 주로 사용하는 작업용 폴더가 아니라서 일단 무시하고 사용하고 있었는데 vagrant up 할 때마다 오류가 보여서 해결하기로 했다.</p>

<p>기존에는 아무 문제가 없었다. 그래서 가만히 생각해보니 얼마전 VirtualBox를 버전업 했다는 사실이 떠올랐다. 그래서 확인해보니 이 부분이 문제를 일으키는 원인이 맞았다. synced_folder의 경우 vboxsf를 사용하는데 VirtualBox가 버전업 되면서 호환이 되지 않았던 것이다(4.3.30 -&gt; 5.0.10). 간단히 생각하면 VBoxGuestAdditions을 다시 설치해주면 된다. 그런데 이렇게 하려니 가상 머신마다 일일이 작업을 해야하기 때문에 귀찮다.</p>

<p>그래서 조금 찾아보니 <a href="https://github.com/mitchellh/vagrant/issues/3341">Vagrant can&#39;t mount shared folder in VirtualBox 4.3.10</a>에 해결 방법이 있었다.</p>

<p>간단히 요약하면 <code>vagrant-vbguest</code> 플러그인을 설치하면 vagrant up 시에 알아서 GuestAdditions을 다시 설치해 준다. 우선 <code>vagrant-vbguest</code> 플러그인을 설치하려면 local에서 아래와 같이 실행한다(osx 기준이다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant plugin install vagrant-vbguest
</span><span class='line'>
</span><span class='line'>Installing the <span class="sb">`</span>vagrant-vbguest<span class="sb">`</span> plugin. This can take a few minutes...
</span><span class='line'>Installed the plugin <span class="s1">&#39;vagrant-vbguest (0.11.0)&#39;</span>!
</span></code></pre></td></tr></table></div></figure>

<p>그리고 다시 vagrant up을 하면 아래와 같이 다시 설치하는 모습을 볼 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">==</span>&gt; default: Machine booted and ready!
</span><span class='line'>GuestAdditions versions on your host <span class="o">(</span>5.0.10<span class="o">)</span> and guest <span class="o">(</span>4.3.30<span class="o">)</span> <span class="k">do</span> not match.
</span><span class='line'>Loaded plugins: fastestmirror
</span><span class='line'>Repodata is over <span class="m">2</span> weeks old. Install yum-cron? Or run: yum makecache fast
</span><span class='line'>Determining fastest mirrors
</span><span class='line'> * base: mirror.premi.st
</span><span class='line'> * extras: mirror.premi.st
</span><span class='line'> * updates: mirror.premi.st
</span><span class='line'>Package kernel-devel-3.10.0-229.14.1.el7.x86_64 already installed and latest version
</span><span class='line'>Package gcc-4.8.3-9.el7.x86_64 already installed and latest version
</span><span class='line'>Package 1:make-3.82-21.el7.x86_64 already installed and latest version
</span><span class='line'>Package 4:perl-5.16.3-285.el7.x86_64 already installed and latest version
</span><span class='line'>Package bzip2-1.0.6-12.el7.x86_64 already installed and latest version
</span><span class='line'>Nothing to <span class="k">do</span>
</span><span class='line'>Copy iso file /Applications/VirtualBox.app/Contents/MacOS/VBoxGuestAdditions.iso into the box /tmp/VBoxGuestAdditions.iso
</span><span class='line'>mount: /dev/loop0 is write-protected, mounting <span class="nb">read</span>-only
</span><span class='line'>Installing Virtualbox Guest Additions 5.0.10 - guest version is 4.3.30
</span><span class='line'>Verifying archive integrity... All good.
</span><span class='line'>Uncompressing VirtualBox 5.0.10 Guest Additions <span class="k">for</span> Linux............
</span><span class='line'>VirtualBox Guest Additions installer
</span><span class='line'>Removing installed version 4.3.30 of VirtualBox Guest Additions...
</span><span class='line'>Copying additional installer modules ...
</span><span class='line'>Installing additional modules ...
</span><span class='line'>Removing existing VirtualBox non-DKMS kernel modules<span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'>Building the VirtualBox Guest Additions kernel modules
</span><span class='line'>Building the main Guest Additions module<span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'>Building the shared folder support module<span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'>Building the OpenGL support module<span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'>Doing non-kernel setup of the Guest Additions<span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'>You should restart your guest to make sure the new modules are actually used
</span></code></pre></td></tr></table></div></figure>

<p><a href="https://github.com/mitchellh/vagrant/issues/3341">Vagrant can&#39;t mount shared folder in VirtualBox 4.3.10</a>에서는 <code>sudo ln -s /opt/VBoxGuestAdditions-4.3.10/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions</code> 처리를 통해 심볼릭 링크를 만들어 주고 있지만 나의 경우는 <code>vagrant-vbguest</code> 플러그인이 이 과정도 처리해놔서 별도로 처리하지는 않았다.</p>

<p>하지만 이 과정이 필요하다면 동일하게 처리해 줘야할 수 있다. 나의 경우로 예를들자면 VirtualBox가 5.0.10이므로 <code>sudo ln -s /opt/VBoxGuestAdditions-5.0.10/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions</code>라고 해야한다. 그런데 여기서도 문제가 있을 수 있다. 나의 경우는 최초 설치가 아니라 이미 사용중이었으므로 <code>/usr/lib/VBoxGuestAdditions</code> 파일이 이미 존재하고 이 파일은 <code>/opt/VBoxGuestAdditions-4.3.30/lib/VBoxGuestAdditions</code>의 심볼릭 링크다. 그래서 아래와 같이 처리해 주어야 한다. 당연히 이 과정은 가상 머신에서 실행한다. 하지만</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su -
</span><span class='line'><span class="nv">$ </span>rm -f /usr/lib/VBoxGuestAdditions
</span><span class='line'><span class="nv">$ </span>ln -s /opt/VBoxGuestAdditions-5.0.10/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions
</span></code></pre></td></tr></table></div></figure>

<p>그런데 다시 vagrant up 시에 아래와 같은 오류가 날 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>GuestAdditions seems to be installed <span class="o">(</span>5.0.10<span class="o">)</span> correctly, but not running.
</span></code></pre></td></tr></table></div></figure>

<p>또는</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/sbin/mount.vboxsf: mounting failed with the error: No such device
</span></code></pre></td></tr></table></div></figure>

<p>이 경우는 vboxadd 서비스가 부팅시에 자동으로 시작되도록 되어있지 않기 때문이다. 따라서 서비스를 아래와 같이 추가해 주어야 한다. 이 명령 또한 가상 머신에서 실행하는 것이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>vboxadd.service
</span></code></pre></td></tr></table></div></figure>

<p>단, 여기서 유의할 점은 위 과정은 CentOS 7 기준이라는 것이다. 따라서 상황에 따라 <code>systemctl</code>에 관련된 부분을 수정해야 한다. 예를들어 CentOS 6.5의 경우라면 아래의 명령을 사용해야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chkconfig --add vboxadd
</span><span class='line'><span class="nv">$ </span>chkconfig vboxadd on
</span></code></pre></td></tr></table></div></figure>

<p>이제 다 되었다. 기존처럼 synced_folder를 사용할 수 있다.</p>

<p>이 글의 내용을 요약하자면 이렇다. <strong>VirtualBox의 버전업을 한 후 vboxsf가 정상 동작하지 않는다면 VBoxGuestAdditions를 재설치 해야한다. 매번 재설치하는 것이 귀찮다면 <code>vagrant-vbguest</code> 플러그인을 사용한다.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx : 414 Request-URI Too Large 오류]]></title>
    <link href="http://blog.asamaru.net/2015/12/02/nginx-414-request-uri-too-large/"/>
    <updated>2015-12-02T16:17:54+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/02/nginx-414-request-uri-too-large</id>
    <content type="html"><![CDATA[<p>Nginx를 사용하는 중에 아주 긴 URL의 요청이 들어올 경우 <code>414 Request-URI Too Large</code> 오류가 나는 경우가 있다. 이는 말 그대로 URL 요청이 제한된 길이보다 길기 때문에 오류가 발생하는 것이다. 일반적인 웹 서버들은 8kb를 최대 길이로 설정되어 있는 것이 보통이다. 실제로 Nginx의 경우도 기본은 8kb이다. 하지만 URL의 길이는 서버에서 받아주는 길이도 관련이 있지만 웹 브라우저에서도 제한이 있다. 예를들어 오래된 브라우저들은 2kb 가량의 제한이 있다. 하지만 최신 브라우저들은 8kb로 제한하는 것으로 알고 있다.</p>

<p>하지만 나의 경우는 이 값을 1kb로 설정해 둔 상태로 조금 긴 Url에서 해당 오류가 발생했다. 그래서 2kb로 늘려 두었다.</p>

<p>그러면 Nginx에서는 이 값을 어떻게 조정할 수 있을까? 바로 <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers">large_client_header_buffers</a>를 사용하면 된다. 예를들면 아래와 같이 사용한다(디폴트 값을 예시로 넣었다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">http</span> <span class="p">{</span>
</span><span class='line'>  <span class="kn">large_client_header_buffers</span> <span class="mi">4</span> <span class="mi">8k</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">http</span> <span class="p">{</span>
</span><span class='line'>  <span class="kn">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">large_client_header_buffers</span> <span class="mi">4</span> <span class="mi">8k</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers">공식 메뉴얼</a>에는 아래와 같이 설명되어 있다.</p>

<blockquote>
<p>Syntax: large_client_header_buffers number size;
Default: large_client_header_buffers 4 8k;
Context: http, server</p>
</blockquote>

<p>Sets the maximum number and size of buffers used for reading large client request header. A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large) error is returned to the client. A request header field cannot exceed the size of one buffer as well, or the 400 (Bad Request) error is returned to the client. Buffers are allocated only on demand. By default, the buffer size is equal to 8K bytes. If after the end of request processing a connection is transitioned into the keep-alive state, these buffers are released.</p>

<p>여기서 조금 애매한 부분이 number 값인데 명확히 어떤 역할인지를 아직 잘 모르겠다. 찾아보니 number * size가 최대 사이즈라고 하는데 테스트 해보니 그건 아닌 것 같다(number가 2이고 size가 1k인 상황에서 1024자를 넘어가니 414 오류가 발생했다).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[selinux + PHP : Session Permission denied 오류]]></title>
    <link href="http://blog.asamaru.net/2015/12/02/selinux-plus-php-session-permission-denied-error/"/>
    <updated>2015-12-02T12:53:59+09:00</updated>
    <id>http://blog.asamaru.net/2015/12/02/selinux-plus-php-session-permission-denied-error</id>
    <content type="html"><![CDATA[<p>서버를 새로 세팅하면서 CentOS 7에서 selinux와 함께 PHP 5.6을 설치했다. 기존에는 selinux를 사용하지 않도록 했었는데 이번에는 사용하도록 설정해서 설치를 완료했다. 그런데 세션을 사용하려고 <code>session_start();</code>를 하면 아래와 유사한 오류가 발생했다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FastCGI sent in stderr: "PHP message: PHP Warning: session_start(): open(/var/lib/php/session/sess_sk456vdemnp391spiv3i622i96, O_RDWR) failed: Permission denied</span></code></pre></td></tr></table></div></figure>

<p>당연히 원인은 selinux이다. selinux가 적용된 상태라면 아무리 777 권한을 부여해도 접근을 할 수 없다. 그 해결법은 <a href="http://stackoverflow.com/a/33030627">(nginx/selinux) Permission denied error for sessions but files are created</a>에 잘 설명되어 있다.</p>

<p>결과적으로 아래의 방법을 통해 문제를 해결할 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir /var/lib/php/session
</span><span class='line'><span class="nv">$ </span>mkdir /var/lib/php/wsdlcache
</span><span class='line'><span class="nv">$ </span>chmod <span class="m">777</span> /var/lib/php/session /var/lib/php/wsdlcache
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>restorecon -v <span class="s2">&quot;/var/lib/php/session&quot;</span>
</span><span class='line'><span class="nv">$ </span>semanage fcontext -a -t httpd_sys_rw_content_t /var/lib/php/session
</span><span class='line'><span class="nv">$ </span>restorecon -v <span class="s2">&quot;/var/lib/php/wsdlcache&quot;</span>
</span><span class='line'><span class="nv">$ </span>semanage fcontext -a -t httpd_sys_rw_content_t /var/lib/php/wsdlcache
</span></code></pre></td></tr></table></div></figure>

<p>mkdir과 chmod는 필요 없을 수 있다. 나의 경우는 아예 폴더도 만들어져 있지 않아서 폴더를 생성하고 권한도 함께 지정했다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx(stable / mainline) 설치 - CentOS 6.5 / 7]]></title>
    <link href="http://blog.asamaru.net/2015/11/27/installing-nginx-on-centos-6-dot-5-slash-7/"/>
    <updated>2015-11-27T15:49:16+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/27/installing-nginx-on-centos-6-dot-5-slash-7</id>
    <content type="html"><![CDATA[<p><a href="http://nginx.org/">Nginx</a>는 <a href="https://ko.wikipedia.org/wiki/Nginx">위키피디아</a>에서 아래와 같이 설명하고 있다.</p>

<blockquote>
<p>Nginx(엔진 x라 읽는다)는 웹 서버 소프트웨어로, 가벼움과 높은 성능을 목표로 한다. 웹 서버, 리버스 프록시 및 메일 프록시 기능을 가진다.</p>

<p>Netcraft의 2011년 1월 웹서버 설문조사에 따르면, nginx는 전체 도메인에서 4번째(7.50%)로 많이 쓰이는 웹서버이며, 활성화된 웹 사이트에 대한 통계에서도 역시 4번째(8.23%)로 많이 사용된다[1].</p>

<p>Nginx는 요청에 응답하기 위해 비동기 이벤트 기반 구조를 가진다. 이것은 아파치 HTTP 서버의 스레드/프로세스 기반 구조를 가지는 것과는 대조적이다. 이러한 구조는 서버에 많은 부하가 생길 경우의 성능을 예측하기 쉽게 해준다.</p>
</blockquote>

<p>기존에는 Apache를 사용하고 있었다. Apache의 다양한 기능 때문이라기 보다는 익숙함 때문이었다. 그런데 예전부터 <a href="http://nginx.org/">Nginx</a>에 대한 사람들의 평가(Apache의 튜닝 상태에 따라 다른 결과를 보이기도 한다)를 볼 때마다 언젠가는 갈아타야지 싶었는데 최근에야 이 생각을 실천하게 되었다. 그레서 <a href="http://nginx.org/">Nginx</a>를 설치하는 과정을 정리하고자 한다.</p>

<hr>

<p>CentOS에서 Nginx의 설치는 크게 소스를 컴파일해서 설치하는 방법과 YUM을 통해 설치하는 방법이 있다. Nginx의 경우 Apache와 다르게 모듈을 추가할 경우엔 무조건 소스 설치를 해야한다(모듈을 포함시켜 컴파일 해야 한다). 따라서 mod_pagespeed나 pagespeed 등을 사용하고자 하는 경우에는 소스 설치를 해야 한다. 오늘은 YUM 설치를 기준으로 설명하고자 하니 모듈을 추가해서 설치하는 방법은 아래의 링크들을 참고하자.</p>

<ul>
<li><a href="http://www.nginxtips.com/how-to-install-mod_security-on-nginx/">How to install Mod_Security on Nginx</a>
<a href="https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source">Build ngx_pagespeed From Source</a></li>
<li><a href="http://d2.naver.com/helloworld/192785">NGINX 모듈 제작하기</a></li>
</ul>

<p>사실 기본적인 설치는 <a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/">공식 메뉴얼</a>에 아주 잘 설명되어 있고 간단하다. 내용을 옮겨 적자면 아래와 같다.</p>

<p><code>/etc/yum.repos.d/nginx.repo</code> 파일을 생성해서 아래의 내용을 넣는다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[nginx]
</span><span class='line'>name=nginx repo
</span><span class='line'>baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
</span><span class='line'>gpgcheck=0
</span><span class='line'>enabled=1</span></code></pre></td></tr></table></div></figure>

<p>그리고는 아래와 같이 yum 으로 설치한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install nginx
</span></code></pre></td></tr></table></div></figure>

<p>혹시 EPEL을 이용해서 설치하고 싶다면 <code>/etc/yum.repos.d/nginx.repo</code> 파일을 생성할 필요없이 아래와 같이하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install epel-release
</span><span class='line'>sudo yum install nginx
</span></code></pre></td></tr></table></div></figure>

<p>끝이다. 정말 간단하다. 설명할 것도 없다. 하지만 사실 이 글을 적는 이유는 이제부터다.</p>

<p>Nginx는 기본적으로 두가지 버전이 존재한다. stable 버전과 mainline 버전이다. 사실상 최신 버전은 mainline 이다. 2015-11-27일 기준으로 stable은 nginx-1.8.0, mainline은 1.9.7이다. 말그대로 stable 버전이 안정 버전이므로 사용이 권장되기는 하나 mainline도 불안정한 것은 아니다.</p>

<p><a href="http://serverfault.com/a/715126">What’s the difference between the “mainline” and “stable” branches of nginx?</a>의 설명대로라면 mainline을 더 권장한다. stable 버전이라고 버그가 없는 것이 아니며 버그 패치는 mainline에 먼저 된다는 이유 때문이다.</p>

<p>그래서 나는 mainline으로 설치하기로 했다. 설치 방법은 위의 stable과 별반 다르지 않으나 repository의 url만 차이가 난다.</p>

<p><code>/etc/yum.repos.d/nginx.repo</code> 파일을 생성해서 아래의 내용을 넣는다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nginx<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>nginx repo
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://nginx.org/packages/mainline/centos/<span class="se">\$</span>releasever/<span class="se">\$</span>basearch/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>

<p>그리고는 아래와 같이 yum 으로 설치한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install nginx
</span></code></pre></td></tr></table></div></figure>

<p>이것 또한 아주 간단하다. 약간의 부가 작업을 포함해서 bash shell 스크립트를 하나 만들어 뒀다.</p>

<p>nginx.install.sh</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="k">function</span> printTitle <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> -e <span class="s2">&quot;\e[1;97m=======================================\e[0m&quot;</span>
</span><span class='line'>    <span class="nb">echo</span> -e <span class="s2">&quot;\e[1;97m* $1\e[0m&quot;</span>
</span><span class='line'>    <span class="nb">echo</span> -e <span class="s2">&quot;\e[1;97m=======================================\e[0m&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> printJob <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> -e <span class="s2">&quot;\e[94m* $1\e[0m&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> printSubJob <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> -e <span class="s2">&quot;\e[96m\t$1\e[0m&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>printTitle <span class="s2">&quot;Nginx 설치&quot;</span>
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;httpd.service 종료&quot;</span>
</span><span class='line'>systemctl stop httpd.service
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;httpd.service 제거&quot;</span>
</span><span class='line'>yum remove -y httpd
</span><span class='line'>systemctl disable httpd.service
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;Nginx 설치&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -e /etc/yum.repos.d/nginx.repo <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    printSubJob <span class="s2">&quot;nginx repository 추가&quot;</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;[nginx]&quot;</span> &gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;name=nginx repo&quot;</span> &gt;&gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;baseurl=http://nginx.org/packages/mainline/centos/\$releasever/\$basearch/&quot;</span> &gt;&gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'>    <span class="c">#echo &quot;baseurl=http://nginx.org/packages/centos/\$releasever/\$basearch/&quot; &gt;&gt; /etc/yum.repos.d/nginx.repo</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;gpgcheck=0&quot;</span> &gt;&gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;enabled=1&quot;</span> &gt;&gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>printSubJob <span class="s2">&quot;nginx package 설치&quot;</span>
</span><span class='line'>yum install -y nginx
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;Nginx 서비스 활성&quot;</span>
</span><span class='line'>systemctl <span class="nb">enable </span>nginx.service
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;Nginx 서비스 시작&quot;</span>
</span><span class='line'>systemctl start nginx.service
</span><span class='line'>
</span><span class='line'>printJob <span class="s2">&quot;방화벽 설정&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="sb">`</span>firewall-cmd --zone<span class="o">=</span>public --list-all<span class="p">|</span>grep <span class="s2">&quot;services&quot;</span><span class="p">|</span>grep <span class="s2">&quot;http&quot;</span> <span class="p">|</span> wc -l<span class="sb">`</span> -eq <span class="m">0</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    printSubJob <span class="s2">&quot;http/https 개방&quot;</span>
</span><span class='line'>    firewall-cmd --permanent --zone<span class="o">=</span>public --add-service<span class="o">=</span>http
</span><span class='line'>    firewall-cmd --permanent --zone<span class="o">=</span>public --add-service<span class="o">=</span>https
</span><span class='line'>
</span><span class='line'>    printSubJob <span class="s2">&quot;방화벽 rule reload&quot;</span>
</span><span class='line'>    firewall-cmd --reload
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>

<p>위 소스는 CentOS 7에서 firewalld를 사용하는 것을 기준으로 만들어진 것이니 참고하기 바란다. 그리고 원래 내가 사용하는 소스에서 불필요한 부분을 제거하고 넣은 것이라 <code>print***</code> 함수 같은 부분이 잘못 되었을 수 있는데 오류가 난다면 관련 부분을 모두 제거하면 된다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[protobuf (Protocol Buffers)를 PHP에서 사용하기]]></title>
    <link href="http://blog.asamaru.net/2015/11/25/protobuf-protocol-buffers/"/>
    <updated>2015-11-25T19:53:52+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/25/protobuf-protocol-buffers</id>
    <content type="html"><![CDATA[<p><a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>는 무엇일까?
공식 사이트에서 아래와 같이 설명하고 있다.</p>

<blockquote>
<p>Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.</p>
</blockquote>

<p>간단히 말하면 언어와 플랫폼에 중립적이며 확장 가능한 구조화된 데이터 직렬화 도구라고 할 수 있겠다. XML과 유사하지만 더 작고, 더 빠르며, 더 단순하다고 소개하고 있다.</p>

<p>이번 글에서는 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a> 자체에 대한 연구가 목적이 아니므로 참고할 만한 글을 아래에 소개하는 것으로 자세한 설명을 대체한다.</p>

<ul>
<li><p><a href="https://developers.google.com/protocol-buffers/docs/overview">Protocol Buffers Developer Guide</a></p></li>
<li><p><a href="https://github.com/eishay/jvm-serializers/wiki">Benchmark comparing serialization libraries on the JVM</a></p></li>
<li><p><a href="http://www.cgcii.co.kr/index.php?document_srl=2017&amp;mid=board_eLHH13">Tips - C++, C#, protobuf, JSON직렬화 성능 얼마나 차이날까?</a></p></li>
<li><p><a href="http://egloos.zum.com/javawork/v/2720889">Google Protocol Buffers 기본 사용법</a></p></li>
<li><p><a href="http://knight76.tistory.com/1366">구글 프로토콜 버퍼 (Google Protocl Buffer)</a></p></li>
</ul>

<hr>

<p>본론으로 들어가자면 이번에 개인적인 작업을 하는 과정에서 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>를 사용할 일이 생겼다. 정확히 이야기하자면 Google Play를 대상으로 몇가지 실험을 하고 있다. 그런데 이 작업을 하다보니 Google Play 서버와 통신을 하려면 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>를 사용 해야만 했다. <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>가 너무 길어서 이하에서는 그냥 PB라고 하겠다.</p>

<p>이번 작업에 필요한 몇가지 요소들을 지원하는 오픈소스 라이브러리들이 몇가지 있었으나 개발이 오래동안 멈춰진 것들이 대부분이라 기존 오픈소스들을 참고해서 직접 구현하기로 했다(사실 이 부분이 나의 최대 실수다. 생각보다 작업이 만만치 않아 시간을 많이 소요했다). 기존 오픈소스들은 java와 python, ruby로 구성된 것이 많았다. 그런데 나는 PHP로 구성하고 싶었다. 지금 생각하면 왜 그런 결정을 했는지 모르겠다. python이야 아직 익숙치 않아 패스하더라도 java로 작업하면 생각보다 빠르게 작업이 완료될 수 있었는데... 이야기가 갑자기 옆으로 샜는데 다시 본론으로...</p>

<p>어쨌든 PHP로 PB를 사용하는 것부터 시작해야 했다. 그런데 PB는 기본적으로 C++, JAVA, PYTHON을 지원한다. PHP를 공식 지원하지 않으므로 지원 라이브러리부터 찾아야 한다.</p>

<p>아래의 사이트들을 참고하자. 이 외에도 찾아보면 여러가지가 있다.</p>

<ul>
<li><a href="http://stuporglue.org/using-google-protcol-buffers-with-php-and-protoc-gen-php/">Using Google Protcol Buffers with PHP and protoc-gen-php</a></li>
<li><a href="http://phptrends.com/dig_in/protobuf">Php Trends.com : protobuf</a></li>
</ul>

<p>PHP에서 PB를 사용하는 오픈소스 중 그런대로 가장 이름이 알려진 프로젝트는 <a href="https://github.com/drslump/Protobuf-PHP">drslump/Protobuf-PHP</a> 였다(주관적인 생각이다). 그런데 설치 과정과 사용법이 간단하게 설명되어 있었지만 실제로는 그리 간단하지 않았다. 그래서 일단 접어두고 다른 라이브러리들도 하나씩 테스트 했다. 두서없이 작업하다보니 일일이 기록을 남기지 못했다. 잘 정리해 두었다면 비교에 도움이 되었을텐데 그 당시에는 정신이 없었다. 생각대로 되지 않아 닥치는대로 막 적용을 해보고 있었던지라.</p>

<p>결국 현재는 <a href="https://github.com/chobie/protoc-gen-php">chobie/protoc-gen-php</a>로 정착했다. 사실 이 라이브러리도 문제가 많긴하다. php에 모듈을 별도 설치해야하고 기타 의존 라이브러리도 설치해야 한다(간단하게 사용하려고 php를 선택한 것인데). 그리고 이 라이브러리는 <a href="https://pecl.php.net/package/protocolbuffers">PECL:protocolbuffers</a>에 등록되어 있어서 PECL을 사용해 설치도 가능하다. 하지만 나는 직접 설치했다. 이 라이브러리가 업데이트가 된지 오래되서 오류가 있는 부분을 몇가지 수정해서 사용하게 되면서 모듈을 그대로 사용할 수 없었다.</p>

<p>아래는 사용에 필요한 모듈들을 설치하는 과정을 bash shell로 작성해 둔 것이다. 실제 사용시에는 자신의 환경에 맞춰서 사용하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>su -c <span class="s2">&quot;yum install -y php56w-mbstring php56w-bcmath&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># protobuf 설치</span>
</span><span class='line'><span class="c"># https://github.com/chobie/protoc-gen-php</span>
</span><span class='line'>su -c <span class="s2">&quot;yum install -y protobuf-compiler&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># https://github.com/chobie/php-protocolbuffers</span>
</span><span class='line'><span class="nb">cd </span>libs/bin/
</span><span class='line'>git clone https://github.com/chobie/php-protocolbuffers.git
</span><span class='line'><span class="nb">cd </span>php-protocolbuffers
</span><span class='line'>su -c <span class="s2">&quot;yum install -y php56w-devel&quot;</span>
</span><span class='line'>phpize
</span><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>su -c <span class="s2">&quot;make install ; echo \&quot;extension=protocolbuffers.so\&quot; &gt;&gt; /etc/php.ini&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>아래는 composer.json 설정 부분이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;require&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;asamaru7/protoc-gen-php&quot;</span><span class="p">:</span> <span class="s2">&quot;~0.1.1&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>갑자기 모듈명이 asamaru7로 변경된 것에 유의하자. <a href="https://github.com/chobie/protoc-gen-php">chobie/protoc-gen-php</a>의 fork 프로젝트에서 변경 부분을 내가 따로 fork한 프로젝트에 merge하고 내가 필요한 부분을 수정해서 <a href="https://packagist.org/packages/asamaru7/protoc-gen-php">Packagist</a>에 등록했다.</p>

<p>다음으로 proto 파일로 실제 php 파일을 만드는 과정이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>protoc <span class="se">\</span>
</span><span class='line'>    --plugin<span class="o">=</span>protoc-gen-php<span class="o">=</span><span class="s1">&#39;../vendor/asamaru7/protoc-gen-php/bin/protoc-gen-php&#39;</span> <span class="se">\</span>
</span><span class='line'>    --proto_path<span class="o">=</span><span class="s1">&#39;/home/web/project/libs/protobuf/&#39;</span> <span class="se">\</span>
</span><span class='line'>    --php_out<span class="o">=</span><span class="s1">&#39;:../Class/Protobuf&#39;</span> <span class="se">\</span>
</span><span class='line'>    <span class="s1">&#39;/home/web/project/libs/protobuf/logs.proto&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<p>이상하게 <code>--proto_path</code>를 사용함에도 full path를 지정해만 정상적으로 생성이 된다. 자주 사용할 부분이 아니므로 일단 패스했다.</p>

<p>마지막으로 php에서의 사용.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="s2">&quot;https://android.clients.google.com/~~&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_HEADER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POST</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">serializeToString</span><span class="p">());</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_FOLLOWLOCATION</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_HTTPHEADER</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;Content-type: application/x-protobuffer&quot;</span>
</span><span class='line'><span class="p">]);</span>
</span><span class='line'><span class="nv">$content</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>$request-&gt;serializeToString()</code> 이 부분이 중요한 부분이다. <code>$request</code>는 protoc에 의해 생성된 class의 인스턴스다. 전송시에는 <code>serializeToString()</code>를 사용해서 직렬화하는 것이다.</p>

<p>다음은 수신시.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$response</span> <span class="o">=</span> <span class="nx">\Response</span><span class="o">::</span><span class="na">parseFromString</span><span class="p">(</span><span class="nv">$content</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>parseFromString()</code>를 사용해서 수신된 PB 직렬화 데이터를 역직렬화 할 수 있다.</p>

<hr>

<p>그런데 가급적 PHP에서는 PB를 사용하지 말자. &quot;이제까지 사용 방법을 설명해놓고 이게 무슨 말이야?&quot;라고 생각할 수 있는데 이유를 설명하겠다.</p>

<p>이번에 설명한 라이브러리뿐 아니라 <a href="https://github.com/drslump/Protobuf-PHP">drslump/Protobuf-PHP</a> 외에도 테스트한 모든 라이브러리가 group type을 지원하지 않는다. PB v2에서 deprecated 된 type이긴 하지만 Google Play에서는 group type을 사용하고 있었다. 다행히 내가 하고자하는 부분에서는 group이 필요없어서 proto 파일에서 제거하고 작업했지만 group type을 사용하게 되면 오류가 난다. 내가 테스트 해보지 못한 라이브러리에서 지원하는 것이 있을지는 모르겠지만 내가 본 것은 없다. 또한 int의 길이 문제과 같이 데이터 타입에 대한 처리에 신경을 써줘야하는 부분들이 있다.</p>

<p>pure php로 만들어진 라이브러리가 아닌 이상 어짜피 외부 모듈의 설치가 필요하니 아예 이 부분을 python이나 java로 처리하는게 나을지도 모른다. 게다가 pure php로 제작된 모듈은 성능 상의 문제에 대한 이야기도 있다(어짜피 나의 경우는 성능은 중요하지 않은 경우이지만).</p>

<p>그 외에도 작업중에 PB 때문에 고생한 것을 생각하면... 정말 권하고 싶지 않다. 사실 내가 사용을 잘못해서 그런 것일 수 있지만... 어쨌든 JSON 등에 비해 PHP에서의 이득은 없는 것 같다.</p>

<p>그럼에도 나의 경우처럼 상대 서버가 PB를 사용해서 어쩔 수 없다면 위 글을 참고하길 바란다.</p>

<hr>

<p>이번 작업에 대해서는 자세히 설명하고자 하면 너무 길어져서 중간중간 필요한 부분만 적었다. 그러다 보니 &quot;이게 무슨 말인가?&quot;라는 생각이 들 수 있는데 양해 바란다. 이해가 안되는 부분은 질문한다면 따로 설명하도록 하겠다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift : Async - Background Threads - GCD(Grand Central Dispatch)]]></title>
    <link href="http://blog.asamaru.net/2015/11/24/swift-background-threads-gcd-grand-central-dispatch/"/>
    <updated>2015-11-24T07:35:18+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/24/swift-background-threads-gcd-grand-central-dispatch</id>
    <content type="html"><![CDATA[<p>오늘은 swift에 비동기 처리에 사용하는 <a href="https://github.com/duemunk/Async">Async</a>라는 라이브러리를 소개하고자 한다. <a href="https://github.com/duemunk/Async">Async</a>는 &quot;Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch&quot;라고 소개되어 있다. <a href="https://github.com/duemunk/Async">Async</a>를 소개하기 전에 swift에서의 기본적인 비동기 처리에 대해 먼저 설명한다.</p>

<p>swift는 비동기(Asynchronous) 처리에 사용하는 <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand Central Dispatch)</a>를 사용할 수 있다. GCD(Grand Central Dispatch)는 C로 구성된 스레드 관리 기술로 iOS4 부터 지원한다. NSThread, NSOperation 보다 쉽게 쉽게 사용할 수 있다.</p>

<p>스레드는 다양한 병렬 작업에 사용하지만 특히 앱 개발시에는 더욱 자주 사용하게 된다. 안드로이드와 iOS는 UI처리 등의 앱의 실행을 main 스레드에서 처리한다. 그런데 이 main 스레드에서 무거운 작업을 하게 된다면 UI의 갱신이 지연되므로 화면의 멈춤 현상이 발생한다. 특히 안드로이드의 경우는 main 스레드에서 네트워크 처리 등을 할 수 없도록 제한이 걸려있다(제한을 풀 수 있으나 ANR 문제 등으로 결국은 사용하지 못하는 것과 같다). 이러한 문제를 해결하기 위해서는 스레드의 사용이 필수다.</p>

<p>그럼 <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand Central Dispatch)</a>에 대해서 알아보자.</p>

<p>GCD는 기본적으로 아래의 queue를 가지고 있다.</p>

<ul>
<li><p><strong>Main</strong>: tasks execute serially on your application’s main thread</p></li>
<li><p><strong>Concurrent</strong>: tasks are dequeued in FIFO order, but run concurrently and can finish in any order.</p></li>
<li><p><strong>Serial</strong>: tasks execute one at a time in FIFO order</p></li>
</ul>

<p>GCD에 대한 자세한 설명은 워낙에 많으니 자세히 설명하지 않고 간단한 예시만 보여주고자 한다.</p>

<p>일단 swift 이전에 objective-c에서는 아래와 같이 사용한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">// do some task</span>
</span><span class='line'>  <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>      <span class="c1">// update some UI</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>동일한 동작을 swift에서 사용하면 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">priority</span> <span class="o">=</span> <span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span>
</span><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">priority</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// do some task</span>
</span><span class='line'>  <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// update some UI</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>block object의 표현만 차이가 날 뿐 사실상 거의 차이가 없다.</p>

<p>위 코드를 간단히 설명하자면 global queue에서 작업을 수행하고 main queue에서 UI 변경 작업을 하도록 한 코드다.</p>

<p>뭐 크게 사용이 어렵지도 않고 크게 불편하지는 않다. 하지만 이런 과정을 더욱 쉽게 구성할 수 있도록 도와주는 것이 <a href="https://github.com/duemunk/Async">Async</a>다. 상세한 예시는 해당 사이트를 방문하면 다양하게 소개하고 있다.</p>

<p>그 중에서 Async의 장점을 잘 보여주는 예시를 하나 소개한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">seconds</span> <span class="o">=</span> <span class="mf">0.5</span>
</span><span class='line'><span class="n">Async</span><span class="p">.</span><span class="n">main</span><span class="p">(</span><span class="nl">after</span><span class="p">:</span> <span class="n">seconds</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;Is called after 0.5 seconds&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}.</span><span class="n">background</span><span class="p">(</span><span class="nl">after</span><span class="p">:</span> <span class="mf">0.4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;At least 0.4 seconds after previous block, and 0.9 after Async code is called&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>&quot;Is called after 0.5 seconds&quot; 메시지를 main 스레드에서 0.5초 뒤에 출력한 후 0.4초 뒤 background 스레드에서 &quot;At least 0.4 seconds after previous block, and 0.9 after Async code is called&quot;를 출력하는 예시다. 이 예시를 보면 알 수 있듯이 <a href="https://github.com/duemunk/Async">Async</a>는 chaining을 지원하며 스레드를 작업 완료에 따라 순차적으로 실행 할 수 있도록 도와준다.</p>

<p>스레드 작업을 취소하는 예시 하나만 더 아래에 소개한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">// Cancel blocks not yet dispatched</span>
</span><span class='line'><span class="k">let</span> <span class="n">block1</span> <span class="o">=</span> <span class="n">Async</span><span class="p">.</span><span class="n">background</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Heavy work</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="mf">.1000</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;A \(i)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">let</span> <span class="n">block2</span> <span class="o">=</span> <span class="n">block1</span><span class="p">.</span><span class="n">background</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;B – shouldn&#39;t be reached, since cancelled&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">Async</span><span class="p">.</span><span class="n">main</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Cancel async to allow block1 to begin</span>
</span><span class='line'>    <span class="n">block1</span><span class="p">.</span><span class="n">cancel</span><span class="p">()</span> <span class="c1">// First block is _not_ cancelled</span>
</span><span class='line'>    <span class="n">block2</span><span class="p">.</span><span class="n">cancel</span><span class="p">()</span> <span class="c1">// Second block _is_ cancelled</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>위에서 소개한 것처럼 <a href="https://github.com/duemunk/Async">Async</a>는 swift에서의 thread 작업을 아주 쉽게 할 수 있도록 도와준다.</p>

<p>한가지 라이브러리를 더 소개하자면 위 라이브러리와는 성격이 조금 다르지만 안드로이드의 AsyncTask 같은 작업이 필요하다면 <a href="https://github.com/ReactKit/SwiftTask">SwiftTask</a>를 참고해보면 도움이 될 것 같다. <a href="https://github.com/ReactKit/SwiftTask">SwiftTask</a>는 &quot;Promise + progress + pause + cancel + retry for Swift.&quot;라고 소개하고 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress : pygments cant parse unknown language: </p> 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/octopress-error-pygments-cant-parse-unknown-language/"/>
    <updated>2015-11-17T14:40:02+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/octopress-error-pygments-cant-parse-unknown-language</id>
    <content type="html"><![CDATA[<p>Octopress에서 <code>rake generate</code>를 하다보면 아래와 같은 오류를 만나는 경우가 있다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jekyll 2.5.3 | Error:  Pygments can't parse unknown language: &lt;/p&gt;</span></code></pre></td></tr></table></div></figure>

<p>Pygments는 소스코드 하이라이팅을 해주는 모듈인데 언어를 알 수 없다고 오류를 내는 것이다. markdown에서 소스코드는 ```로 시작하고 그 뒤에 붙여서 언어 종류를 지정할 수 있다(```ruby 와 같이).</p>

<p>위 오류가 발생한다는 것은 여기에 문제가 있다는 것인데 오류 메시지만 보면 어디서 발생하는 것인지 짐작이 안된다. 그래서 최근에 작성한 글을 다 둘러볼 수 밖에 없다. 그래서 찾아봤더니 <a href="http://reckhhh.github.io/blog/2015/05/01/octopress-error-pygments-cant-parse-unknown-language/">Octopress Error: Pygments Can’t Parse Unknown Language: &lt;/p&gt;</a>라는 글에서 방법을 알려주고 있었다. 정확하게는 오류를 해결해 주는 것이 아니라 위치를 조금 더 찾기 쉽게 해준다.</p>

<p>결론은 <code>plugins/pygments_code.rb</code>을 열어서 다음의 부분을 수정하면 된다(<code>#{code}</code>를 추가하는 것이다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">rescue</span> <span class="no">MentosError</span>
</span><span class='line'><span class="k">raise</span> <span class="s2">&quot;Pygments can&#39;t parse unknown language: </span><span class="si">#{</span><span class="n">lang</span><span class="si">}#{</span><span class="n">code</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>이렇게 하면 위 오류가 날 때 해당 코드 영역을 함께 출력해준다.</p>

<p>사실 나의 경우엔 위 오류가 발생하는 경우의 대부분이 &quot;```ruby 파일명&quot; 형식을 사용할 때 발생했다. GFM에서는 이 형식을 지원하기 때문에 간혹 사용하려는데 이게 제대로 해석이 안되는 경우가 많다. 그렇다고 항상 안되는 것도 아니다. 원인은 알 수 없으나 octopress가 이럴 땐 맘에 들지 않는다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods : Sub Module에서 GoogleMaps 의존성 사용시 Transitive dependency 문제 해결]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library/"/>
    <updated>2015-11-17T13:19:25+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library</id>
    <content type="html"><![CDATA[<p><strong>아래에 설명한 방법을 사용시 런타임시에 문제가 될 수 있어 다른 방법을 찾고 있는 중이니 참고만 하길 바란다.</strong></p>

<p>지난 글 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 transitive dependencies 문제를 해결하는 방법을 설명하려고 한다. 미리 이야기 하지만 사실 아래의 내용은 아주 깔끔하게 해결하는 방법은 아니다. 정확한 해결이 되려면 CocoaPods에서 정식 지원을 해야 해결될 것으로 보인다. 하지만 임시로라도 사용을 해야 한다면 아래의 내용이 도움이 될지도 모르겠다(어쨌든 난 이렇게 사용중이다).</p>

<p>우선 왜 이 문제를 만나게 되었는지 부터 설명하려고 한다.
지난글에서 설명 했던 것과 같이 Sub Module에서 GoogleMaps에 대한 의존성을 지정 해야하는 상황이 발생했다. 그래서 아래와 같이 <code>podspec</code> 파일을 만들었다.</p>

<p><strong>ModuleName.podspec</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~<del>&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;<a href="mailto:nobody@nobody.com">nobody@nobody.com</a>&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://</del>~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/<em>.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/</em><em>/</em>.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;GoogleMaps&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>그런데 <code>[!] The &#39;Pods&#39; target has transitive dependencies that include static binaries: (/~~~/Pods/GoogleMaps/Frameworks/GoogleMaps.framework)</code> 오류가 발생한다(<strong>이전 글에서도 언급했지만 항상 발생하는 것이 아니라 Podfile에서 <code>use_frameworks!</code>를 사용할 경우에 발생한다.</strong>). 그래서 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 것처럼 <code>pre_install</code>을 사용해서 오류는 제거했다. 하지만 실제 작업을 위해 <code>import GoogleMaps</code>를 하면 모듈을 찾지를 못한다. 여기서 부터 삽질이 시작되었다.</p>

<p>static binaries를 포함하는 모듈이 아닌 경우 부모 프로젝트(Sub Module을 사용하는)에서 해당 의존성이 지정되어 있다면 바로 import해서 사용이 가능하다(부모 프로젝트의 Podfile에 <code>pod &#39;GoogleMaps&#39;</code>가 추가되어 있는 경우). 당연히 부모 프로젝트를 열어서 Sub Module을 수정하고 있는 경우를 말한다. 하지만 이 경우는 그것도 안된다(정확한 이유는 아직 모르겠다. static binaries를 포함하고 있어서 그런 것인지 GoogleMaps 모듈이 use_frameworks을 완전하게 지원하지 않아서 인지 명확하지는 않다). 따라서 어떻게 해서든 의존성을 지정해야 한다.</p>

<p>이를 해결하려고 여러가지 시도를 해봤으나 모두 실패했다. 그래서 다른 프로젝트들은 어떻게 해결했나 싶어 github에서 모듈들을 찾아다니다 <a href="https://github.com/poulpix/PXGoogleDirections">PXGoogleDirections</a>를 발견했다. 내가 원했던 것처럼 CocoaPods 모듈에서 GoogleMaps에 대한 의존성을 지정한 모듈이다(사실 다른 모듈들도 찾았으니 그냥 <code>dependency</code>를 사용하고 있었다. 이 모듈들은 확인해보니 나처럼 <code>use_frameworks!</code>를 사용하는 상황에서는 동일한 문제가 발생한다). 그래서 <a href="https://github.com/poulpix/PXGoogleDirections">PXGoogleDirections</a>의 소스를 조금 둘러보니 GoogleMaps의 소스를 프로젝트 내부에 포함하고 있었다. 사실 이 방법이 외부에서 사용시에는 가장 깔끔한 방법으로 보인다. 하지만 난 이렇게는 하고 싶지 않았다.</p>

<p>그래서 <a href="https://github.com/poulpix/PXGoogleDirections/blob/master/PXGoogleDirections.podspec">PXGoogleDirections.podspec</a>를 참고해서 여러 번의 시도 끝에 나름의 방법을 찾았다.</p>

<p>결론은 <code>podspec</code>파일을 아래와 같이 설정하면 된다. 단, <a href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/">Cocoapods : The &#39;Pods&#39; target has transitive dependencies that include static binaries 오류</a>에서 언급한 것처럼 <code>pre_install</code>을 사용해서 오류는 제거해야 한다.</p>

<p><strong>ModuleName.podspec</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~<del>&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;<a href="mailto:nobody@nobody.com">nobody@nobody.com</a>&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://</del>~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/<em>.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/</em><em>/</em>.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;GoogleMaps&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">frameworks</span>            <span class="o">=</span> <span class="s2">&quot;Accelerate&quot;</span><span class="p">,</span> <span class="s2">&quot;AVFoundation&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreBluetooth&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreData&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreLocation&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreText&quot;</span><span class="p">,</span> <span class="s2">&quot;Foundation&quot;</span><span class="p">,</span> <span class="s2">&quot;GLKit&quot;</span><span class="p">,</span> <span class="s2">&quot;ImageIO&quot;</span><span class="p">,</span> <span class="s2">&quot;OpenGLES&quot;</span><span class="p">,</span> <span class="s2">&quot;QuartzCore&quot;</span><span class="p">,</span> <span class="s2">&quot;Security&quot;</span><span class="p">,</span> <span class="s2">&quot;SystemConfiguration&quot;</span><span class="p">,</span> <span class="s2">&quot;CoreGraphics&quot;</span><span class="p">,</span> <span class="s2">&quot;GoogleMaps&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">resource_bundles</span>      <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;GoogleMaps&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;$(PODS_ROOT)/GoogleMaps/Frameworks/GoogleMaps.framework/Resources/*.bundle&#39;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">vendored_frameworks</span>   <span class="o">=</span> <span class="s2">&quot;$(PODS_ROOT)/GoogleMaps/Frameworks/GoogleMaps.framework&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">xcconfig</span>              <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;FRAMEWORK_SEARCH_PATHS&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;$(PODS_ROOT)/GoogleMaps/Frameworks&#39;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>설명하자면 <code>dependency</code>를 통해 의존성을 설정한다. Cocoapods의 특성상 Sub Module의 의존성도 모두 <code>Pods</code>로 통합되어 추가된다(부모 프로젝트에서도 바로 사용 가능하다). 그런데 이렇게만 설정하면 정작 Sub Module에서는 GoogleMaps에 접근할 수 없으므로 관련된 설정을 <code>Pods</code>에 설치된 GoogleMaps에 맞추어준다. <code>frameworks</code>의 경우만 보더라도 GoogleMaps에서 이미 의존성이 다 지정되어 있음에도 불구하고 다시 다 설정해 주어야 한다(<a href="https://github.com/CocoaPods/Specs/blob/master/Specs/GoogleMaps/1.10.5/GoogleMaps.podspec.json">GoogleMaps.podspec.json</a> 참고)</p>

<p>어쨌든 이렇게 하면 문제는 해결된다. 서두에서 언급한 것처럼 내가 봐도 깔끔한 해결 방법은 아니다. 하지만 이런 불편함을 감수하고서라도 Sub Module로 분리하고 싶다면 위 방법을 참고하자. 원리를 보면 GoogleMaps가 아닌 다른 모듈(static binaries를 포함하는)도 동일하게 처리할 수 있다. 그리고 일단 Sub Module로 분리해서 사용하다 보면 CocoaPods에서 개선해줄 것으로 생각한다(관련되 Issue가 다수 존재하므로).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods : The 'Pods' target has transitive dependencies that include static binaries 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries/"/>
    <updated>2015-11-17T13:17:38+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/17/cocoapods-the-pods-target-has-transitive-dependencies-that-include-static-binaries</id>
    <content type="html"><![CDATA[<p>iOS용 앱 개발을 하면서 CocoaPods을 사용하고 있다. 그리고 CocoaPods을 이용해서 반복적인 기능의 구현을 Sub Module로 분리하여 프로젝트를 진행하고 있다. Sub Module 분리에 대해서는 <a href="http://blog.asamaru.net/2015/10/21/xcode-create-sub-module-using-cocoapods/">Xcode에서 CocoaPods를 이용해 sub module 만들기</a>에서 설명 했었다.</p>

<p>이렇게 만든 Sub Module에서 가지는 의존성은 <code>dependency</code> 속성을 이용해서 지정한다. 예를들면 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span>ModuleName.podspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="s1">&#39;ModuleName&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>  <span class="o">=</span> <span class="s1">&#39;1.0.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">license</span> <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>  <span class="o">=</span> <span class="s1">&#39;ModuleName Summary&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span> <span class="o">=</span> <span class="s1">&#39;https://~~~&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">author</span>   <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;ㅇㅇㅇ&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;nobody@nobody.com&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source</span>   <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://~~~/ModuleName.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">version</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">ios</span><span class="o">.</span><span class="n">deployment_target</span> <span class="o">=</span> <span class="s1">&#39;8.0&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">source_files</span> <span class="o">=</span> <span class="s1">&#39;Source/ModuleName/*.swift&#39;</span><span class="p">,</span> <span class="s1">&#39;ModuleName/**/*.swift&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">requires_arc</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">dependency</span> <span class="s1">&#39;DependencyModuleName&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>그런데 이렇게 설정해서 사용할 경우 CocoaPods에서 아래와 같은 오류가 나는 경우가 있다. <strong>항상 발생하는 것이 아니라 Podfile에서 <code>use_frameworks!</code>를 사용할 경우에 발생한다.</strong></p>

<figure class='code notranslate'><figcaption><span>ModuleName.podspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[!]</span> <span class="no">The</span> <span class="s1">&#39;Pods&#39;</span> <span class="n">target</span> <span class="n">has</span> <span class="n">transitive</span> <span class="n">dependencies</span> <span class="n">that</span> <span class="kp">include</span> <span class="n">static</span> <span class="ss">binaries</span><span class="p">:</span> <span class="p">(</span><span class="sr">/~~~/</span><span class="no">Pods</span><span class="o">/</span><span class="no">DependencyModuleName</span><span class="o">/</span><span class="no">Frameworks</span><span class="o">/</span><span class="no">DependencyModuleName</span><span class="o">.</span><span class="n">framework</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>대표적으로 GoogleMaps 모듈을 <code>dependency</code>로 사용하면 이 오류를 만나게 된다. 이유를 간단하게 설명하자면 의존성을 지정한 모듈이 static binaries를 포함하고 있기 때문에 발생하는 오류다. 현재 사용중인 CocoaPods의 버전은 0.39.0인데 아직까지 이 상황에 대해서는 지원을 하지 않는 것으로 보인다. 이와 관련하여 <a href="https://github.com/CocoaPods/CocoaPods/issues/2926">Reject installation if a static library is used as a transitive dependency while using frameworks</a>라는 Issue가 진행중이다.</p>

<p>어쨌든 일단 CocoaPods에서 이 오류가 나지 않도록 하는 방법은 다음과 같다. 부모 프로젝트의 Podfile에 아래와 같이 추가 한다.</p>

<figure class='code notranslate'><figcaption><span>Podfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pre_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">installer</span><span class="o">.</span><span class="nf">verify_no_static_framework_transitive_dependencies</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>관련글 : <a href="https://github.com/CocoaPods/CocoaPods/issues/3289">Prevent Transitive Dependency Errors in Swift Project with Vendored Frameworks</a></p>

<p>pre_install를 이미 사용중이라면 거기에 def 라인만 추가하면 된다.</p>

<p>사실 이 방법은 일단 오류가 나오지 않도록 검사를 하지 않는 것일 뿐 근본적인 해결이 된 것은 아니다. 이와 관련한 해결 방법은 관련성이 있으나 다른 부분을 포함하고 있어 <a href="http://blog.asamaru.net/2015/11/17/cocoapods-transitive-dependency-with-static-library/">Cocoapods : Sub Module에서 GoogleMaps 의존성 사용시 Transitive dependency 문제 해결</a>에 따로 남긴다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode에서 storyboard 선택시 Crash가 발생할 경우]]></title>
    <link href="http://blog.asamaru.net/2015/11/16/xcode-crashes-when-selecting-the-main-storyboard/"/>
    <updated>2015-11-16T20:55:08+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/16/xcode-crashes-when-selecting-the-main-storyboard</id>
    <content type="html"><![CDATA[<p>최근엔 XCode로 작업하는 일이 많아졌다. 안드로이드 개발과 웹 개발도 함께하지만 iOS 작업이 급하다 보니 주로 이 일을 하고 있다.
XCode는 사용하면 할수록 잘 만들었다는 생각이 든다. 단, 코드 포멧팅 기능이 없다거나 소스 선택이 조금 부자연스럽다거나(이건 적응의 문제일 수 있다) 하는 것처럼 안드로이드 스튜디오에 비해 불편한 부분들이 있긴하다. 하지만 인터페이스 빌더 등의 도구들은 아주 잘 만들어져 있으며 결정적으로 빌드 속도가 무척 빨라서 좋다. 안드로이드 스튜디오도 지난 번에 적었던 <a href="http://blog.asamaru.net/2015/09/29/android-gradle-builds-speed-up/">Android Gradle 빌드 속도 높이기</a>에서 설명했던 것처럼 빌드 속도가 다소 개선되었지만 XCode에 비교도 되지 않는다.</p>

<p>인터페이스 빌더의 사용에 대해서는 개발자들 사이에서도 논란이 많다. 개발시 인터페이스 빌더를 사용할 것인가 하드 코딩으로 UI를 개발할 것인가? 둘 다 장단점이 있는 것은 명확하지만 개인적으로는 최대한 인터페이스 빌더를 사용하는 것이 옳다고 생각한다. 스토리보드와 같은 기능을 사용해서 앱 전체의 흐름을 파악하기 쉽도록 개발할 수 있으며 보여질 화면을 바로 보면서 작업하므로 개발 및 유지보수도 용이하다. 다만 인터페이스 빌더의 설정이 코드상에서 보여지지 못하므로 코드를 볼 때 혼란스럽게 보일 수는 있다. 그래서 나는 코드 흐름 상에서 중요한 요소는 인터페이스와 별개로 소스에서도 설정을 해주는 편이다(아주 중요할 경우만).</p>

<p>서론이 길어졌는데 오늘 이야기는 지금 부터다. 나름 선호하는 이 인터페이스 빌더에는 치명적인 약점이 있다. 이건 내가 XCode를 처음 접한 3버전대에서부터 현재의 7버전까지도 완전히 해결되지 않는 문제다. 그 약점은 바로 Crash가 잘 발생한다는 점과 설정이 엉키면 정말 난해한 상황을 만나게 된다는 것이다.</p>

<p>현재까지의 나의 해결법은 해당 부분을 통째로 지우고 새로 설정하는 것이다. 정말 최악의 방법이지만 항상 오랜 시간을 해결해 보려고 애써봐도 결론은 대부분 새로 작성하는 것이었다. 사실 이런 문제가 아주 빈번한 것은 아니지만 한번씩 발생하면 치명적이다(환장한다).</p>

<p>최근에는 작업을 하면서 <a href="https://www.jetbrains.com/objc/">AppCode</a>를 함께 사용하는 편인데 아무래도 jetbrains에서 만들다보니 단축키도 익숙하고 결정적인 코드 포멧팅 기능 때문에...
어쨌든 AppCode에서도 storyboard를 수정하려고하면 결국 XCode를 띄워준다.</p>

<p>이렇게 개발 도구를 섞어써서 그런건지 내가 뭔가를 잘못했는지는 몰라도 이번에 제대로 일이 벌어졌다. 옛날 같으면 nib파일이 따로 있어서 문제가 발생해도 그 파일만 새로 작업하면 되는데 이번엔 스토리보드로 작업되어 있었는데 그 파일을 선택만 해도 XCode가 죽는 것이다. 도저히 새로 작성한다는 것은 불가능 했다. 아직 개발 초기라 화면이 엄청 많은 것은 아니었지만 그래도 주요 화면들을 다 작성해 둔 상태라 다시 작성하기엔 무리였다.</p>

<p>그래서 인터넷에서 또 다시 해결 방법들을 찾아봤다. 사실 결론을 미리 이야기하자면 나는 아래의 방법들을 모두 시도해 보았으나 성공하지 못했다.  하지만 이 방법들로 효과를 봤다는 사람들이 있어서 기록성으로 한번 남겨두려고 한다.</p>

<p><strong>1. XML로 열기</strong></p>

<ul>
<li>스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Source Code&quot; 메뉴를 이용해 XML 코드를 편집기에서 연다.</li>
<li>의미없는 글자를 넣었다가 빼고 저장한다.</li>
<li>다시 스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Interface Builder - Storyboard&quot;로 다시 연다.</li>
</ul>

<p><strong>2. Autolayout 기능 끄기</strong></p>

<p>이 Autolayout에 대한 사람들의 이야기가 많았다. Autolayout이 새로 나오면서 많은 문제들이 있었던 것으로 보인다. 이제는 문제가 많이 줄어든 것으로 보이나 혹시나 도움이 될지도 모르겠다.</p>

<ul>
<li>스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Source Code&quot; 메뉴를 이용해 XML 코드를 편집기에서 연다.<br></li>
<li><code>useAutolayout=&quot;YES&quot;</code> 부분을 찾아 <code>useAutolayout=&quot;NO&quot;</code>로 변경한다.</li>
<li>다시 스토리보드 파일을 오른쪽 클릭해서 &quot;Open As&quot; &gt; &quot;Interface Builder - Storyboard&quot;로 다시 연다.</li>
</ul>

<p><strong>3. xcuserdata 삭제</strong></p>

<ul>
<li>Xcode를 닫는다.</li>
<li>.xcodeproj, .xcworkspace 파일을 우클릭하여 &quot;패키지 내용보기&quot;를 선택한다.</li>
<li>xcuserdata 폴더를 삭제한다.</li>
</ul>

<p><strong>4. XCode 초기화</strong></p>

<p>이 방법은 XCode 설정을 초기화하는 것으로 권장하지는 않는다. 터미널에서 아래의 명령을 입력한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>defaults delete com.apple.dt.Xcode
</span></code></pre></td></tr></table></div></figure>

<p><strong>5. 오류 발생 부분 찾아 제거하기</strong></p>

<p>이 방법은 최후의 방법으로 내가 사용한 방법이다. storyboard 파일을 소스 상태(XML)로 열어 scene 단위로 삭제 해본다. 단, 삭제하기 전 원본 백업은 필수. 이렇게 하나씩 제거하면서 XCode에서 파일을 열어 시도해보면서 원인이 되는 scene을 찾는다. 원인이 되는 scene을 찾았다면 부분적으로 코드들을 제거해가면서 정확한 오류 지점을 찾는다. 운이 좋아 부분적 오류였다면 이 방법으로 최소한의 손실로 문제를 해결할 수 있다. 단, 찾을 수 없다면 해당 scene을 통째로 버려야 한다.</p>

<hr>

<p>결론적으로 명쾌한 답을 주지 못해 미안하지만 나도 아직은 답을 찾지 못했다. 오류가 발생할 때마다 열심히 애플에 오류 보고를 보내고 있지만 당연히 신속한 해결은 없다. 어쨌든 이런 문제를 만나지 않기를 바라며 혹시라도 문제가 발생한다면 위 방법들을 시도해보길 바란다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[안드로이드 Crash Report 도구 : ACRA에서 Fabric(Crashlytics)으로의 전환]]></title>
    <link href="http://blog.asamaru.net/2015/11/11/from-acra-to-fabric/"/>
    <updated>2015-11-11T20:33:16+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/11/from-acra-to-fabric</id>
    <content type="html"><![CDATA[<p>지난 글 <a href="http://blog.asamaru.net/2015/10/01/android-acra-please-configure-buildconfigclass-in-your-acra-config/">ACRA : Please configure &#39;buildConfigClass&#39; in your ACRA config 오류</a>와 <a href="http://blog.asamaru.net/2015/09/25/android-6-apache-http-client-removal/">Android 6(API 23 : marshmallow) : Apache HTTP 클라이언트 제거</a>에서 언급했던 것처럼 안드로이드 Crash Report 도구로 ACRA를 사용중이었다.
ACRA 사용중에 만난 오류를 해결하기 위해 시간을 들여서 원인을 찾고 개발자에게 전달해서 개선을 요청할 정도로 나름 애용하려던 도구였는데 오늘 <a href="https://fabric.io">Fabric(Crashlytics)</a>으로 바꿔버렸다.</p>

<p>사실 처음부터 대체할 목적이 있었던 것은 아니었다. 안드로이드용으로 제작된 앱을 iOS용으로도 제작할 일이 있어 개발을 진행하던 중 안드로이드의 ACRA 같은 도구가 iOS에도 있을 것이라는 생각에 몇가지를 찾아보고 있었다. 그때 눈에 띄는 것이 <a href="https://try.crashlytics.com/">Crashlytics</a> 였다(<a href="https://gist.github.com/rino0601/018c7f22aeb23cf2e2a0">Crashlytics 소개 + Android Studio에서 적용하는 방법</a>).</p>

<p>그런데 이 Crashlytics라는 서비스를 운영하는 회사가 트위터에 인수가 되었다(<a href="http://besuccess.com/2013/01/28496/">앱 충돌 리포트 서비스 Crashlytics, 트위터에 인수되다</a>). 그래서 조금 더 알아보니 트위터에서 <a href="https://fabric.io">Fabric</a>이라는 것을 새로 내놓았다.</p>

<p><a href="https://fabric.io">Fabric</a>이 무엇인지에 대해서는 트위터 한글 블로그의 &quot;<a href="https://blog.twitter.com/ko/2014/introducing-fabric-kr">패브릭(Fabric)을 소개합니다.</a>&quot;를 보면 잘 설명되어 있다.</p>

<blockquote>
<p>패브릭(Fabric)은 앱 개발자들이 흔히 직면하는 안정성, 사용자 확보, 수익성, 사용자 인증의 이슈들&gt;을 해결해 줄 세 가지의 모듈형 키트들로 이루어져 있습니다. 패브릭은 크래시리틱스(Crashlytics), 모펍(MoPub), 트위터 등의 서비스를 통합해 개발자들이 더 안정적인 앱을 만들도록 돕습니다. 패브릭은 앱 개발자들이 세계 최고의 모바일 애드 익스체인지(ad exchange)를 통해 수익을 확보할 수 있게 하며, 트위터 로그인 기능과 실시간 콘텐츠 스트림 기능을 통해 더 많은 사용자에 콘텐츠를 전달할 수 있게 하거나 더욱 간단히 사용자를 인증할 수 있도록 해줍니다.</p>
</blockquote>

<p>나는 우선 최초 목적이었던 iOS를 위한 Crash Report 도구의 설치를 위해 xcode 프로젝트에 <a href="https://fabric.io">Fabric</a>을 추가했다. 설치 과정은 복잡하지는 않으나 몇가지 설정할 부분들이 있어서 자칫 까다로워질 수 있지만 <a href="https://fabric.io">Fabric</a>에서 관련 도구를 워낙에 잘 제공 해줘서 시키는대로 따라만 하면 큰 무리없이 적용할 수 있다. &quot;기회가 되면 설치 과정을 글로 남길까?&quot; 생각했었지만 설치 도구가 워낙 잘되어 있어 &quot;굳이 내가 다시 설명할 필요가 있을까?&quot;라는 생각이다. 그 정도로 잘 되어있다. 다만 기본 설치 후 Debug 모드에서는 로그 수집을 하지 않도록 설정하는 등의 몇가지 안내가 필요한 부분들이 있는데 이건 시간이되면 따로 글을 남기려고 한다. 사실 이 부분도 메뉴얼로 모두 제공되고 있으나 막상 찾으려니 귀찮은 것들이다.</p>

<p>결론적으로는 아주 만족스러웠다. Crash Report가 잘되는 것은 물론이고 Hook을 걸 수 있도록 하는 기능도 제공되고 있어서 기존에 ACRA에서 연결해 두었던 자체 로그 수집기로도 기존처럼 정보를 전달하는 것이 가능했다(정확히 이야기 하자면 기존과 동일한 내용을 전달하는 것은 아니고 오류 발생 이벤트만 전달된다). 그리고 <a href="https://fabric.io">Fabric</a>에는 <a href="https://try.crashlytics.com/">Crashlytics</a> 외에도 <a href="https://answers.io/">Answers</a>라는 모듈도 함께 제공된다(사실 더 많은 것들이 있다). 이 모듈은 구글 어날리틱스 처럼 앱에 대한 이벤트를 수집하여 보고서를 제공해 준다. 결정적으로 이 모든 것이 무료.</p>

<p>그래서 안드로이드용 앱에서도 ACRA를 걷어내고 Fabric을 적용했다. 역시 아주 만족스럽다. ACRA에서 보내주는 무지막지한 Crash 로그 대신 잘 정리된 로그를 확인할 수 있게 되었다.</p>

<p>앞선 설명처럼 <a href="https://fabric.io">Fabric</a>에는 여러가지 모듈들이 있는데 이들 중 일부는 각각 독립적인 서비스를 가지고 있다(<a href="https://try.crashlytics.com/">Crashlytics</a>와 <a href="https://answers.io/">Answers</a> 처럼). 이 부분에 관련해서는 트위터 한글 블로그의 &quot;<a href="https://blog.twitter.com/ko/2014/introducing-fabric-kr">패브릭(Fabric)을 소개합니다.</a>&quot;의 내용 마지막에 아래와 같이 안내 되어있다.</p>

<blockquote>
<p>패브릭(Fabric)은 트위터만의 작품이 아닙니다. 패브릭(Fabric)이 가능하도록 키트(Kits)들의 관리, 설치, 업데이트에 관여하는 모든 SDK 벤더들이 만들어낸 것이라고 생각합니다. 당신이 SDK를 관리하는 사람이고, 트위터와 함께 일하고 싶다면 패브릭 파트너십 담당(<a href="mailto:partners@fabric.io">partners@fabric.io</a>)에 메일을 보내 주시길 바랍니다. 개발자 여러분들의 연락을 기다리고 있겠습니다.</p>
</blockquote>

<p>따라서 각각의 서비스를 사용해도 무방할 것으로 보인다. 하지만 <a href="https://fabric.io">Fabric</a>을 사용함으로써 통합 관리를 할 수 있으며 설치 과정이 아주 단순해진다.</p>

<p><strong>결론 : Crash Report 도구가 필요하다면, iOS와 Android 모두 한 곳에서 관리하고 싶다면, 사용자 이벤트 로깅도 하고 싶다면, <a href="https://fabric.io">Fabric</a>을 적극 추천하고 싶다.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android : is not translated in ... Lint Error 해결]]></title>
    <link href="http://blog.asamaru.net/2015/11/05/android-is-not-translated-in-dot-dot-dot-lint-error/"/>
    <updated>2015-11-05T14:27:23+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/05/android-is-not-translated-in-dot-dot-dot-lint-error</id>
    <content type="html"><![CDATA[<p>안드로이드에서 배포를 위한 빌드시에 아래와 같은 오류가 발생하는 경우가 있다. 상황에 따라 언어의 종류(en)는 다를 수 있다.</p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error:(65) Error: "..." is not translated in "en" (English) [MissingTranslation]</span></code></pre></td></tr></table></div></figure>

<p>이 오류는 말그대로 다국어 지원에 대한 처리가 제대로 되어 있지 않다는 오류이다. 일반적으로 다국어 지원을 위한 별도의 처리를 한적이 없다면 이 오류는 발생하지 않는 것이 당연하다.
하지만 이번에 이 오류를 만나고 찾아보니 많은 개발자들이 이 문제를 겪는 것 같다. 사실 나는 다국어 지원에 관련된 별도의 처리를 한 상황이었으므로 이 오류를 만나는 것이 당연한 상황이었다.
어쨌든 인터넷에 찾아보면 대부분 다음과 같이 해결법을 제시하고 있다.</p>

<ul>
<li>Lint 관련 설정은 이클립스 메뉴의 Window - Preference - Android - Lint 에서 변경할 수 있는데요..  여기서 MissingTranslation 항목을 찾아 Severity를 warning으로 변경하면 됩니다.</li>
<li><a href="http://mytalkhome.tistory.com/816">Android Studio &quot;is not translated in &quot;en&quot; (English) [MissingTranslation]&quot; 오류 해결하기</a></li>
</ul>

<p>이 방법은 말그대로 제대로 처리되지 않은 부분을 오류에서 경고로 변경하여 빌드를 수행하는 것으로 좋지 못한 방법이다. 게다가 나의 경우는 OSX라서 그런지 안드로이드 스튜디오의 버전 때문인지 위치와 명칭이 많이 달랐다.</p>

<p>유사하지만 다른 방법도 있다. build.gradle에서 lint를 제외하는 것이다. <a href="http://stackoverflow.com/questions/20699147/gradle-build-fails-on-lint-task">gradle build fails on lint task</a></p>

<figure class='code notranslate'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android {
</span><span class='line'>  lintOptions {
</span><span class='line'>      checkReleaseBuilds false
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

<p>그리고 또 다른 방법 한가지. <a href="http://stackoverflow.com/questions/28106875/missingtranslation-for-default-language-is-not-translated-in-en">MissingTranslation for default language ( “…” is not translated in “en”)</a>
이 방법은 Strings.xml에서 locale을 아예 미리 입력해 버리는 것이다. 위 오류에 맞추어 en이라고 했지만 자신의 상황에 맞게 입력해야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resources</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">tools:locale=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>당연히 문제의 원인을 정확히 파악하여 해결하는 것이 가장 좋은 방법이다.
당장 급하고 원인을 찾지 못하겠다면 위의 방법들을 쓸 수도 있겠지만 계속 저렇게 사용하는 것은 권장하고 싶지는 않다.</p>

<p>이제부터는 내가 문제를 만난 상황이다. 사실 나 또한 다국어를 지원할 필요가 있었던 것은 아니다. 다만 사용한 라이브러리 중 하나가 다국어를 지원하고 있었다.
따라서 한국어 부분은 <code>values-ko/strings.xml</code>파일로 분리되어서 처리되고 있었다. 이 상황에서 내가 필요한 것은 설정된 문장의 일부를 변경하는 것이었다.
그래서 내 프로젝트의 <code>values/strings.xml</code>에 필요한 문장들을 재정의 했다. 오류는 나지 않지만 적용되지 않는다. 다시 내 프로젝트에도 <code>values-ko/strings.xml</code> 파일을 만들고 필요한 부분을 재정의 했다.
여기서부터 문제의 시작이다. 아래의 오류가 발생한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>Error:(65) Error: &quot;...&quot; is not translated in &quot;ko&quot;
</span></code></pre></td></tr></table></div></figure>

<p><code>values-ko/strings.xml</code> 파일에 모든 내용을 넣지 않고 필요한 부분만 넣었으므로 나머지 부분이 번역되지 않았다고 오류가 나는 것이다. 간단한 해결 방법은 <code>values-ko/strings.xml</code> 파일에 <code>values/strings.xml</code>의 내용을 모두 복사해 넣어준다. 그런데 이 방법은 싫다. 둘다 한국어인데 굳이 두군데를 관리하고 싶지 않다. 이런 경우라면 아래와 같이 <code>tools:ignore=&quot;MissingTranslation&quot;</code>를 사용해서 문제를 해결할 수 있다.</p>

<p><strong>Strings.xml</strong>
<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resources</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;<a href="http://schemas.android.com/tools">http://schemas.android.com/tools</a>&quot;</span>
</span><span class='line'>    <span class="na">tools:ignore=</span><span class="s">&quot;MissingTranslation&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>명확히 이 영역은 다국어 지원이 필요하지 않은 이므로 명시적으로 번역 누락을 무시하도록 하는 것이다. 어떻게 보면 상기 설명했던 오류를 무시하는 것과 같아 보일 수 있으나 이 방법은 무시할 범위를 명확히 인지하고 해당 영역만 필요에 의해 무시하도록 했다는 것이다.
단, 한가지 추가 작업이 필요하다. <code>values-ko/strings.xml</code> 파일에서 재정의 했던 항목들을 <code>values/strings.xml</code>에도 넣어주어야 한다는 것이다. 안그러면 아래와 같은 오류가 난다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>Error:(3) Error: &quot;XXX&quot; is translated here but not found in default locale [ExtraTranslation]
</span></code></pre></td></tr></table></div></figure>

<p>사실 불편함이 생기는 부분이지만 앞서 설명처럼 반대로 모두를 두군데서 관리하는 것보다 필요한 몇줄만 별도 관리하는 것을 선택했다.</p>

<p><strong>결론적으로 선택은 자유다. 위 방법들 중 필요에 맞게 선택해서 사용하면 되겠다.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 7.1의 StoryBoard에서 UIViewController(using Generics)를 Custom Class로 연결할 때 발생하는 오류]]></title>
    <link href="http://blog.asamaru.net/2015/11/04/xcode-storyboard-with-uiviewcontroller-using-generics/"/>
    <updated>2015-11-04T20:46:51+09:00</updated>
    <id>http://blog.asamaru.net/2015/11/04/xcode-storyboard-with-uiviewcontroller-using-generics</id>
    <content type="html"><![CDATA[<p>현재 xcode의 최신 버전은 7.1이다. 이 버전에서(이하 버전은 확인하지 못했다) 스토리보드와 <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html">Generics</a>를 사용한 UIViewController를 연결하는 부분에서 버그가 있다. 버그는 인터페이스 빌더에서 찾지 못하는 문제와 강제 추가시 <code>Unknown class &lt;MyClass&gt; in Interface Builder file</code> 오류를 발생시키는 것이다. 자세한 내용은 아래에 설명하겠다.</p>

<p>일단 <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html">Generics</a>가 어떤 것인지 정보를 더 얻고 싶다면 <a href="http://minsone.github.io/mac/ios/swift-generics-summary/">Swift - Generics 정리</a>를 참고하자.</p>

<p>항상 이런 글을 쓰려고하면 상황을 설명하기가 어렵다. 그렇다고 설명없이 코드만 적어놓으면 어떻게 사용되는지를 알 수 없으니 일단 최선을 다해 보겠다.</p>

<p>UIPageViewController를 사용하고자 하는 상황을 가정하고 설명한다.</p>

<ol>
<li>스토리보드에서 &quot;Page View Controller&quot;를 추가했다.</li>
<li>그 다음에 해야할 작업은 UIPageViewController class를 하나 추가한다.</li>
<li>추가한 class를 인터페이스 빌더에서 Custom Class로 연결한다.</li>
</ol>

<p>위 상황의 결과가 아래의 이미지다. UIPageViewController class로 PageViewController라는 class를 추가한 것이다.</p>

<p><img src="http://blog.asamaru.net/img/2015-11/04-xcode-storyboard-with-uiviewcontroller-using-generics-1.png" alt="xcode"></p>

<p>비교를 위해 소스도 추가 한다. 사실 볼 것도 없다. 내부 기능은 설명에 필요하지 않아 모두 제거 했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewController</span><span class="p">:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>이 상황에서 빌드하고 실행하면 아무런 문제가 없다. 당연하다. 가장 일반적인 상황이니까.</p>

<p>이제부터가 내가 버그라고 주장하는 부분의 시작이다. 아래의 코드를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewController</span><span class="p">:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewControllerChild</span><span class="p">:</span> <span class="n">PageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="n">PageViewControllerT</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;:</span> <span class="bp">UIPageViewController</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">PageViewControllerTChild</span><span class="p">:</span> <span class="n">PageViewControllerT</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>3개의 class를 추가했다. 하지만 여전히 아무런 기능은 없다. 이 상황에서 위의 이미지와 동일한 상황을 캡춰한 것이 아래 이미지다.</p>

<p><img src="http://blog.asamaru.net/img/2015-11/04-xcode-storyboard-with-uiviewcontroller-using-generics-2.png" alt="xcode"></p>

<p>비교가 되는가? 달라진 점은 우측의 Custom Class 영역의 Class에서 선택할 수 있는 대상 Class 목록이다.
그런데 위의 소스를 자세히 보고 이 이미지를 봤다면 뭔가 이상함을 느낄 것이다.</p>

<p><strong>바로 <code>PageViewControllerTChild</code>가 목록에 없다는 것이다.</strong> 내가 캡춰를 잘못한 것이 아니다. 실제로 나타나지 않는다.</p>

<p>그렇다면 이게 내가 말하고자 하는 버그인가? 아니다. 그냥 목록에만 나오지 않는 것이라면 조금 귀찮을 뿐 문제되지는 않는다.
자 이제 다시 테스트 해보자. 목록에는 없지만 실제로 class는 존재하므로 강제로 타이핑해서 <code>PageViewControllerTChild</code>를 집어 넣자.
다시 빌드하고 실행. 그런데 기존과 다르게 오류가 난다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mo">04</span> <span class="mi">21</span><span class="o">:</span><span class="mi">08</span><span class="o">:</span><span class="mf">24.886</span> <span class="n">Test</span><span class="p">[</span><span class="mi">32048</span><span class="o">:</span><span class="mi">90982</span><span class="p">]</span> <span class="n">Unknown</span> <span class="k">class</span> <span class="n">_TtC4Test24PageViewControllerTChild</span> <span class="k">in</span> <span class="n">Interface</span> <span class="n">Builder</span> <span class="n">file</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>

<p>앱을 죽이지는 않으나 해당 View가 아무것도 나오지 않는다.
오류의 내용은 인터페이스 빌더에서 알 수 없는 <code>_TtC4Test24PageViewControllerTChild</code> class에 접근 한다는 것.
이상한 일이다. 분명 해당 class는 존재한다. 오류에 나온 <code>_TtC4Test24PageViewControllerTChild</code>과 이름은 다르지만 분명 같은 class에 접근하려는 것이다.
이 문제가 바로 내가 버그라고 이야기하는 부분이다.</p>

<p>요약하자면 다음과 같다. <strong>Generics를 사용하는 UIViewController는 인터페이스 빌더에 연결되지 않는다.</strong></p>

<p>이 문제 하나로 인해 인터페이스 빌더와 스토리보드를 다 걷어내거나 이것만 따로 처리하기는 싫다.
자.. 이제부터 그럼 해결을 해보자. 해결을 위해서는 원인을 알아야 한다.</p>

<p>중요한 내용은 <a href="http://stackoverflow.com/a/1725893">“Unknown class <MyClass> in Interface Builder file” error at runtime</a>에 설명되어 있다.
이 글은 내가 말하는 Generics와 관련된 상황이 아닌 조금 더 일반적인 상황에 대한 것으로 약간의 차이가 있다. 하지만 거의 유사하므로 해결에 도움을 얻을 수 있었다.
게다가 기본적인 설명은 Objective-C 기준으로 되어있고 swift의 경우는 <code>init(coder aDecoder: NSCoder)</code>를 추가하는 것으로 설명하고 있지만 이 것은 위 문제를 해결하는 것에는 도움이 되지 않는다.
어쨌든 이 글의 결론을 이야기 하자면 이렇다. 인터페이스 빌더에서 해당 class를 제대로 찾지 못하고 있기 때문에 linking이 제대로 되지 못하고 있다는 것이다.
따라서 해당 class에 직접 접근하는 코드를 넣어주어야 한다는 것이다. 그래서 이 글에서는 불필요한 함수 하나를 추가하고 사용 전에 강제로 호출함으로써 문제를 해결할 수 있다고 되어 있다.</p>

<p>위 글에서 설명한 것을 기초로 해결을 위한 코드는 다음과 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="p">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="k">class</span> <span class="nl">AppDelegate</span><span class="p">:</span> <span class="bp">UIResponder</span><span class="p">,</span> <span class="bp">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">var</span> <span class="nl">window</span><span class="p">:</span> <span class="bp">UIWindow</span><span class="o">?</span>
</span><span class='line'><span class="c1">//   let x = PageViewControllerTChild.description()</span>
</span><span class='line'>
</span><span class='line'>  <span class="kr">override</span> <span class="k">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">super</span><span class="p">.</span><span class="k">init</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">PageViewControllerTChild</span><span class="p">.</span><span class="n">description</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application</span><span class="p">:</span> <span class="bp">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions</span><span class="p">:</span> <span class="p">[</span><span class="nl">NSObject</span><span class="p">:</span> <span class="n">AnyObject</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//       PageViewControllerTChild.description()</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p><strong>해결 방법은 AppDelegate의 <code>init()</code> 내부에서 <code>PageViewControllerTChild</code>의 함수를 하나 호출한다.</strong></p>

<p>호출하는 함수는 어떠한 것이라도 상관없다. 하지만 호출 시점은 아주 중요하다. 호출 시점은 해당 화면이 보여지기 전(초기화 전) 이어야 한다.
위 코드는 시작 화면으로 사용한 화면을 대상으로 하고 있기 때문에 <code>init()</code>에 추가 했다. 하지만 시작 화면이 아니라면 <code>func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&gt; Bool</code>에 추가되어도 상관없다. 하지만 어짜피 특별한 기능을 수행할 것이 아니므로 <code>init()</code>에 넣어주는게 속 편할 것이다. 앞서 설명과 같이 어떻게 넣을 수 있는지를 설명하기 위해서 비슷한 코드가 여러군데 있다(대신 주석으로 제외시켜 둔 것이다).</p>

<p>사실 나는 이 해결 방법을 고심해서 찾았지만 실제로는 적용하지 않았다. 설계 구조를 변경해서 Generics를 제거하는 쪽으로 결정했다. 필히 Generics이 필요한 상황이 아니었기 때문에 굳이 이렇게까지 할 필요는 없다고 생각했기 때문이다.</p>

<p>어쨌든 비슷한 문제를 겪고 있다면 위의 설명을 참고로 해결 방법을 찾길 바란다.</p>
]]></content>
  </entry>
  
</feed>
