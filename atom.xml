<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[이 세상에 하나는 남기고 가자]]></title>
  <link href="http://blog.asamaru.net/atom.xml" rel="self"/>
  <link href="http://blog.asamaru.net/"/>
  <updated>2015-09-22T20:11:01+09:00</updated>
  <id>http://blog.asamaru.net/</id>
  <author>
    <name><![CDATA[유영재]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[외부 블로그를 네이버 블로그 검색 섹션에 노출시키기]]></title>
    <link href="http://blog.asamaru.net/2015/09/22/adding-external-blog-to-naver-blog-search-section/"/>
    <updated>2015-09-22T19:11:24+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/22/adding-external-blog-to-naver-blog-search-section</id>
    <content type="html"><![CDATA[<p>결론부터 이야기 하자면 <strong>&ldquo;외부 블로그를 네이버 블로그 검색 섹션에 노출시키는 것이 가능하고 상위에 노출하는 것도 가능하다.&rdquo;</strong>라는 것이다. 정확하게는 상위 노출은 명확히 검증되었다고 보기는 힘들지만 꽤 상위로 노출하는 것이 가능했다.</p>

<hr />

<p>블로그를 처음 시작한 것은 2012년이다. 하지만 글 몇개를 끄적이다 다시 시작하기로하고 꾸준히 포스팅을 시작한지 한달 가량이 되었다. 내 블로그의 주된 내용은 프로그래밍에 관련된 내용이다보니 일반인들이 주로 찾는 정보들은 아니기 때문에 방문자가 많이 유입되기는 힘들다. 하지만 이왕 노력해서 글을 적는데 조금이라도 여러사람에게 노출되기를 원하는게 당연하지 않겠는가. 그래서 한달 전에 글 포스팅을 다시 시작하면서 <a href="https://www.google.com/webmasters/">구글 웹마스터 도구</a>에 등록했다. 당연히 구글은 색인을 잘해서 노출도 조금씩 되기 시작했다(나중에 조금 더 이야기를 하겠지만 이 부분에는 옥토프레스의 역할도 크다고 생각한다).</p>

<p>시간이 조금 흘러 2주 가량이 지나자 글 포스팅 수가 20여건이 되었고 조금씩 유입자가 늘었다(정말 조금이다. 블로그는 꾸준함이 생명). 그러던 중 네이버 블로그 검색 섹션에도 외부 블로그의 글을 등록할 수 있다는 것이 생각났다. 아무래도 국내 트래픽은 네이버가 최고이므로 등록이 된다면 당연히 유입자를 늘리는데 도움이 될 것이라는 생각이 들었다. 그래서 조금 찾아봤다.</p>

<ul>
<li><a href="http://reviewstory.tistory.com/433">네이버 rss 등록신청으로 외부블로그 등록하기</a></li>
<li><a href="http://auuu.tistory.com/15">티스토리 블로그를 네이버에 등록하기, 블로그 RSS 등록하는 방법</a></li>
</ul>


<p>위의 글들 외에도 아주 많은 글들이 있다. 그만큼 네이버 검색에 대한 블로거들의 관심이 크다는 것이겠지. 그래서 글들을 보면서 따라 했다. 그런데 블로그 글들이 그리 오래된 글이 아님에도 불구하고 화면이 맞지 않았다. 당연히 등록하지 못했다. 하지만 비슷하게 찾아가다 보니 <a href="http://webmastertool.naver.com/index.naver">네이버 웹마스터도구</a>를 안내해 주고 있었다. 블로그 등록이 없으니 여기라도 등록해보자는 생각에 등록해 봤다. 당연히 웹마스터 도구를 통해 등록했으니 웹 문서 섹션에서 노출될 것이라고 생각했다. 모두가 알다시피 네이버 검색에서 웹 문서는 정말 다른 검색결과가 없을 때나 노출될만한 크게 가치가 없는 섹션이다.</p>

<p>그리고 하는 김에 다음과 bing에도 등록을 해보려고 했으나 다음은 웹마스터 도구를 찾지 못했고 bing은 <a href="http://www.bing.com/toolbox/webmaster/">bing 웹마스터</a>라는 것을 제공하고 있었다. 그래서 bing도 등록했다.</p>

<p>몇일이 지나자 블로그에 네이버를 통한 유입이 시작되었다. 그때 들었던 생각이 &ldquo;역시 네이버는 대단하구나. 글도 몇개되지 않는데다가 웹문서에만 노출되는데 유입이 발생하다니&hellip;"라는 생각이다. 그런데 시간이 지날수록 유입량이 조금씩 늘기 시작했다. 그래서 직접 네이버에서 내 글을 검색해 봤다. "어디서 노출이 될까?&rdquo; 하고&hellip;</p>

<p>그런데 검색된 내 글을 보고 놀랐다. 블로그로 분류되어서 블로그 섹션에서 검색되고 있었다. 게다가 웹문서에서도 동일한 글이 검색되고 있었다. 그래서 조금 찾아보니 아래와 같은 글이 있었다.</p>

<p><a href="http://www.postview.co.kr/773">네이버 블로그 검색수집 시스템 개선 내용</a></p>

<p>네이버의 블로그 수집 시스템이 변경되어서 기존과는 처리 방식이 달라진 것이었다. 블로그가 워낙에 상업적으로 많이 사용되다보니 네이버에서 블로그 지수(네이버에서는 인정하지 않는..)를 계산하는 룰이 수시로 변경되면서 여러 대란이 있었다.</p>

<ul>
<li><a href="http://giantt.co.kr/7385">네이버 파워컨텐츠 그리고 블로그 저품질대란(?)</a></li>
<li><a href="http://www.eco2day.co.kr/news/articleView.html?idxno=2721">네이버 블로그 저품질 대란, 여러분의 블로그 안녕하신가요?</a></li>
</ul>


<p>다시 본론으로 돌아와서&hellip;
더욱 놀란 사실은 글들이 꽤 상위에 나온다는 것이다. 사실 서두에 이야기한 것처럼 내 블로그의 글들은 기술 문서들이 많다보니 네이버에서는 상대적으로 경쟁글이 적은 편이다. 그래서 해당 키워드들 내에서는 상위로 노출되기 쉬운 것은 사실이나 글의 수도 적고 시작한지 얼마되지 않은데다가 키워드 최적화도 하지 않은 글들이 꽤 상위에 노출되는 것은 고무적이었다. 그래서 외부 블로그를 가지고도 네이버에서 상위 선점이 가능할 수 있다는 희망을 가지게 되었다.</p>

<p>실제로 내 블로그에 흔치않은 프로그래밍 외 주제에 해당하는 글인 부동산 관련글(내 경험에 대한 글)이 키워드에서 꽤 상위로 노출되고 있다(부동산 키워드는 관련글이 넘쳐나는 글 중 하나라고 생각한다).</p>

<p>상위로 노출되는 것은 동일한 주제를 가지고 꾸준히 포스팅을하며 블로그 운영에 사용하는 옥토프레스가 생성해주는 페이지가 어느 정도 SEO에 최적화되어 있기 때문이라고 생각한다. 실제로 HTML 마크업을 보면 여러가지 SEO/meta 요소가 포함되어 있으며, Sitemap을 자동으로 생생해주고, 내부 링크들이 만들어진다. 게다가 문서제목을 사용한 퍼머링크를 생성해 주고 있으므로 기본적으로 할 수 있는 SEO 요소들을 다수 제공하고 있다.</p>

<h2>맷음말</h2>

<p>현재 시점을 기준으로 내 블로그의 유입자 비율은 네이버와 구글의 비율이 7:3에서 6:4 정도로 유지되고 있다. 기술 문서를 네이버에서 많이 찾지 않는다는 것을 감안하면 역시 네이버의 국내 트래픽 영향력은 대단하다.</p>

<p>아무래도 &ldquo;네이버 블로그를 쓰는 것이 쉬운 선택은 되겠지만 너무 종속될 필요는 없지않은가?"라는 것이 현재의 생각이다. 조금 더 상황을 지켜보다보면 바뀔 수도 있겠지만 현재 상황만 보자면 외부 블로그로 네이버에서 블로그와 웹문서 섹션에서 동시 노출함으로써 검색 트래픽의 혜택을 보면서도 자유롭게 블로그를 운영할 수 있는 방법이 있다는 것이다.</p>

<p>블로그를 시작한지는 얼마되지 않지만 블로그 최적화 등에 관련된 유사 업무를 해본적이 있는 입장에서 아래의 내용을 권해주고 싶다(사실 다른 곳에서도 볼 수 있는 당연하고 흔한 내용이긴하다).</p>

<ul>
<li>블로그를 운영한다면 <a href="http://webmastertool.naver.com/index.naver">네이버 웹마스터도구</a>를 이용해 네이버 블로그 섹션에 노출시키는 것을 고려하자.</li>
<li>옥토프레스가 아니더라도 SEO를 지원하는 블로그 서비스를 사용하거나 직접 SEO를 감안해서 제작하자.</li>
<li>너무 두서없이 글을 남발하기 보다 관련 주제로 양질의 컨텐츠를 꾸준히 포스팅하자.</li>
<li>네이버 검색을 위해 네이버 블로그를 선택하기 보다는 자유롭게 블로깅할 수 있는 다른 블로그 서비스도 고려하자.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS에 Gitlab 설치하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/22/how-to-install-gitlib-on-centos/"/>
    <updated>2015-09-22T07:36:21+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/22/how-to-install-gitlib-on-centos</id>
    <content type="html"><![CDATA[<p>지난 포스팅 <a href="http://blog.asamaru.net/2015/09/21/how-to-install-gogs-on-centos/">CentOS에 gogs 설치하기</a>에서 gitlab 대신 gogs를 설치했다. 심플해서 설치/사용이 쉬울 것 같았기 때문에 선택한 것이었다. 설치 후에 사용하면서 느낀 것은 설치도 그리 쉽지만은 않고 사용할 때는 기능이 조금 많이 빈약한 느낌이 든다. 사실 많은 기능을 필요로하는 것은 아닌데 아직은 초기 버전이라 그런지 정말 딱 기본 기능만 있는 느낌이다. 그래서 결국 Gitlab을 추가로 설치해서 비교 중이다.</p>

<h2>설치</h2>

<p>Gitlab의 설치는 생각보다 훨씬 간단했다. 다른 사람들의 글의 보니 예전에 의존성 관련해서 설치할 것들이 많았다고 하는데 최근에는 패키지로 거의 한방에 설치가 가능했다.</p>

<p><a href="https://about.gitlab.com/downloads/">Gitlab 다운로드 페이지</a>에 가면 운영체제별로 안내가 잘되어 있다. 나는 이번에도 CentOS 6에 설치하므로 아래의 내용은 그 기준이다.</p>

<p>일단 그냥 시키는대로 주욱 명령을 실행한다. 그럼 그냥 설치 끝이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install curl openssh-server postfix cronie
</span><span class='line'>sudo service postfix start
</span><span class='line'>sudo chkconfig postfix on
</span><span class='line'>sudo lokkit -s http -s ssh
</span><span class='line'>
</span><span class='line'>curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh <span class="p">|</span> sudo bash
</span><span class='line'>sudo yum install gitlab-ce
</span></code></pre></td></tr></table></div></figure>


<h2>설정 및 실행</h2>

<p>안내 페이지의 마지막에 보면 아래의 명령이 있다. 실행에 앞서 아래의 내용을 먼저 읽어보기를 권장한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo gitlab-ctl reconfigure
</span></code></pre></td></tr></table></div></figure>


<p>이 명령은 초기설정 과정들을 진행하면서 시간이 조금 걸렸다. 처음엔 멈춰있는줄 알고 작업을 중지시키곤 했다. 그 후에 브라우저에서 접속해서 안내된 계정으로 접속한다. 사실 난 여기서 부터 조금 난해했다. 이미 해당 서버는 웹 서버가 돌고 있었으므로 어떻게 Gitlab 웹 서버가 동시에 뜰 수 있을까? 어딘가 분명 설정이 있을텐데&hellip;</p>

<p>그래서 찾아보니 <code>/etc/gitlab/gitlab.rb</code> 파일을 통해 설정이 가능했다. 우선 다른 설정은 다 무시하고 external_url 설정만 보자(실제로 이것만 활성화되어 있고 나머지는 다 주석처리 되어 있다). 이 설정을 통해 웹 서버가 사용할 도메인과 port를 지정할 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">external_url</span> <span class="s1">&#39;http://your.domain:port&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>이렇게 설정을 완료한 후 <code>sudo gitlab-ctl reconfigure</code> 명령을 실행하면 여기에 맞추어 서버를 알아서 구동해 준다(Gitlab은 내부적으로 웹 서버를 nginx를 사용한다).</p>

<p>이후에는 브라우저에서 접속해서 사용하면 된다.</p>

<h2>서버의 시작 / 종료</h2>

<p>아래의 명령들을 통해 서비스를 시작 / 종료할 수 있다. reconfigure는 설정을 반영해서 다시 설정하는 과정을 거치는 것으로 설정을 변경할 떄만 사용하면 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo gitlab-ctl start
</span></code></pre></td></tr></table></div></figure>




<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo gitlab-ctl stop
</span></code></pre></td></tr></table></div></figure>


<h2>내장 웹서버(nginx)를 사용하지 않고 외부 웹서버에 연결하기</h2>

<p>나의 경우는 이미 웹서버가 설치된 상황이었기 때문에 Gitlab 서버를 동시에 사용하려면 port를 따로 지정해서 사용하는 방법 밖에 없었다. 하지만 그렇게 사용하기는 보기 싫어서 웹 서버를 따로 구성하기로 했다.</p>

<p>자세히 본 것은 아니라서 정확하진 않지만 Gitlab은 내부적으로 <a href="http://unicorn.bogomips.org/">unicorn</a>과 nginx의 조합으로 이뤄져 있고 기능적 처리는 unicon과 연결된다. unicon의 기본 port가 8080으로 설정되어 있기 때문에 이 부분만 연결해주면 외부 웹서버로 연결하는 것도 당연히 가능하다.</p>

<p>아래는 아파치를 사용하는 상황에서의 설정 방법이다. 내용중 LimitRequestBody를 잊지말고 해주는 것이 좋다. 아니면 push에서 오류를 만날 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">ServerName</span> your.domain
</span><span class='line'>  <span class="nb">ServerSignature</span> <span class="k">Off</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">ProxyPreserveHost</span> <span class="k">On</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;IfModule</span> <span class="s">!mod_proxy.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">LoadModule</span> proxy_module modules/mod_proxy.so
</span><span class='line'>  <span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'>  <span class="nt">&lt;IfModule</span> <span class="s">!proxy_http_module.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">LoadModule</span> proxy_http_module modules/mod_proxy_http.so
</span><span class='line'>  <span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;Location</span> <span class="s">/</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">Order</span> deny,allow
</span><span class='line'>    <span class="nb">Allow</span> from <span class="k">all</span>
</span><span class='line'>    <span class="c"># push 전송시 용량 문제를 막기 위해 지정 : error: RPC failed; result=22, HTTP code = 413</span>
</span><span class='line'>    <span class="nb">LimitRequestBody</span> <span class="m">52428800</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">ProxyPassReverse</span> http://127.0.0.1:8080
</span><span class='line'>  <span class="nt">&lt;/Location&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">RewriteEngine</span> <span class="k">on</span>
</span><span class='line'>  <span class="nb">RewriteCond</span> %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f
</span><span class='line'>  <span class="nb">RewriteRule</span> .* http://127.0.0.1:8080%{REQUEST_URI} [P,QSA]
</span><span class='line'>
</span><span class='line'>  <span class="c"># needed for downloading attachments</span>
</span><span class='line'>  <span class="nb">DocumentRoot</span> <span class="sx">/opt/gitlab/embedded/service/gitlab-rails/public</span>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>그리고 <code>/etc/gitlab/gitlab.rb</code>에 아래의 내용을 추가한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">nginx</span><span class="o">[</span><span class="s1">&#39;enable&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>그리고 재설정.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo gitlab-ctl reconfigure
</span></code></pre></td></tr></table></div></figure>


<h3>예시</h3>

<p>내가 설정한 설정을 예로 보자면 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">external_url</span> <span class="s1">&#39;http://git.asamaru.net&#39;</span>
</span><span class='line'><span class="n">nginx</span><span class="o">[</span><span class="s1">&#39;enable&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>이렇게 설정하면 위 주소로 접속시 gitlab 화면을 볼 수 있다.</p>

<h2>첨언</h2>

<p>이건 gitlab과 직접적인 관련이 있는 내용은 아니나 도움이 될까해서 적어둔다. gogs나 gitlab 모두 ssh 주소와 http 주소를 제공한다. 별도 설정을 하지 않는한 ssh 주소를 사용할 경우에는 shell 계정으로 push를 하게되고 http 주소를 사용할 경우는 해당 클라이언트(사용자 컴퓨터)의 git 설정에 있는 사용자명으로 push를 해준다. 따라서 이 사용자명을 바꾸고 싶다면 아래의 명령으로 수정할 수 있다. 단, OSX 기준이다. 아마도 linux는 같을 것이라고 보는데&hellip; 윈도우는 사용하질 않아서 잘 모르겠다. 윈도우도 git 사용자명 변경에 관련된 검색을 하면 많이 나올테니 쉽게 해결하리라 본다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global user.name <span class="s2">&quot;사용자명&quot;</span>
</span><span class='line'>git config --global user.email <span class="s2">&quot;사용자 이메일&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>이 사용자명(특히 이메일)을 gitlab에 가입된 user와 맞춰주면 변경사항 기록시 서로 연결된다. 따라서 그냥 설정할 것이 아니라 Gitlab 설치와 기본 설정 후 사용할 계정으로 가입 후 그 계정에 맞게 맞추는 것을 권장한다. 나의 경우엔 이메일만 연관이 있고 user는 달라도 상관은 없었다(정확한 기준은 확인해 보지 못했고 실수로 다르게 넣었는데 이메일이 같으니 알아서 연결해 주더라).
사실 Gitlab에서 프로젝트를 생성하고 최초 commit/push 전에 나오는 안내화면에 관련 설정 부분을 안내해 주고 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS에 gogs 설치하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/21/how-to-install-gogs-on-centos/"/>
    <updated>2015-09-21T13:58:12+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/21/how-to-install-gogs-on-centos</id>
    <content type="html"><![CDATA[<p>기존에는 SCM(source code management)으로 SVN을 주로 사용했다. 하지만 git를 사용하기 시작하면서 부터 git를 주로 사용하긴 했는데 주로 github를 통해서만 사용했다. 그런데 이번에 회사 프로젝트에서 필요한 부분이 있어 자체 호스팅을 하기 위해 기존에 봐뒀던 <a href="https://about.gitlab.com/">gitlab</a>을 쓰려다가 <a href="http://gogs.io/">gogs</a>를 알게 되면서 이걸 설치했다. gogs를 고른 이유는 간단하기 때문이다(<a href="https://blog.deimos.fr/2014/08/19/github-vs-gitlab-vs-stash-vs-gogs/">GitHub vs GitLab vs Stash vs Gogs</a>를 참고). 사실 아직 제대로 사용해보지 않아서 맞는지는 모르겠지만 gitlab은 ruby 기반이고 난 ruby 환경을 별로 좋아하지 않는다(내가 몰라서 그렇겠지만 이상하게 ruby 기반 프로젝트들은 설치/관리가 어려워서).</p>

<h2>git 설치</h2>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7">How To Install Git on CentOS 7</a>를 참고하자. 다른 곳을 참조해도 당연히 무방하다. 난 사실 예전에 yum으로 git가 설치되어 있던 상황으로 이 단계는 건너뛰었다(게다가 나의 centos는 6이다).</p>

<h2>gogs 설치</h2>

<p>기본적으로 설치방법은 <a href="http://gogs.io/docs/installation">gogs Installation</a>에 잘 설명되어 있다. 하지만 centos가 없다. 조금 더 자세히 보면 대신 <a href="http://gogs.io/docs/installation/install_from_packages.html">Install from packages</a>가 있다. 이곳의 설명/링크를 따라 <a href="https://packager.io/gh/pkgr/gogs">packager.io</a>에 가면 설치 방법을 안내받을 수 있다.</p>

<p>찾아가는 수고를 덜어주기 위해 필요한 부분을 옮겨왔다. 2015.09.21 기준이므로 최신 내용을 확인하려면 위의 안내대로 사이트를 방문해서 안내받자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rpm --import https://rpm.packager.io/key
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;[gogs]</span>
</span><span class='line'><span class="s2">name=Repository for pkgr/gogs application.</span>
</span><span class='line'><span class="s2">baseurl=https://rpm.packager.io/gh/pkgr/gogs/centos6/pkgr</span>
</span><span class='line'><span class="s2">enabled=1&quot;</span> <span class="p">|</span> sudo tee /etc/yum.repos.d/gogs.repo
</span><span class='line'>sudo yum install gogs
</span></code></pre></td></tr></table></div></figure>


<p>그냥 시키는대로 따라하면 설치는 간단히 완료된다. 단, gogs는 계정을 추가하는 부분이 있어 passwd, shadow 파일에 lock이 걸려있으면 아래와 같은 오류가 나며 제대로 설치가 되지 않는다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Error in PREIN scriptlet in rpm package gogs-0.6.9-1442807350.69b1d65.centos6.x86_64
</span><span class='line'>useradd: /etc/passwd을<span class="o">(</span>를<span class="o">)</span> 열 수 없습니다
</span></code></pre></td></tr></table></div></figure>


<p>일단 풀어주고 설치하자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chattr -i /etc/passwd
</span><span class='line'><span class="nv">$ </span>chattr -i /etc/shadow
</span></code></pre></td></tr></table></div></figure>


<p>설치가 완료되면 다시 원상복구.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chattr +i /etc/passwd
</span><span class='line'><span class="nv">$ </span>chattr +i /etc/shadow
</span></code></pre></td></tr></table></div></figure>


<p>설치가 정상적으로 되었다면 아래의 파일이 존재할 것이다.`</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls /etc/init.d/gogs
</span><span class='line'>la /home/gogs
</span></code></pre></td></tr></table></div></figure>


<p>그리고 나중에 ssh를 통한 clone을 사용할 예정이라면 설치 과정에서 추가된 gogs 계정의 비밀번호를 지정해 두어야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>passwd gogs
</span></code></pre></td></tr></table></div></figure>


<h2>환경구성</h2>

<p>환경설정 파일은 <code>/etc/gogs/conf/app.ini</code>에 있다. 하지만 최초 웹페이지 접속시 자동으로 설치 화면이 뜬다. 게다가 이 파일을 열어보면 상단에 절대로 수정하지 말라고 되어 있다. 따라서 그냥 웹에서 설정하자.</p>

<p>본격적으로 세팅을 하기 전에 주의사항이 있다. gogs는 DB가 있어야 된다. 따라서 mysql 또는 postgresql이 미리 설치되어 있어야 한다. 이건 뭐 굳이 여기서 설명하지 않아도 설치방법이 다른 곳에 많으니 설치가 되어 있다고 가정하고 설명한다.</p>

<h3>DB 설정</h3>

<p>우선 DB를 세팅한다.</p>

<p>root 계정을 설정하는데 필요없다면 하지 않아도 된다. 기존에 DB가 이미 설치되어 있다면 당연히 이 부분이 처리가 되어 있을테니 하지 말자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysqladmin -u root password <span class="s2">&quot;${MYSQL_PASSWORD}&quot;</span>
</span><span class='line'>mysqladmin -u root --password<span class="o">=</span><span class="s2">&quot;${MYSQL_PASSWORD}&quot;</span> password <span class="s2">&quot;${MYSQL_PASSWORD}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>하지만 DB는 만들어 줘야 한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql -u root -p<span class="k">${</span><span class="nv">MYSQL_PASSWORD</span><span class="k">}</span> -e <span class="s2">&quot;CREATE DATABASE IF NOT EXISTS ${APP_NAME}; use ${APP_NAME}; set global storage_engine=INNODB;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>예시</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql -u root -p -e <span class="s2">&quot;CREATE DATABASE IF NOT EXISTS gogs; use gogs; set global storage_engine=INNODB;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>WEB UI를 이용한 설정</h3>

<p>그럼 본격적으로 설정을 시작하자.</p>

<p><a href="http://userdomain:3000/">http://userdomain:3000/</a></p>

<p>필요한 사항을 설정한다. 대부분 보면 뭘 해야할지 알 수 있다. 오류가 나면 해당 안내에 따라 설정하면 된다. 추후 설정에 변경이 필요하면 <code>custom/conf/app.ini</code>파일에 필요한 설정만 override 하면 된다(나의 경우는 <code>/opt/gogs/custom/conf/app.ini</code> 파일이다. 이 파일 위치를 찾느라 한참을 헤멨다.). <a href="http://gogs.io/docs/installation/configuration_and_run.html">http://gogs.io/docs/installation/configuration_and_run.html</a> 를 참고</p>

<h3>도메인 연결</h3>

<p>이제는 도메인 연결을 할 차례이다.</p>

<p><strong>httpd 2 기준</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">ServerName</span> your.domain.com
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;IfModule</span> <span class="s">!mod_proxy.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">LoadModule</span> proxy_module modules/mod_proxy.so
</span><span class='line'>  <span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'>  <span class="nt">&lt;IfModule</span> <span class="s">!proxy_http_module.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">LoadModule</span> proxy_http_module modules/mod_proxy_http.so
</span><span class='line'>  <span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">ProxyPass</span> / http://localhost:3000/
</span><span class='line'>  <span class="nb">ProxyPassReverse</span> / http://localhost:3000/
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>나의 경우는 apache를 사용중이라 위와 같이 설정하면 되나 nginx를 사용하는 경우라면 아래를 참고하자(packager.io에 안내된 내용이다.).</p>

<p><strong>nginx</strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat &gt; /etc/nginx/sites-available/default <span class="s">&lt;&lt;EOF</span>
</span><span class='line'><span class="s">server {</span>
</span><span class='line'><span class="s">  listen          80;</span>
</span><span class='line'><span class="s">  server_name     ${HOSTNAME};</span>
</span><span class='line'><span class="s">  location / {</span>
</span><span class='line'><span class="s">    proxy_pass      http://localhost:6000;</span>
</span><span class='line'><span class="s">  }</span>
</span><span class='line'><span class="s">}</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'>sudo service nginx restart
</span></code></pre></td></tr></table></div></figure>


<h3>서버 시작시 자동시작</h3>

<p>우선 서버 시작시 자동 시작 되도록 설정하자(필요하다면). 나의 경우 <code>setup</code>으로 확인해보니 자동으로 들어가 있지 않았다. 그래서 아래와 같이 시도했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 서버 부팅시 자동 시작</span>
</span><span class='line'>/sbin/chkconfig --add gogs
</span><span class='line'>/sbin/chkconfig --level <span class="m">35</span> gogs on
</span><span class='line'>/sbin/chkconfig --list
</span></code></pre></td></tr></table></div></figure>


<p>첫줄부터 안된다. &ldquo;gogs 서비스는 chkconfig 를 지원하지 않습니다"라고 오류를 내보낸다. 말그대로 gogs는 chkconfig를 지원하지 않는다. 해서 아래와 같이 서버 시작시 스크립트를 실행하도록 넣어 버렸다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/rc.d/rc.local
</span><span class='line'>
</span><span class='line'><span class="c"># 아래 줄을 추가</span>
</span><span class='line'>/etc/init.d/gogs start
</span></code></pre></td></tr></table></div></figure>


<h3>설정시 유의 사항</h3>

<p>설치는 위의 과정들을 통해 완료되었다. 하지만 제대로 써보려면 설정을 환경에 맞게 몇가지 조정하는 것이 좋다.</p>

<ul>
<li>ROOT 설정</li>
</ul>


<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>repository<span class="o">]</span>
</span><span class='line'><span class="nv">ROOT</span> <span class="o">=</span> /home/gogs
</span></code></pre></td></tr></table></div></figure>


<p>기본적으로 ROOT 부분은 <code>ROOT = /home/gogs/gogs-repositories</code>로 되어 있지만 위 처럼 gogs-repositories 부분을 제거해 주는 것이 좋다. 나중에 레포지토리를 생성하게되면 clone 주소를 알려준다. 이때 http와 ssh 주소 두가지를 알려주는데 이때 ssh를 사용하게 되면 주소 부분이 맞지 않게된다. 예를들어 gogs@git.asamaru.net:root/test.git 이라는 주소로 생성된 경우 아래와 같이 clone을 시도할 것이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone gogs@git.corez.kr:root/test.git
</span></code></pre></td></tr></table></div></figure>


<p>하지만 아래와 같은 오류를 내며 정상적으로 clone이 되지 않는다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>fatal: <span class="s1">&#39;root/test.git&#39;</span> does not appear to be a git repository
</span><span class='line'>fatal: Could not <span class="nb">read </span>from remote repository.
</span><span class='line'>
</span><span class='line'>Please make sure you have the correct access rights
</span><span class='line'>and the repository exists.
</span></code></pre></td></tr></table></div></figure>


<p>다시 아래와 같이 해보면 정상적으로 clone 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone gogs@git.corez.kr:gogs-repositories/root/test.git
</span></code></pre></td></tr></table></div></figure>


<p>ssh 주소를 사용하는 경우는 계정도 gogs를 사용하며 경로도 gogs의 home에서부터의 경로를 찾기 때문에 &ldquo;gogs-repositories/"를 추가해 줘야하는 것이다. 이 주소를 일일이 넣는 것이 귀찮으므로 위에 설명한 것처럼 ROOT 경로를 변경해 버리는 것이 편하다. ssh 에서 home 경로를 바꿀 수도 있겠지만 이 방법이 더 나을 것으로 본다.
ROOT를 변경한 후 재시작하고 레포지토리를 만들면 아래의 예시처럼(gogs에서 안내되는 주소) clone을 받을 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone gogs@git.corez.kr:root/test.git
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[안드로이드 TabLayout에서 setupWithViewPager() 사용시 Swipe 후 Tab 클릭시 ViewPager가 변경되지 않는 버그 수정]]></title>
    <link href="http://blog.asamaru.net/2015/09/21/android-tablayout-with-viewpager-setupwithviewpager-tab-click-not-working-after-swipe/"/>
    <updated>2015-09-21T11:40:02+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/21/android-tablayout-with-viewpager-setupwithviewpager-tab-click-not-working-after-swipe</id>
    <content type="html"><![CDATA[<p><a href="http://android-developers.blogspot.kr/2015/05/android-design-support-library.html">Android Design Support Library</a>에 있는 <a href="https://developer.android.com/intl/ko/reference/android/support/design/widget/TabLayout.html">TabLayout</a>과 ViewPager를 연동해서 사용하기 위해 <a href="https://developer.android.com/intl/ko/reference/android/support/design/widget/TabLayout.html#setupWithViewPager%28android.support.v4.view.ViewPager%29">setupWithViewPager()</a> 함수를 사용한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setupWithViewPager</span> <span class="o">(</span><span class="n">ViewPager</span> <span class="n">viewPager</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>TabLayout와 ViewPager를 연동한다.</p></blockquote>

<p>이 함수는 아래의 동작을 수행한다.</p>

<ul>
<li>Add a ViewPager.OnPageChangeListener that will forward events to this TabLayout.</li>
<li>Populate the TabLayout&rsquo;s tabs from the ViewPager&rsquo;s PagerAdapter.</li>
<li>Set our TabLayout.OnTabSelectedListener which will forward selected events to the ViewPager</li>
</ul>


<p>결론은 setupWithViewPager()를 사용하면 손쉽게 TabLayout와 ViewPager를 연동할 수 있다. 다시말해 ViewPager를 넘기면 이에 맞추어 TabLayout의 선택이 변경되고 TabLayout에서 Tab을 터치하면 이에 맞게 ViewPager가 변경된다.</p>

<p>하지만 이 기능에는 버그가 있다. 그냥 쉽게 넘어가면 안드로이드가 아니지&hellip;
이 문제도 항상 발생하는 것은 아니나 간헐적으로 ViewPager을 Swipe하여 변경을 하다가 Tab을 터치하면 Tab은 터치에 맞게 변경되나 ViewPaper는 함께 변경되지 않는 문제가 발생한다. 이 문제에 대해서는 <a href="https://code.google.com/p/android/issues/detail?id=183123%EC%97%90">https://code.google.com/p/android/issues/detail?id=183123%EC%97%90</a> 버그 리포트 되어 있다.</p>

<p>패치를 기다리기 전에 문제를 해결할 필요가 있어 아래와 같이 직접 수정해서 사용했다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">tabLayout</span><span class="o">.</span><span class="na">setOnTabSelectedListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TabLayout</span><span class="o">.</span><span class="na">OnTabSelectedListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTabSelected</span><span class="o">(</span><span class="n">TabLayout</span><span class="o">.</span><span class="na">Tab</span> <span class="n">tab</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">tab</span><span class="o">.</span><span class="na">getPosition</span><span class="o">()</span> <span class="o">!=</span> <span class="n">viewPager</span><span class="o">.</span><span class="na">getCurrentItem</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">viewPager</span><span class="o">.</span><span class="na">setCurrentItem</span><span class="o">(</span><span class="n">tab</span><span class="o">.</span><span class="na">getPosition</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTabUnselected</span><span class="o">(</span><span class="n">TabLayout</span><span class="o">.</span><span class="na">Tab</span> <span class="n">tab</span><span class="o">)</span> <span class="o">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTabReselected</span><span class="o">(</span><span class="n">TabLayout</span><span class="o">.</span><span class="na">Tab</span> <span class="n">tab</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">tab</span><span class="o">.</span><span class="na">getPosition</span><span class="o">()</span> <span class="o">!=</span> <span class="n">viewPager</span><span class="o">.</span><span class="na">getCurrentItem</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">viewPager</span><span class="o">.</span><span class="na">setCurrentItem</span><span class="o">(</span><span class="n">tab</span><span class="o">.</span><span class="na">getPosition</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>간단히 원리를 설명하자면 다음과 같다.</p>

<p>tab이 변경되었음에도 ViewPager에 반영되지 않는 것이 문제이므로 OnTabSelectedListener를 추가해서 변경된 Tab과 ViewPager의 위치가 맞지 않으면 강제로 ViewPager의 위치를 이동하는 것이다.</p>

<p>그런데 최근 이 버그 이슈에 변경이 생겼는데 내용은 <strong>Android Design Support Library 23.0.1 버전에 패치(2015년 9월 5일자)가 되었다는 것</strong>. 확인해 보니 버그 패치가 되었다. 따라서 23.0.1 이상을 사용한다면 위의 방법을 사용할 필요는 없어졌다. setupWithViewPager를 사용할 수 없는 경우 등을 위해서 기록을 남겨둔다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[안드로이드 ViewPager.setOnPageChangeListener() Deprecated 대응]]></title>
    <link href="http://blog.asamaru.net/2015/09/21/android-viewpager-dot-setonpagechangelistener-deprecated/"/>
    <updated>2015-09-21T11:20:00+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/21/android-viewpager-dot-setonpagechangelistener-deprecated</id>
    <content type="html"><![CDATA[<p><a href="https://developer.android.com/intl/ko/tools/support-library/index.html">Android Support Library 22.2.0</a> 이후부터 ViewPager.setOnPageChangeListener() 함수가 Deprecated 되었다. 안드로이드는 무슨 Deprecated가 이렇게 빈번한지&hellip; 하지만 이번 변경은 옳은 결정이라고 생각한다. 그냥 Deprecated된 것이 아니라 대체할 수 있는 함수가 함께 추가되었다(더 유연한).</p>

<p><strong> <a href="https://developer.android.com/intl/ko/reference/android/support/v4/view/ViewPager.html#setOnPageChangeListener%28android.support.v4.view.ViewPager.OnPageChangeListener%29">ViewPager.setOnPageChangeListener() - Deprecated</a> </strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOnPageChangeListener</span> <span class="o">(</span><span class="n">ViewPager</span><span class="o">.</span><span class="na">OnPageChangeListener</span> <span class="n">listener</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>ViewPager의 페이지가 변경(선택된 페이지의 변경 : UI의 변경이 아닌)되거나 스크롤이 이동될 때 불려지는 listener를 지정한다.</p></blockquote>

<p>기존 setOnPageChangeListener의 문제점은 listener를 하나만 사용할 수 있다는 것이다. 그래서 이번에 Deprecated되면서 여러개의 listener를 사용할 수 있도록 변경되었다.</p>

<p>대체 방법으로 아래의 함수들이 추가되었다.</p>

<p><strong> <a href="https://developer.android.com/intl/ko/reference/android/support/v4/view/ViewPager.html#addOnPageChangeListener%28android.support.v4.view.ViewPager.OnPageChangeListener%29">ViewPager.addOnPageChangeListener()</a></strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">addOnPageChangeListener</span> <span class="o">(</span><span class="n">ViewPager</span><span class="o">.</span><span class="na">OnPageChangeListener</span> <span class="n">listener</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>OnPageChangeListener를 추가한다.</p></blockquote>

<p><strong> <a href="https://developer.android.com/intl/ko/reference/android/support/v4/view/ViewPager.html#clearOnPageChangeListeners%28%29">ViewPager.clearOnPageChangeListeners()</a> </strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">clearOnPageChangeListeners</span> <span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>등록된 OnPageChangeListener를 모두 제거한다.</p></blockquote>

<p><strong> <a href="https://developer.android.com/intl/ko/reference/android/support/v4/view/ViewPager.html#removeOnPageChangeListener%28android.support.v4.view.ViewPager.OnPageChangeListener%29">ViewPager.removeOnPageChangeListener()</a></strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">removeOnPageChangeListener</span> <span class="o">(</span><span class="n">ViewPager</span><span class="o">.</span><span class="na">OnPageChangeListener</span> <span class="n">listener</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>지정된 OnPageChangeListener를 제거한다.</p></blockquote>

<p>사용법은 설명하지 않아도 바로 이해할 수 있을 생각된다. setOnPageChangeListener와 addOnPageChangeListener의 인자가 동일하므로 함수명만 바꾸면 그대로 동작한다. 단, 기존 것은 setOnPageChangeListener는 removeOnPageChangeListener와 addOnPageChangeListener 동작을 합친 것처럼 동작했으니 동일한 역할이 필요하다면 removeOnPageChangeListener와 addOnPageChangeListener를 함께 사용해야 한다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Units - px, pt, em, % 등]]></title>
    <link href="http://blog.asamaru.net/2015/09/20/css-units/"/>
    <updated>2015-09-20T08:23:23+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/20/css-units</id>
    <content type="html"><![CDATA[<p>w3schools의 <a href="http://www.w3schools.com/cssref/css_units.asp">CSS Units</a>에는 다음과 같이 CSS에서 사용하는 단위에 대해 안내되어 있다.</p>

<blockquote><p>CSS는 단위(길이)를 표현하기 위한 여러가지 단위가 있다. width, margin, padding, font-size, border-width 등과 같은 많은 CSS 속성에서 사용한다. 단위는 10px, 2em과 같이 숫자 뒤에 공백없이 붙여서 사용하며 0인 경우는 생략할 수 있다. 단위는 음의 수를 가질 수 있으며 상대/절대 단위로 구분할 수 있다.</p></blockquote>

<h2>Browser Support</h2>

<table>
<thead>
<tr>
<th> Unit </th>
<th> Chrome </th>
<th> IE </th>
<th> Firefox </th>
<th> Safari </th>
<th> Opera </th>
</tr>
</thead>
<tbody>
<tr>
<td>em, ex, %, px, cm, mm, in, pt, pc </td>
<td> 1.0 </td>
<td> 3.0 </td>
<td> 1.0 </td>
<td> 1.0 </td>
<td> 3.5 </td>
</tr>
<tr>
<td>ch </td>
<td>27.0 </td>
<td> 9.0 </td>
<td> 1.0 </td>
<td> 7.0 </td>
<td> 20.0 </td>
</tr>
<tr>
<td>rem </td>
<td> 4.0 </td>
<td> 9.0 </td>
<td> 3.6 </td>
<td> 4.1 </td>
<td> 11.6 </td>
</tr>
<tr>
<td>vh, vw </td>
<td> 20.0 </td>
<td> 9.0 </td>
<td> 19.0 </td>
<td> 6.0 </td>
<td> 20.0 </td>
</tr>
<tr>
<td>vmin </td>
<td> 20.0 </td>
<td> 9.0* </td>
<td> 19.0 </td>
<td> 6.0 </td>
<td> 20.0 </td>
</tr>
<tr>
<td>vmax </td>
<td> 26.0 </td>
<td> Not supported </td>
<td> 19.0 </td>
<td> Not supported </td>
<td> 20.0 </td>
</tr>
</tbody>
</table>


<blockquote><p>Note: 인터넷 익스플로러 9에서는 vmin을 비표준 이름인 vm으로 지원한다.</p></blockquote>

<h2>상대 단위</h2>

<p>상대 단위는 다른 단위 속성에 대한 상대적 길이를 지정한다. 상대 단위를 잘 사용하면 다양한 디바이스에 최적화된 보기를 제공할 수 있기 때문에 권장되는 단위이다. 하지만 일반적으로 고정된 사이즈 내에서 디자인하는 것에 익숙한 경우에는 사용이 다소 까다롭다(상대적 단위를 쓸 때 가장 중요한 것은 어느 것에 대한 상대적 사이즈인지를 생각해야 하기 때문이다. 단순해 보이지만 작업을 하다보면 조금 복잡한 상황이 생기기도 한다).</p>

<table>
<thead>
<tr>
<th> Unit </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td> em </td>
<td> 해당 Element의 font-size에 대한 비율(2em은 font-size의 2배 사이즈) </td>
</tr>
<tr>
<td> ex </td>
<td> 현재 글꼴의 x(소문자) 높이에 대한 비율 </td>
</tr>
<tr>
<td> ch </td>
<td> &ldquo;0"의 width에 대한 비율 </td>
</tr>
<tr>
<td> rem </td>
<td> Root Element(html)의 font-size에 대한 비율 </td>
</tr>
<tr>
<td> vw </td>
<td> Viewport width의 1%에 대한 비율 </td>
</tr>
<tr>
<td> vh </td>
<td> Viewport height의 1%에 대한 비율 </td>
</tr>
<tr>
<td> vmin </td>
<td> Viewport smaller dimension의 1%에 대한 비율 </td>
</tr>
<tr>
<td> vmax </td>
<td> Viewport larger dimension의 1%에 대한 비율 </td>
</tr>
<tr>
<td> % </td>
<td> &nbsp; </td>
</tr>
</tbody>
</table>


<blockquote><p>Tip: em과 rem 단위는 확장 레이아웃을 만는데 아주 실용적(효과적)이다.</p></blockquote>

<h2>절대 단위</h2>

<p>절대 단위는 고정되어 있으며 지정된 단위로 정확히 표현된다. &ldquo;웹 화면의 크기는 아주 다양하기 때문에 화면에서는 사용하지 않는 것이 좋다. 그러나 프린트 레이아웃과 같이 출력 화면을 알고 있는 경우에는 사용될 수 있다."라고는 하지만 일반적인 경우엔 상대 단위보다 더 많이 사용하게 된다.</p>

<table>
<thead>
<tr>
<th> Unit </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td> cm </td>
<td> 센티미터 </td>
</tr>
<tr>
<td> mm </td>
<td> 밀리미터 </td>
</tr>
<tr>
<td> in </td>
<td> 인치 (1in = 96px = 2.54cm) </td>
</tr>
<tr>
<td> px * </td>
<td> 픽셀 (1px = 1/96th of 1in) </td>
</tr>
<tr>
<td> pt </td>
<td> 포인트 (1pt = 1/72 of 1in) </td>
</tr>
<tr>
<td> pc </td>
<td> 피카 (1pc = 12 pt) </td>
</tr>
</tbody>
</table>


<blockquote><p>Pixels(px)는 보여지는 기기에 따라 상대적이다. 예를들어 low-dpi 기기에서는 1px은 화면의 1 device pixel(dot)이다. 프린터 또는 고행상도 기기에서는 1px이 화면의 여러 pixel과 동일하다.</p></blockquote>

<h2>사용 제안</h2>

<p>위에서 절대 단위를 더 많이 사용한다는 언급을 했던 것과 마찬가지로 대부분의 경우에 고정 단위를 많이 사용한다. 하지만 최근의 트랜드를 감안하면 상대 단위를 적극적으로 사용할 필요가 있다. 최근 유행하는 용어들인 멀티 디바이스, 적응형 웹, 반응형 웹, 미디어 쿼리 등에 상대 단위가 더 잘 부합된다. 사실 정확히 이야기하자면 선정된 환경(예측되는 한경)만 감안한다면 절대 단위만으로 원하는 결과를 대부분 얻을 수 있다. 하지만 지금처럼 다양한 환경(미리 환경을 예측할 수 없을 만큼)에 최선의 결과를 얻고 싶다면 기존 설계의 습관을 버리고 상대 단위를 기반으로한 디자인 설계를 적극 도입하자.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[익스플로러 호환성 보기]]></title>
    <link href="http://blog.asamaru.net/2015/09/19/x-ua-compatible-ie-equals-edge-compatibility-view/"/>
    <updated>2015-09-19T09:32:18+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/19/x-ua-compatible-ie-equals-edge-compatibility-view</id>
    <content type="html"><![CDATA[<p>현재는 많이 줄었다고는 해도 아직도 인터넷 익스플로러의 사용자가 많은 편이다. 최근 11버전을 새로 출시하면서 예전 보다는 많이 좋아졌다는 평가들이 많다. 하지만 아직도 나에겐 좋지않은 인상이 더 많이 남은 것 같다. 본격적으로 일로써 브라우저를 접할 때에는 인터넷 익스폴로러가 5.5에서 6으로 막 넘어가던 시기였다. 그 시절만 하더라도 익스플로러에 대항할 브라우저는 없었다. 그 당시에도 파이어폭스, 오페라가 있었지만 점유율은 높지 않았다. 그 상태로 오랜 시간이 흘러 익스플로러7이 나오고 다시 8이 나왔다. 이 시점에 등장한 것이 호환성 보기라는 기능이다(사실 정확한 시점은 기억나지 않지만 8이 나오는 시점이었던 것 같다).</p>

<p>우선 호환성 보기란 무엇인가?</p>

<p>마이크로소프트의 윈도우 사이트에 보면 &ldquo;<a href="http://windows.microsoft.com/ko-kr/windows/websites-display-incorrectly-internet-explorer-8#1TC=windows-7">왜 Internet Explorer 8에서 일부 웹 사이트가 올바르게 표시되지 않습니까?</a>"라는 글이 있다. 사실 이 글에서도 명확하게 설명하진 않지만 "이전 버전의 Internet Explorer(인터넷 익스플로러)용 웹 사이트는 현재 버전에서 올바르게 표시되지 않을 수도 있습니다. 하지만 호환성 보기를 사용하여 Internet Explorer(인터넷 익스플로러)에서 웹 사이트가 표시되는 방식을 개선할 수 있습니다."라고 되어 있다.</p>

<p><strong>MS 관련글</strong>
* <a href="http://windows.microsoft.com/ko-kr/internet-explorer/use-compatibility-view#ie=ie-11">호환성 보기를 사용하여 사이트 표시 문제 해결하기</a>
* <a href="https://support.microsoft.com/ko-kr/kb/2536204">Internet Explorer 9에서 호환성 보기 방법</a></p>

<p>그렇다 새로운 인터넷 익스플로러에서 이전 버전의 익스플로러에 맞추어진 사이트가 정상적이지 보이지 않는 문제를 해결하기 위해 추가된 기능이다. 그럼 왜 정상적으로 보이지 않는 것일까? 인터넷 익스플로러는 웹 표준을 제대로 준수하지 않았기 때문에 버전이 올라가면서 호환성에 문제가 많이 발생한 것이다. 워낙에 점유율이 높은 상황이 이었으니 급진적 변화는 대란이 일어날 것이라는 생각에 호환성 보기를 추가했으리라 본다.</p>

<p>하지만 나는 이 호환성 보기라는 것이 더 큰 문제들을 만들었다고 생각한다. 어짜피 새로운 웹 표준으로 전향되어야 하는 상황에 알아서 맞춰주는 기능을 제공하니 서비스들이 변화에 적응하는 것이 더 늦어진 것이다. 변화할 시간을 준다는 목적이었을지 모르나 제대로된 웹으로 전환되는데 걸림돌이 되는 상황이다. 특히 이 호환성 모드가 8에서만 제공되는 것이 아니라 그 이후 9, 10, 11에서 조차도 제공한다는 것이다. 게다가 호환성 보기를 사용자가 판단하여 도저히 볼 수 없는 사이트를 골라서 적용하게 해야 하는데 인터넷 익스플로러가 자체적인 판단을 해서 호환성 모드로 보여주는 경우가 많다. 여기서 심각한 문제가 발생한다. 정작 웹표준을 준수하여 만들어진 페이지가 호환성 보기로 렌더링되어 깨지는 경우가 생기는 것이다(참고 - 랜더링 모드 선택 순서도 : <a href="https://hsivonen.fi/doctype/ie-mode.pdf">https://hsivonen.fi/doctype/ie-mode.pdf</a>).</p>

<p>나는 주변 지인들과이 대화에서 MS를 인터넷 발전의 &ldquo;악의 축"이라고 자주 얘기하곤 한다. 그 이유를 나열하자면 한도 끝도 없을 것 같고&hellip; 웹 분야에 일을 하시는 분들이라면 대부분의 경우 무엇 때문에 그런 생각을 가지게 되었는지 공감할 것이라고 생각한다.</p>

<p>어쨌든 다시 본론으로 돌아가서 이 호환성 보기는 현재 시점(HTML5를 채용하는 신규 웹 프로젝트)에서는 사용할 일이 없는 기능이다. 하지만 앞서 얘기한 것처럼 익스플로러가 제작된 페이지를 호환성 보기로 보여줘 버리는 문제를 해결하지 않으면 불편한 상황을 만나게 될 수 있으니 미리 대비해야 한다.</p>

<p>인터넷 익스플로러가 호환성 보기가 아닌 지정된 모드로 랜더링되게 하는 방법을 하나씩 알아보자.</p>

<h2>X-UA-Compatible Meta 선언을 사용하여 브라우저의 호환성 모드를 조정</h2>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;X-UA-Compatible&quot;</span> <span class="na">content=</span><span class="s">&quot;IE=edge,chrome=1&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>IE=edge : 최신모드로 지정된 DOCTYPE에 상관없이 IE8 이상 버전에서 항상 최신 표준 모드로 렌더링</li>
<li>chrome=1 : 크롬이 설치되어있다면 IE에서도 크롬 렌더링을 사용</li>
</ul>


<p>당연히 위에 예시처럼 <code>IE=edge,chrome=1</code>을 사용하는 것이 권장된다. 하지만 그외에도 아래와 같은 설정도 있다.</p>

<ul>
<li>IE=5 : 관용모드(quirks mode)로 지정된 DOCTYPE에 상관없이 IE5 렌더링 방식이 사용됩니다.</li>
<li>IE=7 : IE7 표준모드로 지정된 DOCTYPE에 상관없이 IE7 표준 모드 렌더링 방식이 사용</li>
<li>IE=EmulateIE7 : IE7 에뮬레이션 모드로 지정된 DOCTYPE에 따라 IE7 표준모드나 관용모드로 렌더링</li>
<li>IE=8 : IE8 표준모드로 지정된 DOCTYPE에 상관없이 IE8 표준모드로 렌더링</li>
<li>IE=EmulateIE8 : IE8 에뮬레이션 모드로 지정된 DOCTYPE에 따라 IE8 표준모드나 관용모드로 렌더링</li>
</ul>


<p>X-UA-Compatible는 HTML5에서 비표준 속성으로 validation에서 경고가 나올 수 있다.</p>

<h2>서버에서 응답 헤더에 X-UA-Compatible를 함께 전송</h2>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="c"># ------------------------------------------------------------------------------</span>
</span><span class='line'><span class="c"># | Better website experience                                                  |</span>
</span><span class='line'><span class="c"># ------------------------------------------------------------------------------</span>
</span><span class='line'><span class="c"># Force IE to render pages in the highest available mode in the various</span>
</span><span class='line'><span class="c"># cases when it may not: http://hsivonen.iki.fi/doctype/ie-mode.pdf.</span>
</span><span class='line'><span class="nt">&lt;IfModule</span> <span class="s">mod_headers.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">Header</span> set X-UA-Compatible <span class="s2">&quot;IE=edge&quot;</span>
</span><span class='line'>    <span class="c"># `mod_headers` can&#39;t match based on the content-type, however, we only</span>
</span><span class='line'>    <span class="c"># want to send this header for HTML pages and not for the other resources</span>
</span><span class='line'>    <span class="nt">&lt;FilesMatch</span> <span class="s">&quot;\.(appcache|crx|css|cur|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|opus|otf|pdf|png|safariextz|svgz?|ttf|vcf|webapp|webm|webp|woff|xml|xpi)$&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">Header</span> unset X-UA-Compatible
</span><span class='line'>    <span class="nt">&lt;/FilesMatch&gt;</span>
</span><span class='line'><span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 또는</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;IfModule</span> <span class="s">mod_setenvif.c</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;IfModule</span> <span class="s">mod_headers.c</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">BrowserMatch</span> MSIE ie
</span><span class='line'>    <span class="nb">Header</span> set X-UA-Compatible <span class="s2">&quot;IE=Edge,chrome=1&quot;</span> env=ie
</span><span class='line'>  <span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'><span class="nt">&lt;/IfModule&gt;</span>
</span><span class='line'><span class="nt">&lt;IfModule</span> <span class="s">mod_headers.c</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">Header</span> append Vary <span class="k">User</span>-Agent
</span><span class='line'><span class="nt">&lt;/IfModule&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">#...</span>
</span><span class='line'>  <span class="kn">add_header</span> <span class="s">X-UA-Compatible</span> <span class="s">&quot;IE=Edge,chrome=1&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;system.webServer&gt;</span>
</span><span class='line'>     <span class="nt">&lt;httpProtocol&gt;</span>
</span><span class='line'>        <span class="nt">&lt;customHeaders&gt;</span>
</span><span class='line'>           <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;X-UA-Compatible&quot;</span> <span class="na">value=</span><span class="s">&quot;IE=edge,chrome=1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/customHeaders&gt;</span>
</span><span class='line'>     <span class="nt">&lt;/httpProtocol&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/system.webServer&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>크롬 프레임</h2>

<p><a href="https://tools.google.com/dlpage/chromeframe?hl=ko&amp;prefersystemlevel=true">크롬 프레임</a>이라는 ActiveX를 설치해서 익스플로러에서 크롬처럼 랜더링하는 것도 가능했지만 크롬 프레임의 개발 종료로 이제 더 이상 추천하지 않는다.</p>

<h2>추가적 문제</h2>

<p>자.. 그럼 이로써 모든 문제가 해결된 것인가? 항상 그렇듯 프로그래머에게는 쉽게 해피엔딩이 찾아오지 않는다. 사실 위의 X-UA-Compatible는 브라우저에게 주는 권고사항일뿐 강제사항이 아니다.</p>

<p><a href="http://blog.grotesq.com/post/380">IE에서 호환성 보기를 체크한 사용자 판별하기</a>에 소개된 내용을 기준으로 보조적 해결 방법을 제시한다.</p>

<p>아래의 경우들을 보자.</p>

<ul>
<li><strong>XP에서 IE8을 사용하는 경우</strong> : 호환성 보기 버튼이 항상 표시되므로 사용자들이 언제든 호환성 보기로 변경이 가능하다.</li>
<li><strong>Windows 7에서 IE8, 9를 사용하는 경우</strong> : 위와 같은 이유지만 이 경우는 윈도우 업데이트를 사용하지 않거나 일부러 업데이트를 막은 경우라고 볼 수 있다.</li>
<li><strong>모든 사이트를 호환성으로 보도록 설정한 경우</strong> : 이 옵션은 기본적으로 활성화 되지 않으므로 사용자가 스스로 이 옵션을 켰을 가능성이 높다. 개발자가 테스트 환경 구축을 위해서 이러는 경우도 있다.</li>
<li><strong>가끔 Tweek된 버전의 윈도에 이 옵션이 기본으로 활성화 된 경우</strong> : 사실 제일 곤란한 건 이런 경우이다.</li>
</ul>


<h3>호환성 보기 모드에서 사용자에게 호환성 보기 해제를 안내하기</h3>

<p>우선 사용자가 호환성 보기 모드를 사용하는지를 판별해야 적절한 가이드를 제시할 수 있다. <a href="http://blog.grotesq.com/post/380">IE에서 호환성 보기를 체크한 사용자 판별하기</a>에 소개된 아래의 예시를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span><span class="p">(</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span> <span class="s2">&quot;MSIE 7&quot;</span> <span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span> <span class="s2">&quot;Trident&quot;</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 호환성 보기 활성화</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// or</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="sr">/MSIE 7.*Trident/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span> <span class="s2">&quot;html&quot;</span> <span class="p">)[</span> <span class="mi">0</span> <span class="p">].</span><span class="nx">className</span> <span class="o">+=</span> <span class="s2">&quot; ie-compatible&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>판별 원리는 아래과 같다고도 소개되어 있다.</p>

<blockquote><p>MS의 렌더링 엔진은 Trident 입니다. IE7에서 처음 도입되었습니다. 하지만 userAgent에 Trident가 명시되기 시작한건 IE8 부터죠.
순정 IE7은 “MSIE 7″ 문자열은 포함하지만 “Trident”는 포함하지 않습니다.
IE8 이상에서 호환성 보기를 전환하면 userAgent에 버전 정보가 MSIE 7로 표시가 되기 때문에, 두 가지 문자열을 다 포함하게 되죠.</p></blockquote>

<p>이렇게 판별이 완료되면 사용자에게 호환성 보기에서는 정상적 사용이 되지 않는다는 것을 안내하면 되겠다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[구글 번역 사용시 특정 영역을 번역에서 제외하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/18/google-translate-exclude-words/"/>
    <updated>2015-09-18T12:13:16+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/18/google-translate-exclude-words</id>
    <content type="html"><![CDATA[<p>이 블로그에는 구글 번역 기능이 붙어 있다. 관련해서 포스팅한 글 <a href="http://blog.asamaru.net/2015/09/05/octopress-google-translate/">옥토프레스에 구글 번역기 달기</a>도 있다.
현재 테스트로 몇가지 언어를 선택 가능하도록 하고 사용중인데 문제가 생겼다. 기존에는 기능을 달아 놓고 번역이 되는 것만 확인하고는 자세히 보지 않아서 몰랐는데 오늘 확인하니 소스 코드까지 부분적으로 번역이 되는 것이 아닌가. 사실 이 블로그의 주된 내용이 프로그래밍 관련이라 코드 블록이 아주 많다.
그래서 방법을 구글 번역 메뉴얼에서 보니 다음과 같은 방법이 나와있었다.</p>

<h2>부분적으로 번역 제외하기</h2>

<p>해당 영역을 둘러싸고 있는 Tag에 notranslate Class를 준다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;notranslate&quot;</span><span class="nt">&gt;</span>번역하지 말아야 할 영역<span class="nt">&lt;/span&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>문서 전체를 번역 제외하기</h2>

<p>Html의 head 영역에 아래의 Meta 정보를 추가한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;google&quot;</span> <span class="na">content=</span><span class="s">&quot;notranslate&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>옥토프레스에 적용하기</h2>

<p>문제는 옥토프레스의 결과 HTML은 직접 만드는 것이 아니라는 것이다. 여러가지 방법이 있을 수 있으나 나는 code block만 검색에서 제외되면 되므로 그냥 관련 플러그인을 수정해 버렸다. <code>backtick_code_block.rb</code> 파일에서 <code>&lt;figure class='code'&gt;</code> 부분을 찾아서 <code>&lt;figure class='code notranslate'&gt;</code>로 바꿔 버렸다.</p>

<p>이것으로 모든 것이 해결된 것은 아니다. 문장 내에서 사용된 코드 블록은 backtick_code_block 플러그인에서 처리하지 않으니 다른 플러그인을 고쳐야 하는데 어딘지 찾지 못했다. 아마도 markdown 해석 플러그인 내부에 있을텐데 gem으로 설치된 것인지 내부에서는 보이지 않는 듯하다(사실 귀찮아서 자세히 찾지 않았다. 게다가 Ruby를 거의 모른다.)</p>

<p>어쨌든 이로써 소스 코드 영역은 번역에서 제외되어 조금은 나아졌다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutoCompleteAdapter(ArrayAdapter with Filterable) 사용시 비주기적 오류 발생 해결]]></title>
    <link href="http://blog.asamaru.net/2015/09/18/autocompleteadapter-arrayadapter-with-filterable-the-content-of-the-adapter-has-changed-but-listview-did-not-receive-a-notification/"/>
    <updated>2015-09-18T09:48:32+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/18/autocompleteadapter-arrayadapter-with-filterable-the-content-of-the-adapter-has-changed-but-listview-did-not-receive-a-notification</id>
    <content type="html"><![CDATA[<p>AppCompatAutoCompleteTextView를 사용하고자 할때 필요한 것이 데이터를 넘겨주는 Adapter이다. 단, 이 Adepter는 <code>extends ListAdapter &amp; Filterable</code> 가 적용되어야 한다. 그래서 보통은 <code>public class StringAutoCompleteAdapter extends ArrayAdapter&lt;String&gt; implements Filterable</code> 형태의 구현을 많이 사용한다. 그리고 대부분의 경우에 AutoCompleteTextView를 사용하는 이유는 검색어 자동완성 등에 사용되고 이 데이터는 서버에서 데이터를 호출해서 적용하도록 한다.</p>

<p>위에 설명한 내용대로 하나의 예시를 보면 아래와 같다(미리 설명하자면 아래의 예제는 잘못된 예제이다. 생각지 못한 오류를 비주기적으로 만나게 된다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">asamaru</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">test</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ArrayAdapter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Filter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Filterable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.gson.Gson</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.gson.reflect.TypeToken</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.MalformedURLException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringAutoCompleteAdapter</span> <span class="kd">extends</span> <span class="n">ArrayAdapter</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Filterable</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">resultList</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">StringAutoCompleteAdapter</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">textViewResourceId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">textViewResourceId</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">resultList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">resultList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">resultList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Filter</span> <span class="nf">getFilter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">Filter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="n">FilterResults</span> <span class="nf">performFiltering</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">constraint</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">FilterResults</span> <span class="n">filterResults</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">FilterResults</span><span class="o">();</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">constraint</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">resultList</span> <span class="o">=</span> <span class="n">autocomplete</span><span class="o">(</span><span class="n">constraint</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>                  <span class="k">if</span> <span class="o">(</span><span class="n">resultList</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">filterResults</span><span class="o">.</span><span class="na">values</span> <span class="o">=</span> <span class="n">resultList</span><span class="o">;</span>
</span><span class='line'>                      <span class="n">filterResults</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="n">resultList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">filterResults</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">publishResults</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">constraint</span><span class="o">,</span> <span class="n">FilterResults</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">results</span><span class="o">.</span><span class="na">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">notifyDataSetInvalidated</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">autocomplete</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">HttpURLConnection</span> <span class="n">conn</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">jsonResults</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">URL</span><span class="o">(</span><span class="s">&quot;http://www.abc.com/search/?kwd=&quot;</span> <span class="o">+</span> <span class="n">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="s">&quot;utf8&quot;</span><span class="o">));</span>
</span><span class='line'>          <span class="n">conn</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>          <span class="n">InputStreamReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">conn</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">read</span><span class="o">;</span>
</span><span class='line'>          <span class="kt">char</span><span class="o">[]</span> <span class="n">buff</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">read</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buff</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jsonResults</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">buff</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">read</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MalformedURLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">conn</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">conn</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="k">new</span> <span class="nf">Gson</span><span class="o">()).</span><span class="na">fromJson</span><span class="o">(</span><span class="n">jsonResults</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="k">new</span> <span class="n">TypeToken</span><span class="o">&lt;</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;()</span> <span class="o">{}.</span><span class="na">getType</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>위의 예제를 보면 얼핏봐서는 문제가 없어 보인다. 실제로 동작도 잘된다. 하지만 아주 낮은 빈도로 Exception이 발생해 앱이 죽는다. 이 문제로 인하여 원인을 찾지못해 고생하는 경우가 많다. 내가 작업하면서 발생했던 오류는 다음과 같다.</p>

<ul>
<li>The content of the adapter has changed but ListView did not receive a notification.</li>
<li>java.lang.NullPointerException: Attempt to invoke virtual method &lsquo;java.lang.String java.lang.Object.toString()&rsquo; on a null object reference</li>
</ul>


<p>내부적 동작 코드들을 보면 이 외에도 View의 구성이나 기타 코딩에 따라 다른 오류가 날 수도 있을 것 같다. 하지만 원인은 대부분 아래의 부분 때문이다(정확하게는 저 부분에서 오류가 나는 것이 아니라 저 부분이 들어간 위치 때문에 다른 부분에서 오류가 난다).</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">resultList</span> <span class="o">=</span> <span class="n">autocomplete</span><span class="o">(</span><span class="n">constraint</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>이유를 설명하자면 Filter의 performFiltering() 함수는 백그라운드 쓰레드에서 동작하도록 되어 있다. 그런데 이 함수 안에서 Adapter의 데이터를 변경하는 코드가 들어있기 때문에 Adapter가 데이터의 변경을 확인하는 시점과 notify 되는 시점이 엉킬 경우 오류를 내게 된다. 따라서 타이밍에 따라서 오류가 발생하기도 안하기도 하는 것이다(나의 경우는 키워드를 입력하거나 지우는 등의 변경이 빠르게 반복될 때 데이터의 변경이 빈번히 반복되면서 오류가 나타났다). 실제로 오류를 재현하기가 어려울 정도로 잘 안나오는 경우도 있었다.</p>

<p>그럼 잘못된 예제와 오류, 원인을 알아봤으니 정확한 처리 예시를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">asamaru</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">test</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ArrayAdapter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Filter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Filterable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.gson.Gson</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.gson.reflect.TypeToken</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.MalformedURLException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringAutoCompleteAdapter</span> <span class="kd">extends</span> <span class="n">ArrayAdapter</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Filterable</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">resultList</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">StringAutoCompleteAdapter</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">textViewResourceId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">textViewResourceId</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">resultList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">resultList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">resultList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Filter</span> <span class="nf">getFilter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">Filter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="n">FilterResults</span> <span class="nf">performFiltering</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">constraint</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">FilterResults</span> <span class="n">filterResults</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">FilterResults</span><span class="o">();</span>
</span><span class='line'>              <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">queryResults</span><span class="o">;</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">constraint</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">constraint</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">queryResults</span> <span class="o">=</span> <span class="n">autocomplete</span><span class="o">(</span><span class="n">constraint</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">queryResults</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="n">filterResults</span><span class="o">.</span><span class="na">values</span> <span class="o">=</span> <span class="n">queryResults</span><span class="o">;</span>
</span><span class='line'>              <span class="n">filterResults</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="n">queryResults</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">filterResults</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">publishResults</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">constraint</span><span class="o">,</span> <span class="n">FilterResults</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// noinspection unchecked</span>
</span><span class='line'>              <span class="n">resultList</span> <span class="o">=</span> <span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;)</span> <span class="n">results</span><span class="o">.</span><span class="na">values</span><span class="o">;</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">results</span><span class="o">.</span><span class="na">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">notifyDataSetInvalidated</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">autocomplete</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">HttpURLConnection</span> <span class="n">conn</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">jsonResults</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">URL</span><span class="o">(</span><span class="s">&quot;http://www.abc.com/search/?kwd=&quot;</span> <span class="o">+</span> <span class="n">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="s">&quot;utf8&quot;</span><span class="o">));</span>
</span><span class='line'>          <span class="n">conn</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>          <span class="n">InputStreamReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">conn</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">read</span><span class="o">;</span>
</span><span class='line'>          <span class="kt">char</span><span class="o">[]</span> <span class="n">buff</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">read</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buff</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jsonResults</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">buff</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">read</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MalformedURLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">conn</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">conn</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="k">new</span> <span class="nf">Gson</span><span class="o">()).</span><span class="na">fromJson</span><span class="o">(</span><span class="n">jsonResults</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="k">new</span> <span class="n">TypeToken</span><span class="o">&lt;</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;()</span> <span class="o">{}.</span><span class="na">getType</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>주요 변경 지점은 <code>getFilter()</code>이다. 기존에 <code>resultList = autocomplete(constraint.toString());</code> 부분을 통해 미리 Adapter의 데이터를 변경하던 것을 publishResults로 옮긴 것이다. 그리고 검색된 결과가 없더라도 빈 ArrayList를 만들어 넣어준 것이다.
코드 상으로는 큰 차이가 나지않고 굳이 이렇게 해야하나 싶지만 내부 동작 방식을 보면 이렇게 하지 않으면 앞서 설명한 것과 같이 예기치 못한 상황을 만날 수 있다.</p>

<p><strong>첨언 :</strong></p>

<ul>
<li>안드로이드는 조금만 잘못써도 오류가 발생하는 이런 경우를 많이 보게 되는데 아위운 점은 정확한 사용법을 제시하는 메뉴얼을 찾기 어렵다는 것이다.</li>
<li>코드 중간에 보면 <code>// noinspection unchecked</code> 부분이 있는데 크게 중요한 부분은 아니지만 이 부분을 제외하면 warning이 뜬다(안드로이드 스튜디오에서 노란 밑줄). 이 warning을 안드로이드 스튜디오에서 숨기는 역할을 하는 코드다.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP의 DateTime을 Java (Android)로 전달하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/17/datetime-from-php-to-java-android/"/>
    <updated>2015-09-17T18:45:26+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/17/datetime-from-php-to-java-android</id>
    <content type="html"><![CDATA[<p>안드로이드 앱을 개발하게되면 많은 경우에 서버와의 데이터 연결이 필요하다. 대부분의 데이터 타입은 이 과정에서 큰 문제를 일으키지 않는다(데이터 타입만 명확히 한다면). 하지만 DateTime은 조금 까다로울 수 있다. 프로그램에서 시간은 TimeZone을 가지고 있기 때문에 이 부분을 명확히 하지 않으면 의도치 않은 시간으로 표시된다. 게다가 형식이 맞지 않는다면 제대로 전달되지 않을 수도 있다.</p>

<blockquote><p>네이버 D2에 있는 <a href="http://d2.naver.com/helloworld/645609">Java의 날짜와 시간 API</a>를 보면 Java에서의 Date 처리가 불편하다는 얘기가 있다.</p></blockquote>

<p>이번 작업에서는 서버는 PHP를 사용하고 있는 상황이었고 클라이언트는 <a href="http://androidannotations.org/">AndroidAnnotations</a>의 <a href="https://github.com/excilys/androidannotations/wiki/Rest-API#rest">Rest-API</a>를 사용했다. 수신 데이터의 파싱은 <a href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/http/converter/json/GsonHttpMessageConverter.html">GsonHttpMessageConverter</a>를 사용하는 상황이다. 이 글의 주제에서 벗어나므로 <a href="http://androidannotations.org/">AndroidAnnotations</a>나 <a href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/http/converter/json/GsonHttpMessageConverter.html">GsonHttpMessageConverter</a>에 대한 부분은 설명하지 않겠다.</p>

<p>GsonHttpMessageConverter를 사용해서 데이터를 파싱하는 경우 대상이되는 class의 멤버변수의 데이터 타입에 맞추어 데이터를 채워준다. 당연히 전송되는 데이터가 JSON 형식이어야 한다. 다른 데이터 타입의 경우 앞서 설명한 것과 같이 데이터 타입만 맞춰준다면 아주 쉽게 데이터를 받을 수 있다(그것이 이것을 사용하는 주요 목적이다). 그런데 DateTime 타입은 조금 신경을 써줘야 한다.</p>

<p>자 그럼 서버에서 데이터를 보낼 수 있는 방법에 어떤 것이 있을까? 가장 일반적인 방법으로는 timestamp(int), string, Date가 있다. 어떤 것을 쓰더라도 무방하지만 앞서 얘기한 것처럼 GsonHttpMessageConverter를 써서 간단히 데이터를 정확한 형식으로 받는 것이 편리하기 때문에 전송시 데이터 타입을 맞추는 것이 좋다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// string 타입으로 전송</span>
</span><span class='line'><span class="nv">$date</span> <span class="o">=</span> <span class="s2">&quot;2015-09-17 10:00:00&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// int 타입으로 전송</span>
</span><span class='line'><span class="nv">$date</span> <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s2">&quot;2015-09-17 10:00:00&quot;</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">getTimestamp</span><span class="p">();</span>
</span><span class='line'><span class="c1">// Date 타입으로 전송</span>
</span><span class='line'><span class="nv">$date</span> <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s2">&quot;2015-09-17 10:00:00&quot;</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">setTimeZone</span><span class="p">(</span><span class="k">new</span> <span class="nx">\DateTimeZone</span><span class="p">(</span><span class="s1">&#39;UTC&#39;</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;Y-m-d\TH:i:s\Z&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>위의 코드를 보면 PHP에서 전송할 때 넘겨줄 데이터의 예시를 타입별로 제시했다. 앞서 강조했던대로 안드로이드 클라이언트에서 GsonHttpMessageConverter를 이용해 Date 타입으로 바로 받으려면 마지막에 있는 &ldquo;Date 타입으로 전송&rdquo; 방식을 사용하면 된다.</p>

<p>해당 부분을 보면 두가지 처리를 해주고 있다. 첫번째로 TimeZone을 설정한 것이고, 두번째로 Date Format을 지정한 것이다. 사실 이 부분들을 잘 몰라서 삽질을 조금 했었다. 처음엔 Date Format을 어떻게 전달해야할지 몰라 해맸다. 제대로 수신을 하지 못했던 것이다. Format을 맞추고 나니 이젠 보낸 시간과 받은 시간이 달랐다. 이 부분은 TimeZone의 문제이므로 TimeZone을 지정해서 해결했다. TimeZone에 사용한 UTC는 <a href="https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C">협정 세계시</a>라는 뜻이다. 이것과 세트로 format에서 끝에 \Z를 붙여 데이터가 <a href="https://ko.wikipedia.org/wiki/ISO_8601">ISO 8601</a>에 따라 UTC를 따르고 있음을 표시한 것이다.</p>

<p>결론적으로 위의 형식을 사용하면 GSON으로 바로 받아도 정확한 시간을 사용할 수 있다.</p>

<p>사실 위의 경우는 GsonHttpMessageConverter를 사용한다는 상황을 가정한 것으로 이것을 사용하지 않고 직접 데이터를 받아 GSON을 통해 파싱한다면 아래의 방법을 쓸 수도 있다. Format을 보면 알겠지만 UTC Date여야 한다(정확한 시간 처리를 위해). &ldquo;yyyy-MM-dd HH:mm:ss"이 Format을 쓸 수도 있으나 TimeZone 명시되지 않으므로 시간이 다르게 보일 수 있다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">GsonBuilder</span><span class="o">().</span><span class="na">setDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ&quot;</span><span class="o">).</span><span class="na">create</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>아래는 추가적으로 다른 타입으로 수신했을 때 안드로이드 클라이언트에서 Date 타입으로 변환하고자 할때 사용할 수 있는 참고 코드들이다.</p>

<p><strong> string 타입으로 수신시 </strong></p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">dateTime</span> <span class="o">=</span> <span class="s">&quot;2015-09-17 10:00:00&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="n">SimpleDateFormat</span> <span class="n">dateParser</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">KOREA</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Date</span> <span class="n">date</span> <span class="o">=</span> <span class="n">dateParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">dateTime</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong> timestamp(int) 타입으로 수신시 </strong></p>

<p>PHP에서의 TimeStamp는 초단위(s)지만 Java에서는 밀리초(ms) 단위이므로 1000을 곱해서 넣어 주어야 한다.
그리고 Java에서는 Date가 Deprecated되어 <a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Calendar.html">Calendar</a>를 더 권장한다고 한다. <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Date.html">정확하게는 완전히 Deprecated된 것은 아니고 일부 생성자가 그렇다는 것</a>이지만 <a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Calendar.html">Calendar</a>가 더 다양한 기능을 제공하므로 더 권장된다는 것이다. 자세한 이유는 검색해보면 많이 나온다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Calendar 사용</span>
</span><span class='line'><span class="n">Calendar</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="na">setTimeInMillis</span><span class="o">(</span><span class="n">timestamp</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">);</span>
</span><span class='line'><span class="n">Date</span> <span class="n">date</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getTime</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// OR</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Date 사용</span>
</span><span class='line'><span class="n">Date</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Date</span><span class="o">(</span><span class="n">timestamp</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[안드로이드에서 구글맵 사용시 맵의 보여지는 영역의 좌표를 원하는 pixel만큼 제외하고 가져오기]]></title>
    <link href="http://blog.asamaru.net/2015/09/17/android-google-map-getvisibleregion-toscreenlocation-toscreenlocation/"/>
    <updated>2015-09-17T14:18:50+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/17/android-google-map-getvisibleregion-toscreenlocation-toscreenlocation</id>
    <content type="html"><![CDATA[<p>이 글의 제목이 참 길고 어렵다. 나름대로 정하긴 했지만 어떻게 해야 내용을 설명할 수 있을지 잘 모르겠기에 그냥 필요한 상황을 차례로 적어보려 한다.</p>

<ol>
<li><p>안드로이드에서 구글맵을 사용하면서 현재 맵에서 보여지는 영역의 좌표를 얻고 싶을 때가 있다.
중심 좌표와 확대 비율은 center와 zoom을 통해 쉽게 구할 수 있다. 하지만 필요한 것은 보여지는 영역을 모두 포함하는 좌표들이다.
이 좌표들은 대부분 보여지는 화면 내부에 해당하는 데이터를 query 하기 위해서 사용될 것이다. 다른 경우도 당연히 있을 수 있고&hellip;</p></li>
<li><p>위의 목적대로 좌표를 가져오긴 했는데 일부 영역을 제외하고 싶을 때가 있다. 예를들어 지도 상단에 버튼들이 나열되어 있다고 가정할 때 이 영역은 query에서 제외하고 싶을 때가 해당된다. 이 문제는 간단하지가 않은게 버튼들이 차지하는 공간이야 pixel로 얼마든지 계산 가능하지만 이 pixel 사이즈를 좌표에 반영해야 원하는 값을 얻을 수 있기 때문이다.</p></li>
</ol>


<p>위의 상황들의 목적은 결국 하나다. 구글 지도에서 원하는 영역의 평면 좌표를 얻고 싶다는 것이다.</p>

<p>우선 해결 방법을 설명하기 전에 필요한 함수에 대한 설명부터 보자. 이 처리를 하기 위해 가장 중요한 요소는 Projection 이다.</p>

<h2><a href="https://developers.google.com/android/reference/com/google/android/gms/maps/Projection.html">Google APIs for Android - Projection</a></h2>

<p>위 링크를 참고하면 자세한 설명이 나와있지만 간단하게 필요한 것들에 대해서 정리하자면 다음과 같다.</p>

<h3>Projection</h3>

<blockquote><p>Projection은 화면상의 위치와 위경도 좌표(LatLng) 간의 변환하는데 사용된다. 그리고 화면의 위치는 항상 맵 화면의 좌상단(top left)을 기준으로 한다.</p></blockquote>

<h3>getVisibleRegion()</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">VisibleRegion</span> <span class="nf">getVisibleRegion</span> <span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>화면상의 좌표와 위경도 좌표 간의 변환을 위한 Projection을 가져온다.</p></blockquote>

<h3>toScreenLocation (LatLng location)</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">Point</span> <span class="nf">toScreenLocation</span> <span class="o">(</span><span class="n">LatLng</span> <span class="n">location</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>인자로 넘겨준 위경도 좌표가 화면 상에서 어디에 위치하는지를 Point 객체로 반환해 준다. 반환되는 단위는 화면 상의 Pixel(화소가 아닌)이다.</p></blockquote>

<h3>fromScreenLocation (Point point)</h3>

<p>public LatLng fromScreenLocation (Point point)</p>

<blockquote><p>인자로 넘겨준 화면 상의 좌표에 해당하는 위경도를 LatLng 객체로 반환해 준다.</p></blockquote>

<h2>구현</h2>

<p>위와 같이 기본적인 함수들에 대해서 알아보았고 이제는 실제 사용 사례를 살펴보자.</p>

<p>아래는 서두에 얘기한 기능을 수행하게 하기 위해 만들어 본 함수이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">LatLngBounds</span> <span class="nf">getBoundsWithoutSpacing</span><span class="o">(</span><span class="kt">int</span> <span class="n">top</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">,</span> <span class="kt">int</span> <span class="n">bottom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Projection</span> <span class="n">projection</span> <span class="o">=</span> <span class="n">googleMap</span><span class="o">.</span><span class="na">getProjection</span><span class="o">();</span>
</span><span class='line'>  <span class="n">LatLngBounds</span> <span class="n">bounds</span> <span class="o">=</span> <span class="n">projection</span><span class="o">.</span><span class="na">getVisibleRegion</span><span class="o">().</span><span class="na">latLngBounds</span><span class="o">;</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">northeast</span> <span class="o">=</span> <span class="n">projection</span><span class="o">.</span><span class="na">toScreenLocation</span><span class="o">(</span><span class="n">bounds</span><span class="o">.</span><span class="na">northeast</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">toNortheast</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Point</span><span class="o">(</span><span class="n">northeast</span><span class="o">.</span><span class="na">x</span> <span class="o">-</span> <span class="n">right</span><span class="o">,</span> <span class="n">northeast</span><span class="o">.</span><span class="na">y</span> <span class="o">+</span> <span class="n">top</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">southwest</span> <span class="o">=</span> <span class="n">projection</span><span class="o">.</span><span class="na">toScreenLocation</span><span class="o">(</span><span class="n">bounds</span><span class="o">.</span><span class="na">southwest</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">toSouthwest</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Point</span><span class="o">(</span><span class="n">southwest</span><span class="o">.</span><span class="na">x</span> <span class="o">+</span> <span class="n">left</span><span class="o">,</span> <span class="n">southwest</span><span class="o">.</span><span class="na">y</span> <span class="o">-</span> <span class="n">bottom</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">LatLngBounds</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLngBounds</span><span class="o">.</span><span class="na">Builder</span><span class="o">();</span>
</span><span class='line'>  <span class="n">builder</span><span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="n">projection</span><span class="o">.</span><span class="na">fromScreenLocation</span><span class="o">(</span><span class="n">toNortheast</span><span class="o">));</span>
</span><span class='line'>  <span class="n">builder</span><span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="n">projection</span><span class="o">.</span><span class="na">fromScreenLocation</span><span class="o">(</span><span class="n">toSouthwest</span><span class="o">));</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>설명하자면 다음과 같다.</p>

<p>우선 googleMap 개체에서 Projection을 가져와서 VisibleRegion을 통해 좌표를 받아온다. 당연히 googleMap은 따로 구성되어 있어야 한다. 함수를 고쳐서 인자로 넘겨주어도 당연히 상관없다.
getVisibleRegion()에서 latLngBounds를 받아오면 위경도 좌표의 bound를 알 수 있는데 사용할 수 있는 값은 두가지다. northeast(북동좌표)와 southwest(서남좌표)다. 이 두점은 bound의 최외곽 좌표이므로 전체 박스 영역을 얻은 것이다.</p>

<p>1차적으로는 이 값을 바로 사용해서 원하는 영역에 대한 검색을 수행할 수 있다.</p>

<p>하지만 정말로 원하는 것은 두번째 문제이다. 이 좌표에서 화면의 특정 영역을 제외한 부분의 위경도 bound를 구하고 싶은 것이다.</p>

<p>원하는 결과를 얻기 위해 toScreenLocation() 함수를 이용해서 북동,서남 좌표를 화면 상의 좌표(Point)로 변환한다. 여기에 원하는 pixel만큼씩을 증감하여 fromScreenLocation() 함수를 통해 다시 위경도 좌표(LatLng)로 변환하면 최종적인 결과를 얻을 수 있다.</p>

<p>사실 결과를 보면 아주 간단한 작업이다. 하지만 이 함수들의 역할을 모를때는 어떻게 그 값을 구할 수 있을지 막막했다. 처음엔 구글의 zoom 레벨을 가져와서 pixel 비율을 계산하여 적용하려고 했으나 만만치 않았다.</p>

<p>결론은 위의 함수를 바탕으로 원하는 목적을 달성할 수 있으니 필요에 맞게 사용하면 된다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySql에서 숫자로 시작하는 문자열의 정렬 문제]]></title>
    <link href="http://blog.asamaru.net/2015/09/17/sort-of-strings-that-start-with-numbers-in-mysql/"/>
    <updated>2015-09-17T07:29:04+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/17/sort-of-strings-that-start-with-numbers-in-mysql</id>
    <content type="html"><![CDATA[<p>[100A, 9B, 10C] 와 같은 문자열의 배열을 정렬한다고 가정하자. 인간이 생각할 때 바른 정렬 결과는 [9B, 10C, 100A]일 것이다.(사람에 따라 다를 수는 있지만 나는 이렇게 되길 원한다.)
그런데 이 문제를 프로그램에서 처리하려고 그냥 정렬을 수행한다면 어떤 결과가 나올까?</p>

<p>결과는 [100A, 10C, 9B] 이다. 간단히 결과를 확인하기 위해 php에서 돌려본 결과이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;100A&#39;</span><span class="p">,</span> <span class="s1">&#39;9B&#39;</span><span class="p">,</span> <span class="s1">&#39;10C&#39;</span><span class="p">];</span>
</span><span class='line'><span class="nb">sort</span><span class="p">(</span><span class="nv">$a</span><span class="p">);</span>
</span><span class='line'><span class="nb">print_r</span><span class="p">(</span><span class="nv">$a</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 실행 결과</span>
</span><span class='line'><span class="k">Array</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="nx">A</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="nx">C</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">9</span><span class="nx">B</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>왜 이런 정렬 결과가 나올까? 어떻게보면 당연할 결과이다. 프로그램에서는 숫자든 문자든 문자열 내부에서는 숫자 코드로 처리된다. 그러므로 맨 첫자리 문자부터 비교를 시작하여 차례로 정렬하므로 1로 시작하는 문자열이 처음으로 들어온다. 100A, 10C 두 문자열을 비교하자면 셋째자리에서 0과 C가 비교되어 0을 가진 100A가 먼저 들어가게 된다.</p>

<p>그럼 인간이 생각하는 것처럼 정렬되게 하려면 어떻게 할까? 복잡하게 생각하자면 한도 끝도 없이 복잡할 수 있지만 간단하게 생각하자면 비교되어야 할 문자의 위치를 맞추어주면 원하는 결과를 얻을 수 있다.</p>

<p>다른 언어나 상황에서도 마찬가지 방법으로 적용할 수 있지만 이번엔 MySql에서 정렬시 이 부분이 필요했기 때문에 MySql에서 사용한 방법을 아래에 적는다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span><span class="p">,</span> <span class="nf">LPAD</span><span class="p">(</span><span class="n">strField</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">as</span> <span class="n">strFieldOrder</span> <span class="k">FROM</span> <span class="n">table1</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">strFieldOrder</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>여기서 주의할 것은 7이라는 부분을 데이터의 길이가 모두 포함될 수 있는 적절한 값으로 지정해야 한다는 것이다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySql에서 folat 필드 동일값 비교]]></title>
    <link href="http://blog.asamaru.net/2015/09/16/check-for-equality-on-a-mysql-float-field/"/>
    <updated>2015-09-16T18:09:56+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/16/check-for-equality-on-a-mysql-float-field</id>
    <content type="html"><![CDATA[<p>이번에 작업하면서 mysql의 float 필드를 사용할 일이 있었다. 사실 오랜기간동안 mysql을 사용해 오면서 float 필드를 사용해 본 적이 많지 않았고 float 필드를 범위 검사가 아닌 동일값 검사를 할일이 없었다.</p>

<p>이번 작업에서는 float 필드의 동일값 검사를 하면서 당연히 아래와 같이 query를 만들면 될 줄 알았다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">TABLE1</span> <span class="k">WHERE</span> <span class="n">FloatField</span> <span class="o">=</span> <span class="mi">10</span><span class="p">.</span><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>그런데 분명 동일한 값이 있음에도 불구하고 검색된 결과가 없었다. 처음엔 어의가 없었다. 당연히 동일한 값이 있는데 왜 검색이 되지 않을까?
그래서 구글에서 검색을 해보니 float 필드는 &ldquo;="을 이용한 동일값 검사를 할 수 없었다. 아래는 float 필드의 동일값 검사를 하는 예시다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">TABLE1</span> <span class="k">WHERE</span> <span class="nf">ABS</span><span class="p">(</span><span class="n">FloatField</span> <span class="o">-</span> <span class="mi">10</span><span class="p">.</span><span class="mi">1</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="n">e</span><span class="o">-</span><span class="mi">6</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>아.. 이런 웬 해괴망측한 방법이란 말인가? 사실 여러글에서 보면 문자열로 Casting(변환)해서 검사하는 방법 등도 있었다.</p>

<p>MySql 사이트에서 보면 <a href="https://dev.mysql.com/doc/refman/5.0/en/problems-with-float.html">B.5.5.8 Problems with Floating-Point Values</a> 이라는 글이 있다.</p>

<p>첫줄에 설명된 것과 같이 mysql에서는 부동 소수점을 정확한 값으로 저장하지 않기 때문에 내부적으로 나타내는 값이 동일하지 않을 수 있다고 되어 있다.</p>

<p>원인은 설명되어 있지만 사실 왜 이래야만 하는 것인지 이해는 잘되지 않는다. 원래 부동 소수점에 대한 문제는 여러 프로그램에서 있는 문제이긴하나 mysql에서도 이 문제가 있을 줄은 생각하지 못했다.</p>

<p>어쨌든 보다 다양한 예시와 설명은 위에 링크한 mysql 메뉴얼을 참고하면 된다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript 국제화(I18N) 라이브러리 - i18next]]></title>
    <link href="http://blog.asamaru.net/2015/09/15/internationalization-i18n-for-javascript-i18next/"/>
    <updated>2015-09-15T19:02:43+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/15/internationalization-i18n-for-javascript-i18next</id>
    <content type="html"><![CDATA[<h2>국제화(internationalization : i18n)의 의미</h2>

<p>국제화는 <a href="http://www.terms.co.kr/internationalization.htm">텀즈</a>의 정의에 따르면 아래와 같다.</p>

<p>국제화는 때로 줄여서 그저 &ldquo;I18N"이라고도 표기하는데, 그 의미는 이 용어의 영어 표기에서 첫 글자인 "I"자와 마지막 글자인 "N"의 사이에 18글자가 들어가 있다는 의미이다. 국제화는 제품이나 서비스를 특정지역의 언어나 문화에 맞추는, 즉 현지화라고 불리는 과정을 쉽게 할 수 있도록 계획하거나 이행하는 과정을 말한다. 국제화는 때로 번역 및 현지화 능력부여 작업이라고도 불리는데, 여기에는 다음과 같은 것들이 포함된다.</p>

<ul>
<li>하드웨어 레이블이나, 도움말 페이지, 그리고 온라인 메뉴 등 사용자 인터페이스를 설계할 때, 더 많은 수의 글자가 들어갈 때를 대비하여 여유를 둔다.</li>
<li>웹에디터나 저작도구 등과 같은 제품을 개발할 때 국제 문자셋, 즉 유니코드를 지원할 수 있게 한다.</li>
<li>인쇄용 그래픽 이미지나, 웹사이트를 만들어서 텍스트 레이블을 번역할 때 비용이 많이 들지 않게 한다.</li>
<li>전세계적으로 통용될 수 있는 예시를 사용한다.</li>
<li>소프트웨어의 경우에는, 메시지들이 영어와 같은 단일 바이트 문자 코드에서, 한글과 같은 다중 바이트 문자 코드로 변환될 수 있도록 데이터 공간을 확보한다.</li>
</ul>


<p>위키피디아에는 <a href="https://ko.wikipedia.org/wiki/%EA%B5%AD%EC%A0%9C%ED%99%94%EC%99%80_%EC%A7%80%EC%97%AD%ED%99%94">&ldquo;국제화와 지역화&rdquo;</a>라는 주제로 설명되어 있기도 하다.</p>

<h2>i18next</h2>

<ul>
<li>공식 사이트 : <a href="http://i18next.com/">http://i18next.com/</a></li>
<li>Github : <a href="https://github.com/i18next/i18next">https://github.com/i18next/i18next</a></li>
<li>CDN : <a href="http://cdnjs.com/libraries/i18next">http://cdnjs.com/libraries/i18next</a></li>
<li>i18next-node : <a href="https://github.com/i18next/i18next-node">https://github.com/i18next/i18next-node</a></li>
</ul>


<p>i18next는 위에 설명한 i18n을 자바스크립트 상에서 사용할 수 있도록 제작된 라이브러리다. 아주 다양한 형태로의 사용을 지원하는데 사용해본 결과 메뉴얼이 조금 부실(?)하다. 확인해보면 메뉴얼의 양이 적은 건 아니다. 하지만 워낙 다양하게 지원하다 보니 개별적인 설명이 부족한 감이 든다.</p>

<p>이번에 다국어용 one page 앱을 제작하면서 영어와 한국어를 지원하기 위해 사용하게되었는데 조금 해멨다. 사실 아직도 자유자재로 사용하지는 못하겠다. 하지만 아주 다양한 형태를 지원하므로 필요한 형태를 메뉴얼을 참고하여 사용한다면 유용하게 사용할 수 있을 것으로 생각한다.</p>

<h3>사용예시</h3>

<p>아래는 내가 작업한 일부를 간단하게 요약한 것이다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;translation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:void(0);&quot;</span> <span class="na">onclick=</span><span class="s">&quot;changeLang(&#39;en-US&#39;);&quot;</span><span class="nt">&gt;</span>영어<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:void(0);&quot;</span> <span class="na">onclick=</span><span class="s">&quot;changeLang(&#39;ko-KR&#39;);&quot;</span><span class="nt">&gt;</span>한국어<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;A:apple&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;A:banana&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;A:orange&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;B:car&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;B:airplane&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">data-i18n=</span><span class="s">&quot;B:bicycle&quot;</span><span class="nt">&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;https://code.jquery.com/jquery-2.1.4.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/i18next/1.9.0/i18next.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">i18n</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
</span><span class='line'>      <span class="c1">//lng: &#39;en-US&#39;,</span>
</span><span class='line'>      <span class="nx">lng</span><span class="o">:</span> <span class="s1">&#39;ko-KR&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">useLocalStorage</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">localStorageExpirationTime</span><span class="o">:</span> <span class="mi">86400000</span><span class="p">,</span> <span class="c1">// in ms, default 1 week</span>
</span><span class='line'>      <span class="nx">ns</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">namespaces</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;A&#39;</span><span class="p">,</span> <span class="s1">&#39;B&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">defaultNs</span><span class="o">:</span> <span class="s1">&#39;A&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="c1">//resGetPath: &#39;js/locales/translation.json&#39;</span>
</span><span class='line'>      <span class="nx">resStore</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;en-US&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;A&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s2">&quot;apple&quot;</span><span class="o">:</span> <span class="s2">&quot;Apple&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;banana&quot;</span><span class="o">:</span> <span class="s2">&quot;Banana&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;orange&quot;</span><span class="o">:</span> <span class="s2">&quot;Orange&quot;</span>
</span><span class='line'>              <span class="p">},</span>
</span><span class='line'>              <span class="s2">&quot;B&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s2">&quot;car&quot;</span><span class="o">:</span> <span class="s2">&quot;Car&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;airplane&quot;</span><span class="o">:</span> <span class="s2">&quot;Airplane&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;bicycle&quot;</span><span class="o">:</span> <span class="s2">&quot;Bicycle&quot;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s2">&quot;ko-KR&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;A&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s2">&quot;apple&quot;</span><span class="o">:</span> <span class="s2">&quot;사과&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;banana&quot;</span><span class="o">:</span> <span class="s2">&quot;바나나&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;orange&quot;</span><span class="o">:</span> <span class="s2">&quot;오렌지&quot;</span>
</span><span class='line'>              <span class="p">},</span>
</span><span class='line'>              <span class="s2">&quot;B&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s2">&quot;car&quot;</span><span class="o">:</span> <span class="s2">&quot;자동차&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;airplane&quot;</span><span class="o">:</span> <span class="s2">&quot;비행기&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s2">&quot;bicycle&quot;</span><span class="o">:</span> <span class="s2">&quot;자전거&quot;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.translation&#39;</span><span class="p">).</span><span class="nx">i18n</span><span class="p">();</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">changeLang</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">lang</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">.</span><span class="nx">i18n</span><span class="p">.</span><span class="nx">setLng</span><span class="p">(</span><span class="nx">lang</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.translation&#39;</span><span class="p">).</span><span class="nx">i18n</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>위의 예시는 jquery와 함께 사용하는 예시이지만 jquery에 대한 의존성을 가진 것은 아니다. <a href="http://cdnjs.com/libraries/i18next">CDN</a> 목록에서 보여지는 것과 같이 amd, commonjs, 기본 등 여러가지 환경에서 사용 가능하다.</p>

<p>여러번 얘기하게되지만 사용방법이 너무 다양하다. 그래서 위의 예시를 기준으로 몇가지 옵션만 설명하겠다. 보다 다양한 사용법은 제작 사이트의 <a href="http://i18next.com/pages/doc_init.html">메뉴얼</a>과 <a href="http://i18next.com/pages/sample.html">샘플</a>을 참고하자.</p>

<ul>
<li><strong>lng</strong> : 기본 언어를 지정한다. 위의 예시처럼 setLng 함수를 통해 언제든 변경할 수 있다.</li>
<li><strong>debug</strong> : true로 설정시 내부적인 처리에 관련되 log를 확인할 수 있다.</li>
<li><strong>useLocalStorage</strong> : true로 설정시 local storage에 내용을 저장하여 향후 재사용할 수 있도록 한다. 이 예시에서는 resStore를 사용해서 언어 설정을 했기 때문에 의미가 없지만 서버에서 언어 정보를 받아와서 사용하는 경우에는 성능에 이점을 얻을 수 있다.</li>
<li><strong>localStorageExpirationTime</strong> : local storage에 저장된 데이터에 유효기간을 설정한다. 단위는 ms이며 기본값은 1주일이다.</li>
<li><strong>ns</strong> : 사용할 Namespace를 정의한다. 필수는 아니며 필요시에만 사용하면 된다. Namespace의 구분은 ::로 한다.(예시 : &ldquo;A::apple&rdquo;)</li>
<li><strong>resStore</strong> : i18n에 사용될 데이터를 설정한다.</li>
<li><strong>resGetPath</strong> : i18n에서 사용할 데이터를 서버에서 요청할 경우 경로를 구성하는 방법을 정의한다. <code>'locales/__lng__/__ns__.json'</code> 이런 형식을 쓸 수 있는데 <code>__lng__</code>는 언어명으로 <code>__ns__</code>는 Namespace로 대체된다.</li>
</ul>


<p>그 외에도 다양한 옵션이 있을 뿐 아니라 여러가지 상황에 대입해서 사용할 수 있다. 위의 예시는 html에 data attribute를 사용하는 것을 예를 들었지만 js에서 직접적으로 데이터를 받아서 사용할 수도 있고, sprintf 등과 같이 데이터를 데입해서 내용을 생성하는 것도 가능하다.
게다가 handlebars, angular, JQuery UI에서 template에 적용시킬 수도 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP에서 soundex / metaphone key 구하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/14/soundex-slash-metaphone-key-in-php/"/>
    <updated>2015-09-14T21:19:33+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/14/soundex-slash-metaphone-key-in-php</id>
    <content type="html"><![CDATA[<p>앞선 포스팅에서 <a href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-levenshtein/">levenshtein()</a> 함수, <a href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-similar-text">similar_text()</a>에 대해 알아보았다.
이런 문자열 비교 함수는 아니지만 문자열의 soundex key를 구하여 발음이 유사한 단어들을 찾을 수 있도록 도와주는 soundex() 함수와 이보다 더 정확한 결과를 반환한다고 하는 metaphone() 함수에 대해서 알아보자.</p>

<h2>soundex란?</h2>

<blockquote><p>Soundex란 발음이 유사한 서로다른 철자의 단어를 그룹화하여 철자 입력 오류를 보정하기 위한 색인시스템으로 초기에는 주로 사람이름을 검색하기 위한 용도로 사용되었으나 인터넷 검색이 활성화되면서 다양한 분야에서 응용되고 있다. 대표적인 Soundex Appliation은 “US Bureau of the Censu s”의 것이며, AT&amp;T의 Standard soundex algorithm도 있다.
(츨처 : <a href="http://www.nicklib.com/nlp/2297">http://www.nicklib.com/nlp/2297</a>)</p></blockquote>

<h2><a href="http://php.net/manual/en/function.soundex.php">soundex()</a> 함수</h2>

<p><a href="http://php.net/manual/en/function.soundex.php">php 메뉴얼의 설명</a>에 따르면 soundex() 함수는 발음이 유사한 단어들이 같은 soundex 키를 생성하므로, 발음은 알고 있지만 스펠은 모르는 단어를 데이터베이스에서 쉽게 찾을 수 있다. soundex 함수는 문자로 시작하는 4문자 문자열을 반환한다.</p>

<p>이 soundex 함수는 &ldquo;The Art Of Computer Programming, vol. 3: Sorting And Searching&rdquo;, Addison-Wesley (1973), 391-392쪽에서 Donald Knuth가 기술한 것이다.</p>

<h3>기본 사용법</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">string</span> <span class="nb">soundex</span> <span class="p">(</span> <span class="nx">string</span> <span class="nv">$str</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>함수 인자</h3>

<h4>str</h4>

<p>입력 문자열</p>

<h3>반환값</h3>

<p>soundex 키를 문자열로 반환한다.</p>

<h3>예시</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Euler&quot;</span><span class="p">)</span>       <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Ellery&quot;</span><span class="p">);</span>    <span class="c1">// E460</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Gauss&quot;</span><span class="p">)</span>       <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Ghosh&quot;</span><span class="p">);</span>     <span class="c1">// G200</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Hilbert&quot;</span><span class="p">)</span>     <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Heilbronn&quot;</span><span class="p">);</span> <span class="c1">// H416</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Knuth&quot;</span><span class="p">)</span>       <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Kant&quot;</span><span class="p">);</span>      <span class="c1">// K530</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Lloyd&quot;</span><span class="p">)</span>       <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Ladd&quot;</span><span class="p">);</span>      <span class="c1">// L300</span>
</span><span class='line'><span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Lukasiewicz&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="nb">soundex</span><span class="p">(</span><span class="s2">&quot;Lissajous&quot;</span><span class="p">);</span> <span class="c1">// L222</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://php.net/manual/en/function.metaphone.php">metaphone()</a> 함수</h2>

<p><a href="http://php.net/manual/en/function.metaphone.php">php 메뉴얼의 설명</a>에 따르면 metaphone() 함수는 soundex()처럼 유사한 발음의 단어에 대해 동일한 키를 생성다. 이 함수는 영어 발음의 기본 법칙을 사용하는 soundex()보다 훨씬 정확하다. 메타폰 생성 키는 가변 길이를 가진다.</p>

<p>metaphone은 Lawrence Philips <lphilips at verity dot com>가 개발하였였고 이는 [&ldquo;Practical Algorithms for Programmers&rdquo;, Binstock &amp; Rex, Addison Wesley, 1995]에 수록되어 있다.</p>

<h3>기본 사용법</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">string</span> <span class="nb">metaphone</span> <span class="p">(</span> <span class="nx">string</span> <span class="nv">$str</span> <span class="p">[,</span> <span class="nx">int</span> <span class="nv">$phonemes</span> <span class="p">]</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>함수 인자</h3>

<h4>str</h4>

<p>입력 문자열.</p>

<h4>phonemes</h4>

<p>이 매개 변수는 음소 문자로 반환된 metaphone key의 길이를 제한한다. 0이 디폴트 값으로 제한하지 않음을 의미한다.</p>

<h3>반환값</h3>

<p>메타폰 키를 문자열로 반환한다.</p>

<h2>응용 아이디어</h2>

<p>알파벳 문자열의 유사도를 개선하는데에 응용할 수도 있을 것 같다. 문자열을 soundex나 metaphone key로 변환하여 문자열 유사도를 비교하면 조금 더 개선된 유사도를 구할 수 있을 것 같다. 정확히는 다른 의미가 되지만 발음이 유사한 문장을 유사 문장으로 인정하는 효과를 얻을 수 있을 것이다.</p>

<p>사실 중요한 문제는 soundex나 metaphone 뿐만 아니라 Double Metaphone, Caverphone 같은 알고리즘은 알파벳 문자에 대한 음성 특징을 추출하는 것으로 한글에는 사용할 수 없다. 하지만 한글을 초/중/종성으로 분리하고 발음 기호로 변환하는 부분을 추가 처리하면 한글에도 응용할 수 있을 것으로 보인다.</p>

<p>게대가 한글을 영어 발음으로 변환하는 오픈소스들도 찾아보니 있다.(<a href="https://metacpan.org/pod/Lingua::KO::Munja">https://metacpan.org/pod/Lingua::KO::Munja</a>)</p>

<p>추후에 기회가 된다면 직접 구현 해봐야겠다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP에서 두 문자열의 거리(유사도) 구하기 - similar_text()]]></title>
    <link href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-similar-text/"/>
    <updated>2015-09-14T20:13:22+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-similar-text</id>
    <content type="html"><![CDATA[<p>앞선 포스팅 <a href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-levenshtein/">PHP에서 두 문자열의 거리(유사도) 구하기 - levenshtein()</a>에서 levenshtein() 함수에 대해 알아보았다. 이번엔 이와 유사한 함수인 similar_text()에 대해 알아보고자 한다.</p>

<h2><a href="http://php.net/manual/en/function.similar-text.php">similar_text()</a> 함수</h2>

<p><a href="http://php.net/manual/en/function.similar-text.php">php 메뉴얼의 설명</a>에 따르면 similar_text() 함수는 두 문자열의 유사도를 계산한다고 되어 있다.</p>

<p>두 문자열의 유사도를 이 계산은 Programming Classics: Implementing the World&rsquo;s Best Algorithms by Oliver (ISBN 0-131-00413-1) 에서 설명되어 있다. 이 구현은 pseudo code와 다르게 스택은 아니지만, 재귀 호출이므로 전체 프로세스의 속도에 영향을 줄 수 있다. 이 계산 알고리즘은 시간복잡도 <code>O(N**3)</code>를 가지며 여기서 N은 두 문자열 중 긴 문자열의 길이를 뜻한다.</p>

<p>문자열의 길이에 따라 성능이 극도로 떨어질 수 있으므로 가급적 짧은 문장의 비교에 사용하는 것이 좋다. 메뉴얼에서 paul은 20000자 이상에서만 성능에 문제가 있었다고는 하나 시간복잡도를 보더라도 긴 문자열은 자제하는게 좋겠다.</p>

<h3>기본 사용법</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">int</span> <span class="nb">similar_text</span> <span class="p">(</span> <span class="nx">string</span> <span class="nv">$first</span> <span class="p">,</span> <span class="nx">string</span> <span class="nv">$second</span> <span class="p">[,</span> <span class="nx">float</span> <span class="o">&amp;</span><span class="nv">$percent</span> <span class="p">]</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>함수 인자</h3>

<h4>first</h4>

<p>첫번째 문자열</p>

<h4>second</h4>

<p>두번째 문자열</p>

<h4>percent</h4>

<p>reference로 넘겨져야하는 세번째 인자는 similar_text() 함수의 계산 결과인 문서 유사도를 퍼센트(%)로 제공해 준다.</p>

<h3>반환값</h3>

<p>두 문자열에서 매칭되는 문자수를 반환한다.</p>

<h3>예시</h3>

<p>이 함수는 몇가지 특성을 가지고 있으므로 메뉴얼에 안내되어 있는 아래의 예시들을 통해 차이를 알고 사용해야 한다.</p>

<h4>인자의 입력 순서에 따라 결과가 달라진다.</h4>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$var_1</span> <span class="o">=</span> <span class="s1">&#39;PHP IS GREAT&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$var_2</span> <span class="o">=</span> <span class="s1">&#39;WITH MYSQL&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">similar_text</span><span class="p">(</span><span class="nv">$var_1</span><span class="p">,</span> <span class="nv">$var_2</span><span class="p">,</span> <span class="nv">$percent</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nv">$percent</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 27.272727272727</span>
</span><span class='line'>
</span><span class='line'><span class="nb">similar_text</span><span class="p">(</span><span class="nv">$var_2</span><span class="p">,</span> <span class="nv">$var_1</span><span class="p">,</span> <span class="nv">$percent</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nv">$percent</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 18.181818181818</span>
</span></code></pre></td></tr></table></div></figure>


<h4>공백은 비교에서 제외된다.(그렇다고 trim이 되거나 문자열 내 공백이 제거되고 비교하는 것은 아니다.)</h4>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">similar_text</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$sim</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot; -&gt; &quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$sim</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">similar_text</span><span class="p">(</span><span class="s2">&quot;ab c&quot;</span><span class="p">,</span> <span class="s2">&quot;abc&quot;</span><span class="p">,</span> <span class="nv">$sim</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot; -&gt; &quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$sim</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">similar_text</span><span class="p">(</span><span class="s2">&quot; abc&quot;</span><span class="p">,</span> <span class="s2">&quot;abc&quot;</span><span class="p">,</span> <span class="nv">$sim</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot; -&gt; &quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$sim</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 결과</span>
</span><span class='line'><span class="c1">// 0 -&gt; 0</span>
</span><span class='line'><span class="c1">// 3 -&gt; 85.714285714286</span>
</span><span class='line'><span class="c1">// 3 -&gt; 85.714285714286</span>
</span></code></pre></td></tr></table></div></figure>


<h4>대소문자를 구분한다.</h4>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$var1</span> <span class="o">=</span> <span class="s1">&#39;Hello&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$var2</span> <span class="o">=</span> <span class="s1">&#39;Hello&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$var3</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nb">similar_text</span><span class="p">(</span><span class="nv">$var1</span><span class="p">,</span> <span class="nv">$var2</span><span class="p">);</span>  <span class="c1">// 5</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">similar_text</span><span class="p">(</span><span class="nv">$var1</span><span class="p">,</span> <span class="nv">$var3</span><span class="p">);</span>  <span class="c1">// 4</span>
</span></code></pre></td></tr></table></div></figure>


<h3>유사함수</h3>

<p>비슷한 역할을 하는 함수에 대해 알고 싶다면 아래의 포스팅을 참고하자.</p>

<ul>
<li><a href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-levenshtein/">PHP에서 두 문자열의 거리(유사도) 구하기 - levenshtein()</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP에서 두 문자열의 거리(유사도) 구하기 - levenshtein()]]></title>
    <link href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-levenshtein/"/>
    <updated>2015-09-14T20:12:59+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-levenshtein</id>
    <content type="html"><![CDATA[<p>php 프로그램 개발중 문자열의 유사도를 계산해야 할 일이 생겼다. 그래서 찾다보니 php 내장 함수에 해당 기능이 이미 구현되어 있었다. 비슷한 함수가 몇가지 존재하고 있어서 조금 더 자세히 알아 보았다.</p>

<h2><a href="http://php.net/manual/en/function.levenshtein.php">levenshtein()</a> 함수</h2>

<p>위키피디아에 <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Levenshtein distance</a>에 대한 상세한 설명이 나와있다.</p>

<p><a href="http://php.net/manual/en/function.levenshtein.php">php 메뉴얼의 설명</a>에 따르면 Levenshtein distance는 문자열1을 문자열2로 변환하는데 필요한 최소한의 치환, 추가, 삭제의 횟수를 나타낸다고 되어 있다. 이 알고리즘의 시간복잡도는 <code>O(m*n)</code>이며, 여기서 m과 n은 str1, str2의 각각의 길이다. 비슷한 함수인 <a href="http://php.net/manual/en/function.similar-text.php">similar_text()</a>가 가지는 시간 복잡도 <code>O(max(n,m)**3)</code>에 비해서는 덜하지만 그래도 비싼 처리 비용이 든다.</p>

<p>함수의 기본형 사용시 위의 설명대로 변환에 필요한 최소한의 치환, 추가, 삭제의 횟수를 계산하지만 추가 인자를 사용하면 각 변환에 필요한 비용을 지정할 수 있다. 이것은 더 일반적이고 적용성이 높지만 효율적이지 못하다.</p>

<h3>기본 사용법</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">int</span> <span class="nb">levenshtein</span> <span class="p">(</span> <span class="nx">string</span> <span class="nv">$str1</span> <span class="p">,</span> <span class="nx">string</span> <span class="nv">$str2</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>확장 사용법</h3>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">int</span> <span class="nb">levenshtein</span> <span class="p">(</span> <span class="nx">string</span> <span class="nv">$str1</span> <span class="p">,</span> <span class="nx">string</span> <span class="nv">$str2</span> <span class="p">,</span> <span class="nx">int</span> <span class="nv">$cost_ins</span> <span class="p">,</span> <span class="nx">int</span> <span class="nv">$cost_rep</span> <span class="p">,</span> <span class="nx">int</span> <span class="nv">$cost_del</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>함수 인자</h3>

<h4>str1</h4>

<p>Levenshtein distance를 계산할 문자열1</p>

<h4>str2</h4>

<p>Levenshtein distance를 계산할 문자열2</p>

<h4>cost_ins</h4>

<p>문자 추가 비용(가중치)</p>

<h4>cost_rep</h4>

<p>문자 치환 비용(가중치)</p>

<h4>cost_del</h4>

<p>문자 삭제 비용(가중치)</p>

<h3>반환값</h3>

<p>두 문자열의 Levenshtein-Distance 반환한다. 단, 입력된 두 문자열 중 하나라도 255 글자를 넘는다면 -1을 반환한다.</p>

<h3>예시</h3>

<p>메뉴얼에 나와 있는 예시 중 UTF-8 인코딩에 관련된 문제와 해결방법이 나와있어서 그 예시를 제시한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">levenshtein</span><span class="p">(</span><span class="s1">&#39;notre&#39;</span><span class="p">,</span> <span class="s1">&#39;votre&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nb">levenshtein</span><span class="p">(</span><span class="s1">&#39;notre&#39;</span><span class="p">,</span> <span class="s1">&#39;nôtre&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 결과</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 2</span>
</span></code></pre></td></tr></table></div></figure>


<p>위의 결과를 보면 의아할 수 있다. 분명 두 예시 모두에서 글자가 하나씩 다르므로 결과가 1과 1이 나올 것이라고 예상되지만 결과는 1과 2가 나왔다. 이유는 UTF-8문자열 때문이다. 이를 개선하는 함수의 예시는 다음과 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="c1">// Convert an UTF-8 encoded string to a single-byte string suitable for</span>
</span><span class='line'><span class="c1">// functions such as levenshtein.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// The function simply uses (and updates) a tailored dynamic encoding</span>
</span><span class='line'><span class="c1">// (in/out map parameter) where non-ascii characters are remapped to</span>
</span><span class='line'><span class="c1">// the range [128-255] in order of appearance.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// Thus it supports up to 128 different multibyte code points max over</span>
</span><span class='line'><span class="c1">// the whole set of strings sharing this encoding.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="k">function</span> <span class="nf">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$map</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// find all multibyte characters (cf. utf-8 encoding specs)</span>
</span><span class='line'>    <span class="nv">$matches</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">preg_match_all</span><span class="p">(</span><span class="s1">&#39;/[\xC0-\xF7][\x80-\xBF]+/&#39;</span><span class="p">,</span> <span class="nv">$str</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">))</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$str</span><span class="p">;</span> <span class="c1">// plain ascii string</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// update the encoding map with the characters not already met</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$matches</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">as</span> <span class="nv">$mbc</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$map</span><span class="p">[</span><span class="nv">$mbc</span><span class="p">]))</span>
</span><span class='line'>            <span class="nv">$map</span><span class="p">[</span><span class="nv">$mbc</span><span class="p">]</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">(</span><span class="mi">128</span> <span class="o">+</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$map</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// finally remap non-ascii characters</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">strtr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span> <span class="nv">$map</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Didactic example showing the usage of the previous conversion function but,</span>
</span><span class='line'><span class="c1">// for better performance, in a real application with a single input string</span>
</span><span class='line'><span class="c1">// matched against many strings from a database, you will probably want to</span>
</span><span class='line'><span class="c1">// pre-encode the input only once.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="k">function</span> <span class="nf">levenshtein_utf8</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$s2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$charMap</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$s1</span> <span class="o">=</span> <span class="nx">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$charMap</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$s2</span> <span class="o">=</span> <span class="nx">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$s2</span><span class="p">,</span> <span class="nv">$charMap</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">levenshtein</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$s2</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>위의 함수를 이용해서 처음 예시를 다시 실행해보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">function</span> <span class="nf">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$map</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$matches</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">preg_match_all</span><span class="p">(</span><span class="s1">&#39;/[\xC0-\xF7][\x80-\xBF]+/&#39;</span><span class="p">,</span> <span class="nv">$str</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">))</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$str</span><span class="p">;</span> <span class="c1">// plain ascii string</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$matches</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">as</span> <span class="nv">$mbc</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$map</span><span class="p">[</span><span class="nv">$mbc</span><span class="p">]))</span>
</span><span class='line'>            <span class="nv">$map</span><span class="p">[</span><span class="nv">$mbc</span><span class="p">]</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">(</span><span class="mi">128</span> <span class="o">+</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$map</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">strtr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span> <span class="nv">$map</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">levenshtein_utf8</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$s2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$charMap</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$s1</span> <span class="o">=</span> <span class="nx">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$charMap</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$s2</span> <span class="o">=</span> <span class="nx">utf8_to_extended_ascii</span><span class="p">(</span><span class="nv">$s2</span><span class="p">,</span> <span class="nv">$charMap</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">levenshtein</span><span class="p">(</span><span class="nv">$s1</span><span class="p">,</span> <span class="nv">$s2</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nx">levenshtein_utf8</span><span class="p">(</span><span class="s1">&#39;notre&#39;</span><span class="p">,</span> <span class="s1">&#39;votre&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nx">levenshtein_utf8</span><span class="p">(</span><span class="s1">&#39;notre&#39;</span><span class="p">,</span> <span class="s1">&#39;nôtre&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 결과</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>결과는 개선되어 1과 1이 나온다. 하지만 정확한 값이 필요한 것이 아니라면 개선된 함수말고 기본 함수를 써도 무방하다. 일반적으로 사용할 때는 가장 비슷한 문자열을 찾는 등에 사용할테니 인코딩에 따른 값차이는 크게 의미를 가지지 않는다. 게다가 처리 비용도 더 많이 든다.</p>

<h3>유사함수</h3>

<p>비슷한 역할을 하는 함수에 대해 알고 싶다면 아래의 포스팅을 참고하자.</p>

<ul>
<li><a href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-strings-in-php-similar-text/">PHP에서 두 문자열의 거리(유사도) 구하기 - similar_text()</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[두지점(WGS84 좌표)간 km 거리 계산 함수(php, mysql, javascript)]]></title>
    <link href="http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-wgs84-points/"/>
    <updated>2015-09-14T14:52:05+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/14/calculate-distance-between-two-wgs84-points</id>
    <content type="html"><![CDATA[<p>WGS84 좌표계는 <a href="https://ko.wikipedia.org/wiki/%EC%84%B8%EA%B3%84_%EC%A7%80%EA%B5%AC_%EC%A2%8C%ED%91%9C_%EC%8B%9C%EC%8A%A4%ED%85%9C">위키피디아</a>에 따르면 다음과 같다.</p>

<blockquote><p>World Geodetic System (WGS) 1984년에 제정된 범 지구적 측위 시스템으로 지도학, 측지학, 항법에 많이 사용된다.</p>

<p>통칭 및 약칭은 WGS 84 (aka WGS 1984, EPSG:4326, WGS84)라고 부르며, 2004년에 마지막으로 개정되었다. 이전에 쓰던 초안으로 WGS 72, WGS 66, 그리고 WGS 60이 있다.</p></blockquote>

<p>기존에는 네이버 지도 등에서 KTM 좌표를 사용하기도 했지만 요즘엔 WGS84 좌표를 주로 사용한다.</p>

<p>이번에 작업을 하면서 WGS84 좌표 두개의 거리를 계산해야하는 일이 생겼다. 관련된 내용을 찾아보니 여러자료가 있긴하지만 바로 사용할만한 정보를 찾기가 어려웠다. 사실 계산방법이 조금씩 다르다(따라서 아래의 내용이 아주 정확한 값은 아닐 수 있다). 그래서 조사한김에 내용을 정리해둔다.</p>

<p>아래는 몇가지 언어로 구현된 함수들이다. 반환값은 모두 km 단위로 반환된다. 필요한 단위로의 변환은 당연히 산술계산을 하면된다.</p>

<h2>php</h2>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">function</span> <span class="nf">getDistance</span><span class="p">(</span><span class="nv">$lat1</span><span class="p">,</span> <span class="nv">$lon1</span><span class="p">,</span> <span class="nv">$lat2</span><span class="p">,</span> <span class="nv">$lon2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$earth_radius</span> <span class="o">=</span> <span class="mi">6371</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$dLat</span> <span class="o">=</span> <span class="nb">deg2rad</span><span class="p">(</span><span class="nv">$lat2</span> <span class="o">-</span> <span class="nv">$lat1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$dLon</span> <span class="o">=</span> <span class="nb">deg2rad</span><span class="p">(</span><span class="nv">$lng2</span> <span class="o">-</span> <span class="nv">$lng1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$a</span> <span class="o">=</span> <span class="nb">sin</span><span class="p">(</span><span class="nv">$dLat</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nb">sin</span><span class="p">(</span><span class="nv">$dLat</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="nb">cos</span><span class="p">(</span><span class="nb">deg2rad</span><span class="p">(</span><span class="nv">$lat1</span><span class="p">))</span> <span class="o">*</span> <span class="nb">cos</span><span class="p">(</span><span class="nb">deg2rad</span><span class="p">(</span><span class="nv">$lat2</span><span class="p">))</span> <span class="o">*</span> <span class="nb">sin</span><span class="p">(</span><span class="nv">$dLon</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nb">sin</span><span class="p">(</span><span class="nv">$dLon</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$c</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="nb">asin</span><span class="p">(</span><span class="nb">sqrt</span><span class="p">(</span><span class="nv">$a</span><span class="p">));</span>
</span><span class='line'>    <span class="nv">$d</span> <span class="o">=</span> <span class="nv">$earth_radius</span> <span class="o">*</span> <span class="nv">$c</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$d</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>MySql</h2>

<p>함수로 구현된 예시이지만 당연히 query에서 return 부분을 직접 사용해도 된다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">CREATE</span> <span class="n">FUNCTION</span> <span class="nf">distance_between</span> <span class="p">(</span><span class="n">from_lat</span> <span class="kt">DECIMAL</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">from_lng</span> <span class="kt">DECIMAL</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">to_lat</span> <span class="kt">DECIMAL</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">to_lng</span> <span class="kt">DECIMAL</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> <span class="n">RETURNS</span> <span class="kt">DECIMAL</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="k">RETURN</span> <span class="mi">6371</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nf">ATAN2</span><span class="p">(</span><span class="nf">SQRT</span><span class="p">(</span><span class="nf">POW</span><span class="p">(</span><span class="nf">SIN</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lat</span> <span class="o">-</span> <span class="n">from_lat</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="nf">POW</span><span class="p">(</span><span class="nf">SIN</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lng</span> <span class="o">-</span> <span class="n">from_lng</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nf">COS</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">from_lat</span><span class="p">))</span> <span class="o">*</span> <span class="nf">COS</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lat</span><span class="p">))),</span> <span class="nf">SQRT</span><span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="nf">POW</span><span class="p">(</span><span class="nf">SIN</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lat</span> <span class="o">-</span> <span class="n">from_lat</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="nf">POW</span><span class="p">(</span><span class="nf">SIN</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lng</span> <span class="o">-</span> <span class="n">from_lng</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nf">COS</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">from_lat</span><span class="p">))</span> <span class="o">*</span> <span class="nf">COS</span><span class="p">(</span><span class="nf">RADIANS</span><span class="p">(</span><span class="n">to_lat</span><span class="p">))));</span>
</span></code></pre></td></tr></table></div></figure>


<h2>javascript</h2>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">getDistanceFromLatLonInKm</span><span class="p">(</span><span class="nx">lat1</span><span class="p">,</span><span class="nx">lng1</span><span class="p">,</span><span class="nx">lat2</span><span class="p">,</span><span class="nx">lng2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">deg2rad</span><span class="p">(</span><span class="nx">deg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">deg</span> <span class="o">*</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">R</span> <span class="o">=</span> <span class="mi">6371</span><span class="p">;</span> <span class="c1">// Radius of the earth in km</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">dLat</span> <span class="o">=</span> <span class="nx">deg2rad</span><span class="p">(</span><span class="nx">lat2</span><span class="o">-</span><span class="nx">lat1</span><span class="p">);</span>  <span class="c1">// deg2rad below</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">dLon</span> <span class="o">=</span> <span class="nx">deg2rad</span><span class="p">(</span><span class="nx">lng2</span><span class="o">-</span><span class="nx">lng1</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">dLat</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">dLat</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">deg2rad</span><span class="p">(</span><span class="nx">lat1</span><span class="p">))</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">deg2rad</span><span class="p">(</span><span class="nx">lat2</span><span class="p">))</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">dLon</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">dLon</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">a</span><span class="p">));</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nx">R</span> <span class="o">*</span> <span class="nx">c</span><span class="p">;</span> <span class="c1">// Distance in km</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">d</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.mapanet.eu/EN/Resources/Script-Distance.htm">http://www.mapanet.eu/EN/Resources/Script-Distance.htm</a> 이 사이트에서는 여러가지 언어로 사용하는 방법이 나와 있으나 위에 나열된 함수와는 계산이 조금 다르다. 특히 &ldquo;Earth radius in km (WGS84)"라고 설명된 값이 6378.137를 사용하고 있다.
<a href="https://en.wikipedia.org/wiki/Earth_radius">위키피디아</a>에서 셜명된 Earth radius 값이 6371이기 때문이다.(지구가 둥글기 때문에 지역마다 값의 차이가 있는 것으로 보인다.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[필요해서 만들어본 CSS Image Sprites 생성기]]></title>
    <link href="http://blog.asamaru.net/2015/09/13/online-css-image-sprites-generator/"/>
    <updated>2015-09-13T20:15:23+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/13/online-css-image-sprites-generator</id>
    <content type="html"><![CDATA[<p>웹 기반 프로그램 개발을 주업으로 하다보니 CSS에 관련된 작업도 많이 하게 된다. 게다가 웹 서비스 성능에 대해 고민을 많이 하게되는 것도 당연하다.
그중에서도 간혹 필요하지만 마땅한 도구가 없어 고민을 하게되던 것 중 하나가 CSS Image Sprite 도구다.
얼마전에도 비슷한 작업이 필요하게되어 온라인 도구들을 찾던 중 마땅한 것이 없어 필요에 의해 도구를 하나 만들어 버렸다.</p>

<p>일단 이 도구에 대해 설명하기 전에 CSS Image Sprite가 무엇인지 부터 알아보자.</p>

<h2>CSS Image Sprite 기법</h2>

<p>간단하게 설명하자면 웹 페이지에서 필요한 이미지들을 한장의 이미지로 묶어 제작/배포하여 HTTP request를 줄임으로써 웹페이지 성능을 높이는 기법이다.
이 부분을 이해하기 위해서는 왜 HTTP request를 줄이는 것이 성능에 관련이 있는지를 알아야한다.
일반적으로 복잡한 웹페이지의 경우 페이지를 읽는데 수십에서 수백개의 request(CSS, JS, Image 등)가 발생한다. 이러한 페이지를 브라우저가 로딩할때 한꺼번에 모든 request를 처리하는 것이 아니라 순차적(보통 동시에 2~4개를 동시에 처리 : 브라우저마다 설정에 따라 다름)으로 처리함에 따라 이 수가 많다면 완료 시간이 늘어날 수 밖에 없다. 이와 관련된 자세한 내용은 얘기가 길어지므로 일단 이 정도만 설명하겠다. 조금 더 자세한 내용이 필요하다면 아래의 사이트를 참고하자.</p>

<ul>
<li><a href="https://css-tricks.com/css-sprites/">https://css-tricks.com/css-sprites/</a></li>
<li><a href="http://alistapart.com/article/sprites">http://alistapart.com/article/sprites</a></li>
<li><a href="http://windtale.net/blog/css-image-sprite-automation-with-grunt-spritesmith/">http://windtale.net/blog/css-image-sprite-automation-with-grunt-spritesmith/</a> (한글)</li>
</ul>


<h2>CSS Image Sprites 생성기</h2>

<p><a href="https://asamaru7.github.io/SpriteImageGenerator/">https://asamaru7.github.io/SpriteImageGenerator/</a>  또는  <a href="http://sprite.asamaru.net">http://sprite.asamaru.net</a>  으로 접속해서 사용할 수 있다.</p>

<p>Github :  <a href="https://github.com/asamaru7/SpriteImageGenerator">https://github.com/asamaru7/SpriteImageGenerator</a>
(만들어서 나와 같은 필요을 느끼는 사람이 있을까 싶어 페이지도 개설할 겸 Github에 등록했다.)</p>

<p>그리고 만든 김에 크롬 익스텐션도 만들어 올렸다. 사실 그냥 바로가기 링크랑 기능이 동일하다.</p>

<p><a href="https://chrome.google.com/webstore/detail/sprite-image-generator/ckdkgoopenkcogopkfpehfcjkkhhofgo?utm_source=gmail">https://chrome.google.com/webstore/detail/sprite-image-generator/ckdkgoopenkcogopkfpehfcjkkhhofgo?utm_source=gmail</a></p>

<p>참고로 사이트는 내용이 크게 어려울 것이 없기 때문에 영어로 만들었다.(사실 영어 잘 못한다. 그래서 오탈자가 많을 수 있다.) 혹시나 다른 나라에서도 사용할까 싶어서 하긴 했는데 아직은 방문자가 거의 없다.</p>

<p>사실 이미 잘만들어진 많은 도구들이 있다. 하지만 굳이 새로 만든 이유는 Export 기능 때문이다. 보통 sprite image를 생성한 후에 사용된 작은 이미지들을 따로 관리하지 않아서 수정하거나 추가할 것이 생겼을 때 골치 아플 수 있다. 그래서 export 기능을 추가 했다. sprite.json 파일을 함께 export하는데 이 파일에서 생성시에 설정한 옵션과 원본 이미지들이 모두 포함되어 있어서 수정이 필요하면 이 파일만 import해서 수정할 수 있다. 나의 경우는 프로그램 소스에 함께 포함시켜 두고 관리한다.</p>

<h3>특징</h3>

<ul>
<li>Retina/Normal sprites 동시 생성 가능</li>
<li>Drag and drop 파일 첨부</li>
<li>이미지 이름 변경 가능(CSS 클래스명에 사용됨)</li>
<li>이미지 이름별/사이즈별 정렬, drag and drop으로 직접 정렬</li>
<li>Support DataURL Export</li>
<li>Export: Sprites 이미지 / 설정 파일 다운로드</li>
<li>설정 파일 Import 기능 : *.sprite.json File (향후 수정시 기존 export를 첨부하여 재작업 가능)</li>
</ul>


<h3>스크린샷</h3>

<p><img src="http://blog.asamaru.net/img/2015-09-13-online-css-image-sprites-generator-1.png" alt="Sprite CSS Image Generator 설정" />
<img src="http://blog.asamaru.net/img/2015-09-13-online-css-image-sprites-generator-2.png" alt="Sprite CSS Image Generator 확인" />
<img src="http://blog.asamaru.net/img/2015-09-13-online-css-image-sprites-generator-3.png" alt="Sprite CSS Image Generator 생성" />
<img src="http://blog.asamaru.net/img/2015-09-13-online-css-image-sprites-generator-4.png" alt="Sprite CSS Image Generator 추출" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySql의 SQL_CALC_FOUND_ROWS와 FOUND_ROWS()]]></title>
    <link href="http://blog.asamaru.net/2015/09/11/using-sql-calc-found-rows-and-found-rows-with-mysql/"/>
    <updated>2015-09-11T19:05:37+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/11/using-sql-calc-found-rows-and-found-rows-with-mysql</id>
    <content type="html"><![CDATA[<p>MySql에는 SQL_CALC_FOUND_ROWS과 FOUND_ROWS() 라는 기능이 있다.일반적인 쿼리를 작성하는 상황에서는 크게 사용할 일이 없는 기능들이지만 알아두면 정말 유용하게 사용할 수 있다.</p>

<p>어디다 활용을 할지에 대해 보기 전에 각 기능이 무슨 역할을 하지는지부터 알아보자.</p>

<p>기본적인 동작은 <a href="http://www.mysqlkorea.com/sub.html?mcode=develop&amp;scode=01&amp;lang=k&amp;m_no=21838&amp;cat1=12&amp;cat2=359&amp;cat3=374">mysqlkorea</a>에 설명되어 있으니 참고하면 된다.</p>

<h2>SQL_CALC_FOUND_ROWS</h2>

<p>SQL_CALC_FOUND_ROWS는 SELECT 쿼리에 사용할 수 있는 MySQL 힌트로 쿼리 결과의 전체 row 수를 임시로 저장하게 합니다. 여기서 중요한 점은 row 수가 반환되는 row 수가 아니라 조건에 해당하는 전체 row 수를 가진다는 것이다. 따라서 LIMIT 0, 10을 지정하여 10개의 row만 가져온다고 하더라도 LIMIT이 없을 때의 쿼리 결과와 같은 row 수를 계산한다.
이 부분이 상당히 중요한 부분이다. 나중에 다시 설명하겠지만 LIMIT에 영향을 받지 않으므로 쿼리 성능을 떨어뜨릴 수 있다.</p>

<h2>FOUND_ROWS()</h2>

<p>FOUND_ROWS는 직전 쿼리에서 검색된 결과 row 수를 반환한다. 이해를 돕기위해 간단한 쿼리의 결과를 아래에 추가했으니 참고하면 바로 이해가 되리라 생각한다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">article</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">FOUND_ROWS</span><span class="p">();</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nf">FOUND_ROWS</span><span class="p">()</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span>          <span class="mi">120</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">article</span> <span class="k">limit</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">FOUND_ROWS</span><span class="p">();</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nf">FOUND_ROWS</span><span class="p">()</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span>           <span class="mi">10</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">FOUND_ROWS</span><span class="p">();</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nf">FOUND_ROWS</span><span class="p">()</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span>            <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>단, 여기서 주의할 것은 맨 마지막 결과다. &ldquo;왜 10이 아닐까?&rdquo; 하는 생각을 할 수 있으나 맨처음 적었듯이 &ldquo;직전&rdquo; 쿼리의 결과 row 수를 반환하기 때문에 1이 나오는 것이다.(이전 <code>select FOUND_ROWS();</code>의 결과 row 수 반환)</p>

<h2>SQL_CALC_FOUND_ROWS와 FOUND_ROWS()의 결합</h2>

<p>각각의 기능을 확인했으니 둘이 만나면 어떻게 되는지 알아보자. 일단 아래의 쿼리 결과를 보자.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="k">SQL_CALC_FOUND_ROWS</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">article</span> <span class="k">limit</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">FOUND_ROWS</span><span class="p">();</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nf">FOUND_ROWS</span><span class="p">()</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="o">|</span>          <span class="mi">120</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>이해가 되는가? 앞선 예시와 결과가 다르다. SQL_CALC_FOUND_ROWS가 없었다면 FOUND_ROWS()의 결과는 10이었을 것이다. 하지만 SQL_CALC_FOUND_ROWS에서 설명했던 것과 같이 SQL_CALC_FOUND_ROWS 힌트가 추가되면 limit은 무시되고 검색 조건에 해당하는 모든 row 수를 계산하기 때문에 FOUND_ROWS()의 결과가 120이 나오는 것이다.</p>

<h2>활용</h2>

<h3>페이징</h3>

<p>게시판 같은 서비스를 만들다보면 필수적으로 들어가는 기능이 페이징 기능이다. 일반적으로 페이징 처리를 위해서는 total row수가 필요한데 이를 처리하기 위해 동일 조건의 쿼리를 두번 사용하여 한번은 count(1), 한번은 필요한 필드를 넣어 쿼리한다. 보통은 대게 이렇게 개발해서 사용하고 크게 문제가 없다.
하지만 데이터의 양이 많거나 쿼리가 복잡해서 성능이 떨어지는 상황을 생각해보자.
예를들어 성능이 떨어지는 쿼리가 처리되는데 0.5초가 걸린다고 가정할 때 페이징을 위해 두번의 쿼리를 해야 한다면 쿼리에 소요되는 시간은 1초가 걸린다. 이 부분을 개선하기 위해 FOUND_ROWS()를 사용할 수 있다.</p>

<p>다시 일반적인 처리로 돌아가서 보면 count 쿼리를 해서 total row 수를 이용해 페이징을 한 후 limit을 지정해 데이터 쿼리를 질의하여 값을 돌려 받는다.</p>

<p>그럼 FOUND_ROWS()를 사용할 때는 어떻게 하는가? 데이터 쿼리를 먼저하되 SQL_CALC_FOUND_ROWS 힌트를 추가하여 질의한다. 그 다음 FOUND_ROWS()를 사용하여 total row 수를 가져와서 페이징 처리를 한다. 간단히 얘기해서 두 쿼리의 순서가 바뀐다.</p>

<p>당연한 얘기지만 빈번히 사용되는 쿼리라면 이렇게까지 성능이 떨어지기 전에 쿼리를 튜닝하고 설계를 변경하는 것이 옳다. 하지만 다양한 쿼리를 필요로 하는 프로그램을 만들다보면 모든 쿼리에 맞는 최적화를 하기는 어려우므로 이런 방법들을 적용하는 것이 필요할 수 있다.</p>

<h4>주의</h4>

<p>앞선 설명에서는 원리를 설명하기 위해 간단히 설명했지만 여기에서 중요한 부분이 빠져 있다. FOUND_ROWS가 모든 상황에 최적화되는 것은 아니라는 것이다. DB의 쿼리 성능에 관련해서는 변수와 고려해야할 사항이 워낙 많기 때문에 여기서 다 설명하기는 어렵고 중요한 부분만 설명하겠다.</p>

<p>서두에 SQL_CALC_FOUND_ROWS를 설명하면서 limit과 무관하게 동작함에 따라 성능이 떨어질 수 있다는 점을 적었다. 여기서 하고자하는 이야기의 중요한 부분이 이 부분이다.</p>

<p>쿼리가 index를 탈 수 있다면 limit 범위만 탐색하여 결과를 찾게되므로 쿼리 성능이 떨어지지 않는다. 그렇다면 &ldquo;index를 타지 않는다면?&rdquo; 어떤가? row들을 차례로 스캔하면서 조건을 검사해 limit 범위가 채워지면 스캔을 멈춘다. limit 0, 10을 지정했을 때를 가정하고 운이 좋아서 조건에 해당하는 데이터가 상위 10개에 속해 있다면 성능은 index를 타는 것과 거의 동일할 것이다. 반대로 데이터가 맨 마지막 10개라면 전체를 스캔하게 되므로 성능은 떨어질 것이다. 최선과 최악의 경우만 있는 것은 아니니 평균을 내자면 50% 정도를 스캔하면 결과를 얻을 수 있다는 결론을 얻는다.(실제론 맞지 않을 수 있다. 그냥 이론상 그렇다는 것이다.)</p>

<p>자 다시 SQL_CALC_FOUND_ROWS로 돌아가보면 SQL_CALC_FOUND_ROWS가 없다면 평균 50%만 스캔하면 끝날 쿼리를 SQL_CALC_FOUND_ROWS를 넣음으로 인해서 100%를 스캔하게 된다(전체 row수를 세어야 하므로). 따라서 성능이 떨어질 수 있다는 것이다.</p>

<p>그렇다면 &ldquo;이걸 쓰지말아야 한다는 것인가?"라고 생각될 수 있다. 하지만 다음의 경우를 생각해보자.
앞서 설명에서 데이터를 스캔하는 과정에서는 정렬에 대한 문제를 제시하지 않았다. 그럼 정렬을 포함해보자.
정렬된 결과에서 10개를 가져와야 한다면, 게대가 정렬이 index에 의해 정렬이되지 않는다면&hellip; 결국은 정렬을 위해서 전체 스캔이 일어나고 heap 테이블이 만들어지고 정렬을 해야한다.</p>

<h4>결론</h4>

<p>결론은 위의 경우는 어짜피 100% 스캔이 일어난다는 것이다. 따라서 어짜피 100% 스캔을 두번 해야 할 상황이라면 SQL_CALC_FOUND_ROWS를 사용하여 1번으로 줄임으로써 쿼리 질의 시간을 절반으로 줄일 수 있다.</p>

<p>사실 쿼리라는 것이 검색 조건, 정렬, index 등등 여러가지 변수에 의해 성능이 천차만별로 달라질 수 있기 때문에 여기서 여러가지 경우를 예를들어 설명하기는 힘들다. 이런 내용으로만 정리해도 책이 몇권이다.(유명한 책중에 대용량 데이터베이스 솔루션이란 책이 있다. 이와 관련된 내용도 포함되어 있다.)</p>

<p>일부 사람들은 index를 타지 목하면 SQL_CALC_FOUND_ROWS를 사용하는게 낫다라고 하기도 한다. 위에 설명을 했듯이 index를 타지 못하더라도 전체 스캔을 하는 것보다 더 나은 상황이 만들어질 수 있는 경우는 많기 때문에 index를 타지 못하는 것만으로 SQL_CALC_FOUND_ROWS를 선택하는 것은 맞지 않다.</p>

<p>최종 결론은 어짜피 전체 스캔을 피할 수 없다면 이왕 스캔한 김에 row수를 세어두어서 count 쿼리를 위해 다시 성능을 죽이지는 말자는 것이다.</p>

<h3>Group By 결과 row 수</h3>

<p>앞의 페이징에서 너무 긴 이야기를 했으므로 여기는 조금 간단히 하겠다. 어짜피 비슷한 얘기가 되므로.
Group By 결과 row 수를 얻으려면 어떻게 해야할까? 간단할 듯 하지만 그리 간단하지는 않다.(내가 모르는 방법이 있다면 할 수 없고&hellip;)</p>

<p>가장 쉽게 접근하는 방법은 서브 쿼리를 사용하는 방법일 것이다. Group By 쿼리를 서브 쿼리로 넣어 count를 사용하는 방법. 대략 아래와 같다.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="nf">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">from</span> <span class="p">(</span><span class="k">select</span> <span class="nf">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">as</span> <span class="n">cnt</span> <span class="k">from</span> <span class="n">article</span> <span class="k">group</span> <span class="k">by</span> <span class="n">apartmentIdx</span><span class="p">)</span> <span class="n">APT</span><span class="p">;</span>
</span><span class='line'><span class="o">+----------+</span>
</span><span class='line'><span class="o">|</span> <span class="nf">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------+</span>
</span><span class='line'><span class="o">|</span>        <span class="mi">4</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>다음은 distinct를 사용하는 방법이다. distinct에 대해서는 주제를 벗어나니 여기서는 생략.</p>

<figure class='code notranslate'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="nf">count</span><span class="p">(</span><span class="k">distinct</span> <span class="n">apartmentIdx</span><span class="p">)</span> <span class="k">as</span> <span class="n">cnt</span> <span class="k">from</span> <span class="n">article</span><span class="p">;</span>
</span><span class='line'><span class="o">+-----+</span>
</span><span class='line'><span class="o">|</span> <span class="n">cnt</span> <span class="o">|</span>
</span><span class='line'><span class="o">+-----+</span>
</span><span class='line'><span class="o">|</span>   <span class="mi">4</span> <span class="o">|</span>
</span><span class='line'><span class="o">+-----+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>그외에도 오라클이나 다른 DB에서는 또 다른 방법들도 있다.</p>

<p>그렇다 하더라도 group by를 한다는 것은 어짜피 전체를 스캔해서 결과를 얻는 과정(다른 조건에 의해 아닌 경우도 있을 수는 있다)을 거치므로 SQL_CALC_FOUND_ROWS를 사용하여 결과 row를 세어두는 것이 성능에 많은 도움을 줄 수 있다.</p>

<h2>정리</h2>

<p>그 외에도 여러가지 활용 방법이 있을 수 있으나 대표적인 사례만 나열했다. 다시 한번 강조하지만 이 방법은 만능이 아니다. 전체 스캔(Full Scan)을 피할 수 없는 상황에서 이왕 전체 스캔한거 count를 위해 다시 하지 않도록 활용하는 전략이 가장 적합하다.</p>

<p>또한 index를 타지 않는다고 무조건 full scan이 일어나지는 않는다. 이 부분에서 가장 중요한 것은 검색조건 보다 정렬이다. order by를 사용하지 않고 원하는 정렬이 되도록 설계한다면 full scan을 충분히 배제할 수 있다.(이 부분은 주제에서도 많이 벗어나고 설명하자면 얘기가 다시 무지하게 길어지므로 일단 패스.)</p>
]]></content>
  </entry>
  
</feed>
