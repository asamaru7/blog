<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.0.1">Jekyll</generator>
<link href="https://blog.asamaru.net/atom.xml" rel="self" type="application/atom+xml" />
<link href="https://blog.asamaru.net/" rel="alternate" type="text/html" />
<updated>2016-08-12T20:41:47+09:00</updated>
<id>https://blog.asamaru.net/</id>
<subtitle>세상에 필요한 소스코드 한줄 남기고 가자.
</subtitle>
<author>
<name>유영재</name>
</author>
<entry>
<title>안드로이드 WebView에서 HTML5 Video Full Screen 지원</title>
<link href="https://blog.asamaru.net/2016/08/12/playing-html5-video-on-fullscreen-in-android-webview/" rel="alternate" type="text/html" title="안드로이드 WebView에서 HTML5 Video Full Screen 지원" />
<published>2016-08-12T20:15:23+09:00</published>
<updated>2016-08-12T20:15:23+09:00</updated>
<id>https://blog.asamaru.net/2016/08/12/playing-html5-video-on-fullscreen-in-android-webview</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/08/12/playing-html5-video-on-fullscreen-in-android-webview/">&lt;p&gt;안드로이드 WebView에서 HTML5 Video를 재생할 경우 “전체창으로 보기”를 사용할 수 있다. 그런데 자동적으로 사용할 수 있는 것이 아니라 관련된 처리를 직접 해주어야 한다.&lt;/p&gt;

&lt;p&gt;필요한 처리는 아래와 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;WebView에 WebChromeClient를 설정해 주어야 한다. 그렇지 않으면 4.0 이후에서 NullPointerException이 발생한다.&lt;/li&gt;
  &lt;li&gt;WebChromeClient를 설정하더라도  &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebChromeClient.html#onShowCustomView%28android.view.View, android.webkit.WebChromeClient.CustomViewCallback%29&quot;&gt;onShowCustomView()&lt;/a&gt;를 구현해주지 않으면 전체창 보기 상태에서 영상은 나오지 않고 소리만 재생되는 현상이 발생한다.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;android:hardwareAccelerated=&quot;true&quot;&lt;/code&gt; 등을 사용해서 Application 또는 해당 Activity에 하드웨어 가속을 켜줘야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebChromeClient.html#onShowCustomView%28android.view.View, android.webkit.WebChromeClient.CustomViewCallback%29&quot;&gt;onShowCustomView()&lt;/a&gt;를 구현한 소스는 아래와 같다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.support.v4.content.ContextCompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.ViewGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.WindowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.webkit.WebChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.FrameLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FullscreenableChromeClient&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebChromeClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CustomViewCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mCustomViewCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mOriginalOrientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COVER_SCREEN_PARAMS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MATCH_PARENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MATCH_PARENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FullscreenableChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onShowCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomViewCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ICE_CREAM_SANDWICH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCustomViewHidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;mOriginalOrientation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestedOrientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDecorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FullscreenHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COVER_SCREEN_PARAMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;decor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COVER_SCREEN_PARAMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;setFullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mCustomViewCallback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//			mActivity.setRequestedOrientation(requestedOrientation);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onShowCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;deprecation&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onShowCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestedOrientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CustomViewCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onShowCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onHideCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;setFullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDecorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;decor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;removeView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mFullscreenContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mCustomViewCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCustomViewHidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRequestedOrientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mOriginalOrientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setFullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;winParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAttributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FLAG_FULLSCREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;winParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;winParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;mCustomView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSystemUiVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SYSTEM_UI_FLAG_VISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAttributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;winParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FullscreenHolder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FullscreenHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContextCompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onTouchEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;사용법은 아래와 같다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setWebChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FullscreenableChromeClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;비슷한 방법으로 &lt;a href=&quot;http://stackoverflow.com/a/16179544&quot;&gt;Playing HTML5 video on fullscreen in android webview&lt;/a&gt;에서 안내하는 방법도 있다.&lt;/p&gt;

&lt;p&gt;어쨌든 결론은 Full Screen을 위한 별도의 View를 구성해줘야 한다는 것이다. 항상 느끼는 것이지만 이런 것들은 OS 또는 SDK 차원에서 기본적으로 제공하고 Custom이 필요할 경우만 처리하도록 하면 될 텐데 안드로이드는 이런 부분들이 너무 부족하다.&lt;/p&gt;
</content>
<summary>안드로이드 WebView에서 HTML5 Video를 재생할 경우 “전체창으로 보기”를 사용할 수 있다. 그런데 자동적으로 사용할 수 있는 것이 아니라 관련된 처리를 직접 해주어야 한다.필요한 처리는 아래와 같다.  WebView에 WebChromeClient를 설정해 주어야 한다. 그렇지 않으면 4.0 이후에서 NullPointerException이 발생한다.  WebChromeClient를 설정하더라도  onShowCustomView()를 구현해주지 않으면 전체창 보기 상태에서 영상은 나오지 않고 소리만 재생되는 현상이 발생한다.  android:hardwareAccelerated=&quot;true&quot; 등을 사용해서 Application 또는 해당 Activity에 하드웨어 가속을 켜줘야 한다.onShowCustomView()를 구현한 소스는 아래와 같다. 1 2 3 4 5 6 7 8 910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697import android.app.Activity;import android.content.Context;import android.os.Build;import android.support.v4.content.ContextCompat;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.view.WindowManager;import android.webkit.WebChromeClient;import android.widget.FrameLayout;public class FullscreenableChromeClient extends WebChromeClient {	private Activity mActivity = null;	private View mCustomView;	private WebChromeClient.CustomViewCallback mCustomViewCallback;	private int mOriginalOrientation;	private FrameLayout mFullscreenContainer;	private static final FrameLayout.LayoutParams COVER_SCREEN_PARAMS = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);	public FullscreenableChromeClient(Activity activity) {		this.mActivity = activity;	}	@Override	public void onShowCustomView(View view, CustomViewCallback callback) {		if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {			if (mCustomView != null) {				callback.onCustomViewHidden();				return;			}			mOriginalOrientation = mActivity.getRequestedOrientation();			FrameLayout decor = (FrameLayout) mActivity.getWindow().getDecorView();			mFullscreenContainer = new FullscreenHolder(mActivity);			mFullscreenContainer.addView(view, COVER_SCREEN_PARAMS);			decor.addView(mFullscreenContainer, COVER_SCREEN_PARAMS);			mCustomView = view;			setFullscreen(true);			mCustomViewCallback = callback;//			mActivity.setRequestedOrientation(requestedOrientation);		}		super.onShowCustomView(view, callback);	}	@SuppressWarnings(&amp;quot;deprecation&amp;quot;)	@Override	public void onShowCustomView(View view, int requestedOrientation, WebChromeClient.CustomViewCallback callback) {		this.onShowCustomView(view, callback);	}	@Override	public void onHideCustomView() {		if (mCustomView == null) {			return;		}		setFullscreen(false);		FrameLayout decor = (FrameLayout) mActivity.getWindow().getDecorView();		decor.removeView(mFullscreenContainer);		mFullscreenContainer = null;		mCustomView = null;		mCustomViewCallback.onCustomViewHidden();		mActivity.setRequestedOrientation(mOriginalOrientation);	}	private void setFullscreen(boolean enabled) {		Window win = mActivity.getWindow();		WindowManager.LayoutParams winParams = win.getAttributes();		final int bits = WindowManager.LayoutParams.FLAG_FULLSCREEN;		if (enabled) {			winParams.flags |= bits;		} else {			winParams.flags &amp;amp;= ~bits;			if (mCustomView != null) {				mCustomView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_VISIBLE);			}		}		win.setAttributes(winParams);	}	private static class FullscreenHolder extends FrameLayout {		public FullscreenHolder(Context ctx) {			super(ctx);			setBackgroundColor(ContextCompat.getColor(ctx, android.R.color.black));		}		@Override		public boolean onTouchEvent(MotionEvent evt) {			return true;		}	}}사용법은 아래와 같다.1webView.setWebChromeClient(new FullscreenableChromeClient(activity));비슷한 방법으로 Playing HTML5 video on fullscreen in android webview에서 안내하는 방법도 있다.어쨌든 결론은 Full Screen을 위한 별도의 View를 구성해줘야 한다는 것이다. 항상 느끼는 것이지만 이런 것들은 OS 또는 SDK 차원에서 기본적으로 제공하고 Custom이 필요할 경우만 처리하도록 하면 될 텐데 안드로이드는 이런 부분들이 너무 부족하다.</summary>
</entry>
<entry>
<title>안드로이드 WebView resumeTimers() / pauseTimers() 적용하기</title>
<link href="https://blog.asamaru.net/2016/08/01/android-webview-resumetimers-pausetimers/" rel="alternate" type="text/html" title="안드로이드 WebView resumeTimers() / pauseTimers() 적용하기" />
<published>2016-08-01T16:56:09+09:00</published>
<updated>2016-08-01T16:56:09+09:00</updated>
<id>https://blog.asamaru.net/2016/08/01/android-webview-resumetimers-pausetimers</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/08/01/android-webview-resumetimers-pausetimers/">&lt;p&gt;안드로이드의 WebView를 사용하다 보면 처음 페이지를 보여줄 때는 정상적으로 보이나 두번째 이후부터 페이지를 정상적으로 표시하지 못하는 경우가 있다. 이 경우는 여러가지 이유로 발생할 수 있으나 오늘은  &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebView.html#pauseTimers%28%29&quot;&gt;pauseTimers&lt;/a&gt; / &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebView.html#resumeTimers%28%29&quot;&gt;resumeTimers&lt;/a&gt; 때문에 발생하는 경우에 대한 이야기를 하고자 한다.&lt;/p&gt;

&lt;p&gt;우선 이 함수들이 필요한 이유부터 간단히 알아보자.&lt;/p&gt;

&lt;p&gt;메뉴얼에서 &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebView.html#pauseTimers%28%29&quot;&gt;pauseTimers&lt;/a&gt;를 찾아보면 아래와 같이 설명되어 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pauses all layout, parsing, and JavaScript timers for all WebViews. This is a global requests, not restricted to just this WebView. This can be useful if the application has been paused.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;현재 보여지는 웹뷰뿐만 아니라 모든 웹뷰에 대해 layout, parsing, JavaScript timers 를 멈추도록 지시한다. 이것이 왜 필요할까? 안드로이드는 기본적으로 앱이 백그라운드 상태로 들어가더라도 웹뷰의 동작은 자동적으로 멈추지 않고 계속 동작하기 때문이다. 이렇게되면 앱을 사용하지 않더라도 지속적으로 연산 작업이 일어나므로 배터리를 더 많이 사용하게 된다(이런 문제라면 OS 차원에서 알아서 처리하면 될텐데 왜 개발자가 직접이 문제를 처리해 주어야하는지 이해가 안된다).&lt;/p&gt;

&lt;p&gt;이 문제를 해결하기 위해서는 Activity를 벗어날 때 &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebView.html#pauseTimers%28%29&quot;&gt;pauseTimers&lt;/a&gt;를 호출해주면 된다.&lt;/p&gt;

&lt;p&gt;그런데 이렇게 처리해 주었다면 Activity에 복귀할 때는 &lt;a href=&quot;https://developer.android.com/reference/android/webkit/WebView.html#pauseTimers%28%29&quot;&gt;pauseTimers&lt;/a&gt;를 필히 호출해줘야 한다. 그렇지 않으면 화면이 보여지지 않는 문제를 만날 수 있다. 여러 사람들의 이야기를 들어보면 이 현상은 기기마다 차이가 있는 것으로 보인다(문제가 발생하는 기기도 있고 그렇지 않은 기기도 있다는 뜻).&lt;/p&gt;

&lt;p&gt;간단한 해결 방법은 아래와 같이 WebView를 사용하는 Activity의 onResume, onPause에서 직접 처리해주면 된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resumeTimers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pauseTimers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Activity 단위로 처리하는 것이 귀찮다면 application의 life cycle에 맞춰서 일괄적으로 처리해도 된다. 메뉴얼에 나와 있듯이 application 전체의 웹뷰에 일괄적으로 적용되므로.&lt;/p&gt;
</content>
<summary>안드로이드의 WebView를 사용하다 보면 처음 페이지를 보여줄 때는 정상적으로 보이나 두번째 이후부터 페이지를 정상적으로 표시하지 못하는 경우가 있다. 이 경우는 여러가지 이유로 발생할 수 있으나 오늘은  pauseTimers / resumeTimers 때문에 발생하는 경우에 대한 이야기를 하고자 한다.우선 이 함수들이 필요한 이유부터 간단히 알아보자.메뉴얼에서 pauseTimers를 찾아보면 아래와 같이 설명되어 있다.  Pauses all layout, parsing, and JavaScript timers for all WebViews. This is a global requests, not restricted to just this WebView. This can be useful if the application has been paused.현재 보여지는 웹뷰뿐만 아니라 모든 웹뷰에 대해 layout, parsing, JavaScript timers 를 멈추도록 지시한다. 이것이 왜 필요할까? 안드로이드는 기본적으로 앱이 백그라운드 상태로 들어가더라도 웹뷰의 동작은 자동적으로 멈추지 않고 계속 동작하기 때문이다. 이렇게되면 앱을 사용하지 않더라도 지속적으로 연산 작업이 일어나므로 배터리를 더 많이 사용하게 된다(이런 문제라면 OS 차원에서 알아서 처리하면 될텐데 왜 개발자가 직접이 문제를 처리해 주어야하는지 이해가 안된다).이 문제를 해결하기 위해서는 Activity를 벗어날 때 pauseTimers를 호출해주면 된다.그런데 이렇게 처리해 주었다면 Activity에 복귀할 때는 pauseTimers를 필히 호출해줘야 한다. 그렇지 않으면 화면이 보여지지 않는 문제를 만날 수 있다. 여러 사람들의 이야기를 들어보면 이 현상은 기기마다 차이가 있는 것으로 보인다(문제가 발생하는 기기도 있고 그렇지 않은 기기도 있다는 뜻).간단한 해결 방법은 아래와 같이 WebView를 사용하는 Activity의 onResume, onPause에서 직접 처리해주면 된다. 1 2 3 4 5 6 7 8 910111213@Overrideprotected void onResume() {  super.onResume();  webView.resumeTimers();}@Overrideprotected void onPause() {  super.onPause();  webView.pauseTimers();}Activity 단위로 처리하는 것이 귀찮다면 application의 life cycle에 맞춰서 일괄적으로 처리해도 된다. 메뉴얼에 나와 있듯이 application 전체의 웹뷰에 일괄적으로 적용되므로.</summary>
</entry>
<entry>
<title>Android 4.4.3, 4.4.4 Webview Referer 오류 수정</title>
<link href="https://blog.asamaru.net/2016/07/30/android-4-4-3-4-4-4-webview-referer-doesn-t-work/" rel="alternate" type="text/html" title="Android 4.4.3, 4.4.4 Webview Referer 오류 수정" />
<published>2016-07-30T07:47:48+09:00</published>
<updated>2016-07-30T07:47:48+09:00</updated>
<id>https://blog.asamaru.net/2016/07/30/android-4-4-3-4-4-4-webview-referer-doesn-t-work</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/07/30/android-4-4-3-4-4-4-webview-referer-doesn-t-work/">&lt;p&gt;안드로이드 WebView를 사용하면서 특정 페이지로의 접근시 Referer를 지정해서 넘기도록 처리해서 사용중인 앱이 있다. 그런데 테스트 도중 이상한 문제가 발생했다. Android 4.4.4에서만 지정한 Referer를 무시하고 넘기지 않는 것이다. 그래서 조금 찾아보니 아래와 같은 글들이 있었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://withwontae.wordpress.com/tag/webview/&quot;&gt;Webview/UIWebview Header에 HTTP Referer 추가&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Android OS 4.4 이상의 단말에서는 Webview가 Chromium기반으로 변경되면서 Referer 추가해도 HTTP Header에 설정이 되지 않는 문제 발생( 이건 targetSDK 버전을 올려야 적용 )&lt;/p&gt;

  &lt;p&gt;http://lapture.net/?p=2619&lt;/p&gt;

  &lt;p&gt;버그라고들 이야기 하는데 버그가 아닌 것 같다. 보안상의 문제로 Chrominum Webview에서는 ‘Referer’ Key는 추가로 설정하지 못하도록 방지한 느낌이 든다.  ( 그냥 혼자만의 생각 – 혹시 아시는 분은 연락주세요 ㅜㅡㅜ )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;여기서는 버그가 아닌 보안 상의 문제로 보인다고 했지만 아래의 글을 보면 결국 버그인 것으로 보인다(보안 상 문제가 있다는 생각으로 개발자가 뺐을 수도 있겠지만…).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.google.com/p/android/issues/detail?id=72323&quot;&gt;Nexus 5 referer string value is coming as null even if we pass it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Project Member #2 sgu…@android.com
This is fixed and will be released in next version of Android. Thanks,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 글에서 보면 &lt;code&gt;Project Member&lt;/code&gt;가 다음 버전에 수정하겠다는 답변을 달아 놓았다.
그리고 이글에서 보면 4.4.3과 4.4.4에서만 이 현상이 나타난다는 댓글도 있다. 모든 기기를 테스트할 수는 없으나 내가 확인한 기기들에서는 4.4.2는 이상이 없고 4.4.4에서는 실제로 이상이 있었다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;결론은 4.4.3, 4.4.4 기기에서는 Referer를 사용할 수 없다는 것인데 이렇게 되면 이 방법을 아예 사용할 수가 없는 것과 같다. 그래서 방법을 찾아봤지만 해결책을 제시한 곳을 찾을 수 없었다.&lt;/p&gt;

&lt;p&gt;하지만 수많은 테스트 결과 찾은 방법이 있어 아래에 공유한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extraHeaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;referer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;~~~&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;extraHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Referer&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;referer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;4.4.3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RELEASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;4.4.4&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RELEASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4.4.3 ~ 4.4.4 에서 Referer가 누락되는 문제를 수정하기 위함&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;extraHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Referer &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;referer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extraHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;아주 간단하다. “Referer” 대신 “Referer “를 사용하는 것이다. HTTP 프로토콜에서 Referer는 다음과 같은 형식이다. &lt;code&gt;Referer : ~~~&lt;/code&gt; 따라서 Referer 뒤에 공백하나 더 들어가도 규칙엔 문제가 없으므로 정상 동작한다.&lt;/p&gt;

&lt;p&gt;다행히 안드로이드에서 문자열을 trim하지 않고 비교하고 있어서 간단하게 해결된다. 개발자의 실수가 다행인 경우도 있을 수 있구나.&lt;/p&gt;
</content>
<summary>안드로이드 WebView를 사용하면서 특정 페이지로의 접근시 Referer를 지정해서 넘기도록 처리해서 사용중인 앱이 있다. 그런데 테스트 도중 이상한 문제가 발생했다. Android 4.4.4에서만 지정한 Referer를 무시하고 넘기지 않는 것이다. 그래서 조금 찾아보니 아래와 같은 글들이 있었다.  Webview/UIWebview Header에 HTTP Referer 추가  Android OS 4.4 이상의 단말에서는 Webview가 Chromium기반으로 변경되면서 Referer 추가해도 HTTP Header에 설정이 되지 않는 문제 발생( 이건 targetSDK 버전을 올려야 적용 )  http://lapture.net/?p=2619  버그라고들 이야기 하는데 버그가 아닌 것 같다. 보안상의 문제로 Chrominum Webview에서는 ‘Referer’ Key는 추가로 설정하지 못하도록 방지한 느낌이 든다.  ( 그냥 혼자만의 생각 – 혹시 아시는 분은 연락주세요 ㅜㅡㅜ )여기서는 버그가 아닌 보안 상의 문제로 보인다고 했지만 아래의 글을 보면 결국 버그인 것으로 보인다(보안 상 문제가 있다는 생각으로 개발자가 뺐을 수도 있겠지만…).  Nexus 5 referer string value is coming as null even if we pass it  Project Member #2 sgu…@android.comThis is fixed and will be released in next version of Android. Thanks,이 글에서 보면 Project Member가 다음 버전에 수정하겠다는 답변을 달아 놓았다.그리고 이글에서 보면 4.4.3과 4.4.4에서만 이 현상이 나타난다는 댓글도 있다. 모든 기기를 테스트할 수는 없으나 내가 확인한 기기들에서는 4.4.2는 이상이 없고 4.4.4에서는 실제로 이상이 있었다.결론은 4.4.3, 4.4.4 기기에서는 Referer를 사용할 수 없다는 것인데 이렇게 되면 이 방법을 아예 사용할 수가 없는 것과 같다. 그래서 방법을 찾아봤지만 해결책을 제시한 곳을 찾을 수 없었다.하지만 수많은 테스트 결과 찾은 방법이 있어 아래에 공유한다. 1 2 3 4 5 6 7 8 910Map&amp;lt;String, String&amp;gt; extraHeaders = new HashMap&amp;lt;&amp;gt;();String referer = &amp;quot;~~~&amp;quot;;extraHeaders.put(&amp;quot;Referer&amp;quot;, referer);if ((&amp;quot;4.4.3&amp;quot;.equals(android.os.Build.VERSION.RELEASE))		|| (&amp;quot;4.4.4&amp;quot;.equals(android.os.Build.VERSION.RELEASE))) {   // 4.4.3 ~ 4.4.4 에서 Referer가 누락되는 문제를 수정하기 위함	extraHeaders.put(&amp;quot;Referer &amp;quot;, referer);}view.loadUrl(url, extraHeaders);아주 간단하다. “Referer” 대신 “Referer “를 사용하는 것이다. HTTP 프로토콜에서 Referer는 다음과 같은 형식이다. Referer : ~~~ 따라서 Referer 뒤에 공백하나 더 들어가도 규칙엔 문제가 없으므로 정상 동작한다.다행히 안드로이드에서 문자열을 trim하지 않고 비교하고 있어서 간단하게 해결된다. 개발자의 실수가 다행인 경우도 있을 수 있구나.</summary>
</entry>
<entry>
<title>Html.fromHtml deprecated(Android N)</title>
<link href="https://blog.asamaru.net/2016/07/14/html-fromhtml-deprecated-in-android-n/" rel="alternate" type="text/html" title="Html.fromHtml deprecated(Android N)" />
<published>2016-07-14T10:33:16+09:00</published>
<updated>2016-07-14T10:33:16+09:00</updated>
<id>https://blog.asamaru.net/2016/07/14/html-fromhtml-deprecated-in-android-n</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/07/14/html-fromhtml-deprecated-in-android-n/">&lt;p&gt;Android N이 아직 developer preview 상태지만 곧 정식 버전이 나올 것으로 생각된다. 이 Android N에서 deprecated 된 것 중의 하나가 &lt;a href=&quot;https://developer.android.com/reference/android/text/Html.html#fromHtml%28java.lang.String%29&quot;&gt;Html.fromHtml&lt;/a&gt;다.&lt;/p&gt;

&lt;p&gt;공식 문서에는 다음과 같이 안내되어 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This method was deprecated in API level 24. use fromHtml(String, int) instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이와 관련해서는 길게 이야기할 것도 없으니 버전에 대응되도록 처리해 둔 함수를 아래에 남긴다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Spanned&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// noinspection deprecation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FROM_HTML_MODE_LEGACY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>Android N이 아직 developer preview 상태지만 곧 정식 버전이 나올 것으로 생각된다. 이 Android N에서 deprecated 된 것 중의 하나가 Html.fromHtml다.공식 문서에는 다음과 같이 안내되어 있다.  This method was deprecated in API level 24. use fromHtml(String, int) instead.이와 관련해서는 길게 이야기할 것도 없으니 버전에 대응되도록 처리해 둔 함수를 아래에 남긴다.1234567public static Spanned fromHtml(String source) {  if (android.os.Build.VERSION.SDK_INT &amp;lt; android.os.Build.VERSION_CODES.N) {    // noinspection deprecation    return Html.fromHtml(source);  }  return Html.fromHtml(source, Html.FROM_HTML_MODE_LEGACY);}</summary>
</entry>
<entry>
<title>android Uri.getQueryParameter() 사용시 젤리빈 이전 버전에서 공백이 +로 표시되는 문제 해결</title>
<link href="https://blog.asamaru.net/2016/07/14/android-uri-getqueryparameter/" rel="alternate" type="text/html" title="android Uri.getQueryParameter() 사용시 젤리빈 이전 버전에서 공백이 +로 표시되는 문제 해결" />
<published>2016-07-14T09:53:26+09:00</published>
<updated>2016-07-14T09:53:26+09:00</updated>
<id>https://blog.asamaru.net/2016/07/14/android-uri-getqueryparameter</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/07/14/android-uri-getqueryparameter/">&lt;p&gt;&lt;a href=&quot;https://developer.android.com/reference/android/net/Uri.html#getQueryParameter%28java.lang.String%29&quot;&gt;Uri.getQueryParameter()&lt;/a&gt; 사용시 젤리빈 이전 버전을 지원해야 한다면 주의해야 할 사항이 있다. 최근에는 젤리빈 이하를 굳이 지원할 필요가 없다고 볼 수 있지만 혹시라도 지원해야 한다면 아래의 내용을 참고하자.&lt;/p&gt;

&lt;p&gt;공식 문서에서 보면 해당 함수 설명에 아래의 내용이 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Warning: Prior to Jelly Bean, this decoded the ‘+’ character as ‘+’ rather than ‘ ‘.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;젤리빈 이전 버전에서는 공백을 urlencode하여 넘겨진 &lt;code&gt;+&lt;/code&gt;를 공백으로 치환하지 않는다. 따라서 공백으로 직접 치환해 주어야 한다.&lt;/p&gt;

&lt;p&gt;호환 처리를 위해 만든 함수를 아래에 남긴다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Nullable&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getQueryParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQueryParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;JELLY_BEAN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>Uri.getQueryParameter() 사용시 젤리빈 이전 버전을 지원해야 한다면 주의해야 할 사항이 있다. 최근에는 젤리빈 이하를 굳이 지원할 필요가 없다고 볼 수 있지만 혹시라도 지원해야 한다면 아래의 내용을 참고하자.공식 문서에서 보면 해당 함수 설명에 아래의 내용이 있다.  Warning: Prior to Jelly Bean, this decoded the ‘+’ character as ‘+’ rather than ‘ ‘.젤리빈 이전 버전에서는 공백을 urlencode하여 넘겨진 +를 공백으로 치환하지 않는다. 따라서 공백으로 직접 치환해 주어야 한다.호환 처리를 위해 만든 함수를 아래에 남긴다. 1 2 3 4 5 6 7 8 91011@Nullablestatic public String getQueryParameter(@Nullable Uri uri, @NonNull String key) {  String result = null;  if (uri != null) {    result = uri.getQueryParameter(key);    if ((result != null) &amp;amp;&amp;amp; (Build.VERSION.SDK_INT &amp;lt; Build.VERSION_CODES.JELLY_BEAN)) {      result = result.replace(&amp;#39;+&amp;#39;, &amp;#39; &amp;#39;);    }  }  return result;}</summary>
</entry>
<entry>
<title>안드로이드 : TextView 터치시 가로 스크롤이 되지 않는 문제 수정(ViewPager 등에서)</title>
<link href="https://blog.asamaru.net/2016/07/12/android-textview-with-a-single-line-in-viewpager-scroll-doesnt-work/" rel="alternate" type="text/html" title="안드로이드 : TextView 터치시 가로 스크롤이 되지 않는 문제 수정(ViewPager 등에서)" />
<published>2016-07-12T11:34:06+09:00</published>
<updated>2016-07-12T11:34:06+09:00</updated>
<id>https://blog.asamaru.net/2016/07/12/android-textview-with-a-single-line-in-viewpager-scroll-doesnt-work</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/07/12/android-textview-with-a-single-line-in-viewpager-scroll-doesnt-work/">&lt;p&gt;오늘도 역시 안드로이드는 실망시키지 않는다. 오늘의 문제는 이렇다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;가로 스크롤되는 ViewPager의 Item View에 TextView가 포함되도록 구성되어 있을 경우 TextView 위에서 터치를 하면 가로 스크롤이 동작하지 않는 문제가 발생한다. 조금 더 정확히 이야기하자면 &lt;code&gt;singleLine&lt;/code&gt; 속성이 true로 설정된 TextView들이 가로 스크롤을 정상 동작하지 않도록 만든다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;처음엔 click 이벤트로 인한 문제로 생각했다. 실제로 아래에 깔린 View의 click 이벤트를 제거하니 스크롤이 정상적으로 동작했다. 그런데 다른 UI에서 동일한 형태로 사용중이나 그곳에서는 해당 문제가 발생하지 않기에 다른 원인이 있을 것이라는 판단으로 조금 더 찾아봤다.&lt;/p&gt;

&lt;p&gt;결국 원인을 찾고보니 &lt;code&gt;android:scrollHorizontally&lt;/code&gt; 속성이 true로 설정될 경우 해당 문제가 발생했다. TextView의 scroll 처리 영역과 ViewPager의 scroll 처리가 충돌하는 것이다. 그런데 나는 이 속성을 true로 주지 않았기 때문에 이상하다고 생각하고 &lt;code&gt;TextView.java&lt;/code&gt; 파일의 내부를 보다가 아래의 코드를 찾았다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TextView.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;applySingleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applyTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changeMaxLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mSingleLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applyTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;setTransformationMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SingleLineTransformationMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;changeMaxLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;setMaxLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applyTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;setTransformationMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그렇다. &lt;code&gt;singleLine&lt;/code&gt; 속성을 사용하면 자동적으로 &lt;code&gt;setHorizontallyScrolling(true);&lt;/code&gt;가 적용되는 것이다. 여담이지만 &lt;code&gt;android:scrollHorizontally&lt;/code&gt; 설정 상태를 확인하기 위해 &lt;code&gt;TextView.java&lt;/code&gt;에 있는 아래의 함수를 호출해 봤더니 해당 함수를 못찾는다. 최신 SDK에 들어간 것도 아니고 public 인데도 불구하고… 역시 이상한 안드로이드.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;어쨌든 이를 해결하기 위해 아래와 같이 style을 정의해서 TextView에 적용해 봤다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;TextViewBaseStyle&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 가로 스크롤 문제를 발생시키는 속성 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:singleLine&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:ellipsize&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;end&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 가로 스크롤 문제를 개선하기 위한 시도 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:scrollHorizontally&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:clickable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:focusable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android:focusableInTouchMode&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;결론은 안된다. &lt;code&gt;android:scrollHorizontally&lt;/code&gt; 값이 위에 보여준 코드에 의해 무시되는 결과를 가져오는 것이다.&lt;/p&gt;

&lt;p&gt;따라서 해결 방법은 아래의 방법 밖에 없다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그렇다. 프로그램에서 직접 &lt;code&gt;android:scrollHorizontally&lt;/code&gt;를 false로 설정하는 것 외에는 다른 방법이 없다. &lt;code&gt;TextView.java&lt;/code&gt; 내부에서 직접 true를 지정하고 있으므로 해당 코드를 오버라이딩 할 것이 아니라면 이 방법 밖에는 없다. 생성자 내부에서 처리 순서가 아래와 같기 때문에 &lt;code&gt;singleLine&lt;/code&gt; 속성을 사용한다면 다른 방법이 없는 것이다. 도대체 TextView 개발자는 무슨 생각으로 코드를 짠 것인가?&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;internal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;styleable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TextView_scrollHorizontally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setHorizontallyScrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;applySingleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;          
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;추가&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;조금 더 알아보니 &lt;code&gt;singleLine&lt;/code&gt; 속성 자체가 API 3에서 deprecated 되었다가 다시 풀린 것으로 보인다. 대신 &lt;code&gt;maxLines&lt;/code&gt; 속성을 권장하는 것으로 보인다. 하지만 &lt;code&gt;singleLine&lt;/code&gt; 자체도 &lt;code&gt;marquee&lt;/code&gt; 등의 기능 사용을 위해 필요한 곳이 있다. &lt;a href=&quot;http://stackoverflow.com/a/31871217&quot;&gt;android singleLine vs maxLines&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;결론은 위의 방법을 사용하거나 &lt;code&gt;singleLine&lt;/code&gt; 속성 대신 &lt;code&gt;maxLines&lt;/code&gt; 속성에 1을 주는 방법으로 &lt;code&gt;ellipsize&lt;/code&gt;를 처리하는 방법이 있다. 사실 이 부분의 경우 하위 버전의 안드로이드에서 정상 동작하지 않는 문제가 있었던 것으로 보이나 현재 시점에서 테스트 해봤을 때는 정상 동작했다. &lt;code&gt;singleLine&lt;/code&gt; 속성은 내부적으로 추가적인 처리를 하는 것으로 보이니 성능면에서도 &lt;code&gt;maxLines&lt;/code&gt;를 사용하는 것을 권장한다.&lt;/p&gt;
</content>
<summary>오늘도 역시 안드로이드는 실망시키지 않는다. 오늘의 문제는 이렇다.  가로 스크롤되는 ViewPager의 Item View에 TextView가 포함되도록 구성되어 있을 경우 TextView 위에서 터치를 하면 가로 스크롤이 동작하지 않는 문제가 발생한다. 조금 더 정확히 이야기하자면 singleLine 속성이 true로 설정된 TextView들이 가로 스크롤을 정상 동작하지 않도록 만든다.처음엔 click 이벤트로 인한 문제로 생각했다. 실제로 아래에 깔린 View의 click 이벤트를 제거하니 스크롤이 정상적으로 동작했다. 그런데 다른 UI에서 동일한 형태로 사용중이나 그곳에서는 해당 문제가 발생하지 않기에 다른 원인이 있을 것이라는 판단으로 조금 더 찾아봤다.결국 원인을 찾고보니 android:scrollHorizontally 속성이 true로 설정될 경우 해당 문제가 발생했다. TextView의 scroll 처리 영역과 ViewPager의 scroll 처리가 충돌하는 것이다. 그런데 나는 이 속성을 true로 주지 않았기 때문에 이상하다고 생각하고 TextView.java 파일의 내부를 보다가 아래의 코드를 찾았다.TextView.java 1 2 3 4 5 6 7 8 910111213141516171819private void applySingleLine(boolean singleLine, boolean applyTransformation,        boolean changeMaxLines) {    mSingleLine = singleLine;    if (singleLine) {        setLines(1);        setHorizontallyScrolling(true);        if (applyTransformation) {            setTransformationMethod(SingleLineTransformationMethod.getInstance());        }    } else {        if (changeMaxLines) {            setMaxLines(Integer.MAX_VALUE);        }        setHorizontallyScrolling(false);        if (applyTransformation) {            setTransformationMethod(null);        }    }}그렇다. singleLine 속성을 사용하면 자동적으로 setHorizontallyScrolling(true);가 적용되는 것이다. 여담이지만 android:scrollHorizontally 설정 상태를 확인하기 위해 TextView.java에 있는 아래의 함수를 호출해 봤더니 해당 함수를 못찾는다. 최신 SDK에 들어간 것도 아니고 public 인데도 불구하고… 역시 이상한 안드로이드.123public boolean getHorizontallyScrolling() {    return mHorizontallyScrolling;}어쨌든 이를 해결하기 위해 아래와 같이 style을 정의해서 TextView에 적용해 봤다. 1 2 3 4 5 6 7 8 910&amp;lt;style name=&amp;quot;TextViewBaseStyle&amp;quot;&amp;gt;  &amp;lt;!-- 가로 스크롤 문제를 발생시키는 속성 --&amp;gt;  &amp;lt;item name=&amp;quot;android:singleLine&amp;quot;&amp;gt;true&amp;lt;/item&amp;gt;  &amp;lt;item name=&amp;quot;android:ellipsize&amp;quot;&amp;gt;end&amp;lt;/item&amp;gt;  &amp;lt;!-- 가로 스크롤 문제를 개선하기 위한 시도 --&amp;gt;  &amp;lt;item name=&amp;quot;android:scrollHorizontally&amp;quot;&amp;gt;false&amp;lt;/item&amp;gt;  &amp;lt;item name=&amp;quot;android:clickable&amp;quot;&amp;gt;false&amp;lt;/item&amp;gt;  &amp;lt;item name=&amp;quot;android:focusable&amp;quot;&amp;gt;false&amp;lt;/item&amp;gt;  &amp;lt;item name=&amp;quot;android:focusableInTouchMode&amp;quot;&amp;gt;false&amp;lt;/item&amp;gt;&amp;lt;/style&amp;gt;결론은 안된다. android:scrollHorizontally 값이 위에 보여준 코드에 의해 무시되는 결과를 가져오는 것이다.따라서 해결 방법은 아래의 방법 밖에 없다.1textView.setHorizontallyScrolling(false);그렇다. 프로그램에서 직접 android:scrollHorizontally를 false로 설정하는 것 외에는 다른 방법이 없다. TextView.java 내부에서 직접 true를 지정하고 있으므로 해당 코드를 오버라이딩 할 것이 아니라면 이 방법 밖에는 없다. 생성자 내부에서 처리 순서가 아래와 같기 때문에 singleLine 속성을 사용한다면 다른 방법이 없는 것이다. 도대체 TextView 개발자는 무슨 생각으로 코드를 짠 것인가?123456789...case com.android.internal.R.styleable.TextView_scrollHorizontally:    if (a.getBoolean(attr, false)) {        setHorizontallyScrolling(true);    }    break;...applySingleLine(singleLine, singleLine, singleLine);...          추가조금 더 알아보니 singleLine 속성 자체가 API 3에서 deprecated 되었다가 다시 풀린 것으로 보인다. 대신 maxLines 속성을 권장하는 것으로 보인다. 하지만 singleLine 자체도 marquee 등의 기능 사용을 위해 필요한 곳이 있다. android singleLine vs maxLines결론은 위의 방법을 사용하거나 singleLine 속성 대신 maxLines 속성에 1을 주는 방법으로 ellipsize를 처리하는 방법이 있다. 사실 이 부분의 경우 하위 버전의 안드로이드에서 정상 동작하지 않는 문제가 있었던 것으로 보이나 현재 시점에서 테스트 해봤을 때는 정상 동작했다. singleLine 속성은 내부적으로 추가적인 처리를 하는 것으로 보이니 성능면에서도 maxLines를 사용하는 것을 권장한다.</summary>
</entry>
<entry>
<title>PHP Composer : Private Repository / Proxy / 속도 향상(Toran Proxy를 사용한)</title>
<link href="https://blog.asamaru.net/2016/07/04/php-composer-private-repository-and-proxy-toran-proxy/" rel="alternate" type="text/html" title="PHP Composer : Private Repository / Proxy / 속도 향상(Toran Proxy를 사용한)" />
<published>2016-07-04T20:09:16+09:00</published>
<updated>2016-07-04T20:09:16+09:00</updated>
<id>https://blog.asamaru.net/2016/07/04/php-composer-private-repository-and-proxy-toran-proxy</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/07/04/php-composer-private-repository-and-proxy-toran-proxy/">&lt;p&gt;오늘은 &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;에서 &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;가 아닌 private repository를 사용할 수 있도록 &lt;a href=&quot;https://toranproxy.com/&quot;&gt;Toran Proxy&lt;/a&gt;를 설정하는 방법을 설명하고자 한다. 사실 Toran Proxy 외에도 &lt;a href=&quot;https://github.com/composer/satis&quot;&gt;Satis&lt;/a&gt;라는 것도 있는데 관련된 내용은 &lt;a href=&quot;https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md&quot;&gt;Handling private packages with Satis or Toran Proxy&lt;/a&gt;을 참고하길 바란다(Satis를 조금 더 편하게 사용하기 위한 라이브러리들도 몇가지가 있다. 사실 Satis가 더 유명하나 Toran Proxy가 더 사용하기 편할 것 같아 선택했다).&lt;/p&gt;

&lt;p&gt;본 설명에 앞서 Toran Proxy를 이용함으로써 얻을 수 있는 이점부터 이야기 해보자. 내가 Toran Proxy를 설치한 이유기도 하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;private repository 운영할 수 있다.&lt;/li&gt;
  &lt;li&gt;public proxy를 사용해서 composer의 속도를 올릴 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오픈소스 프로젝트를 진행하는 것이 아닌 회사의 업무 등의 이유로 composer를 사용하는 경우라면 private project로 진행하는 것이 일반적일 것이다. 나의 경우는 &lt;a href=&quot;https://gitlab.com/&quot;&gt;gitlab.com&lt;/a&gt;에서 private project로 git를 사용하고 composer에는 아래와 같은 형식으로 사용하고 있었다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;company/project&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dev-master&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git@gitlab.com:company/project.git&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이 방법은 project를 package로 배포하지 않고 최신 소스(커밋)를 composer에서 가져오도록 한 것이다. 이 경우 별도의 composer repository가 필요하지 않다. 다만, 버전을 별도로 관리할 수 없고 &lt;code&gt;composer update&lt;/code&gt;가 느려진다. &lt;code&gt;composer update&lt;/code&gt;가 느려지는 이유는 update시마다 해당 프로젝트의 composer.json을 읽어 변경사항을 확인하기 때문이다. 이렇게 사용하는 것이 한두개라면 모르겠지만 많다면 &lt;code&gt;composer update&lt;/code&gt;를 실행 하기가 두려워질 정도로 느려진다(composer.json 파일을 매번 확인하는 데다가 &lt;a href=&quot;gitlab.com&quot;&gt;gitlab.com&lt;/a&gt; / &lt;a href=&quot;packagist.org&quot;&gt;packagist.org&lt;/a&gt;가 해외 서비스다 보니 네트워크가 느려서 더 심하다). composer 자체도 느린데 이런 문제까지 겹치니 감당 안된다. &lt;a href=&quot;/2016/03/17/php-composer-speed-up/&quot;&gt;php composer 속도 개선하기&lt;/a&gt;에서 언급한 방법들을 적용해도 이 문제에는 큰 효과가 없다.&lt;/p&gt;

&lt;p&gt;composer에 관해서는 더 많은 이야기가 있을 수 있으나 본 글의 주제를 벗어 나므로 이쯤에서 줄이고 본격적으로 Toran Proxy 설치를 설명하겠다.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Toran Proxy는 사실 유료다. 단, 개인 사용자에게는 개발자 1명까지 무료다(무료의 경우 기술 지원을 하지 않는다).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://toranproxy.com/&quot;&gt;Toran Proxy&lt;/a&gt;에서 &lt;a href=&quot;https://toranproxy.com/download&quot;&gt;download 링크&lt;/a&gt;를 누르면 다시 download 링크와 설치 방법에 대한 안내를 볼 수 있다.&lt;/p&gt;

&lt;p&gt;아래는 내가 설치한 과정을 정리한 것이다. 실제로는 bash shell 스크립트로 작성되어 있는데 중요한 부분만 다시 정리한 것으로 작업 상에 약간의 차이가 있을 수 있다. 또한, CentOS 7에서 작업 했으며 사용자는 &lt;code&gt;web&lt;/code&gt;, 사용자 그룹은 &lt;code&gt;usergroup&lt;/code&gt;이며 사용자 root directory는 &lt;code&gt;/home/web/&lt;/code&gt;이다. 따라서 자신의 환경과 맞지 않는 부분은 맞게 고쳐서 적용해야 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# 소스를 다운 받아서 /home/web/에 압축을 푼다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 최신 버전이 1.5.1이 아닐 수 있으니 다운로드 링크는 웹사이트에서 복사하는 것을 권한다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -LO https://toranproxy.com/releases/toran-proxy-v1.5.1.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar zxvf toran-proxy-v1.5.1.tgz -C /home/web/

&lt;span class=&quot;c&quot;&gt;# 해당 폴더로 가서&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/web/toran
&lt;span class=&quot;c&quot;&gt;# 기본 설정 파일을 만든다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp app/config/parameters.yml.dist app/config/parameters.yml

&lt;span class=&quot;c&quot;&gt;# 아래의 app/config/parameters.yml의 설정은 직접 해당 파일을 열어서 수정해도 된다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 나의 경우는 shell 스크립트로 제작하면서 아래와 같이 처리한 것이다.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# project hash키를 난수로 만들어 넣어준다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ hashkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;php -r &lt;span class=&quot;s2&quot;&gt;&amp;quot;echo sha1(rand());&amp;quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sed -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;s/ThisTokenIsNotSoSecret-Change-I/$hashkey/g&amp;quot;&lt;/span&gt; app/config/parameters.yml
&lt;span class=&quot;c&quot;&gt;# https를 사용하도록 설정한다. 기본은 http이나 나중에 composer에서 쉽게 사용하려면 https를 사용하는 것이 좋다.&lt;/span&gt;
sed -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;s/toran_scheme:\s*http$/toran_scheme: https/g&amp;quot;&lt;/span&gt; app/config/parameters.yml
&lt;span class=&quot;c&quot;&gt;# private repository로 사용할 도메인을 지정한다.&lt;/span&gt;
sed -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;s/toran_host:\s*example.org$/toran_host: your-private-repository.com/g&amp;quot;&lt;/span&gt; app/config/parameters.yml

&lt;span class=&quot;c&quot;&gt;# 필요한 디렉토리를 생성하고 권한을 부여한다.&lt;/span&gt;
chmod &lt;span class=&quot;m&quot;&gt;777&lt;/span&gt; app/toran app/cache app/logs web/repo app/bootstrap.php.cache
mkdir -p app/toran/cache web/repo/packagist/ web/repo/private/
chmod &lt;span class=&quot;m&quot;&gt;777&lt;/span&gt; app/toran/cache web/repo/packagist/ web/repo/private/
chown web.usergroup -R /home/web/toran
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기까지가 기본 설치 과정이다. 하지만 사용을 위해서는 설정할 것들이 많이 남았다. 이 상태에서 &lt;code&gt;php bin/cron -v&lt;/code&gt;를 실행하면 아래와 같은 결과가 나올 것이다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php bin/cron -v
You need to setup a GitHub OAuth token because Toran makes a lot of requests and will use up the API calls limit &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; it is unauthenticated
Head to https://github.com/settings/tokens/new to create a token. You need to &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; the public_repo credentials, and the repo one &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; you are going to use private repositories from GitHub with Toran.
Token:
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;안내에 설명되어 있는 것과 같이 &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;https://github.com/settings/tokens/new&lt;/a&gt; 에 가서 개인용 ssh token을 생성해서 넣어야 한다. 생성시 어떤 권한을 부여할지 선택하는 화면이 나오는데 다른 것은 필요 없고 &lt;code&gt;public_repo&lt;/code&gt;만 선택해서 생성하면 된다. 사실 일반적인 경우라면 composer 사용시 미리 받아 놓은 token이 있을테니 그걸 사용해도 된다. 보통 &lt;code&gt;~/.composer/auth.json&lt;/code&gt; 또는 &lt;code&gt;~/.config/composer/auth.json&lt;/code&gt;에 등록이 되어있다.&lt;/p&gt;

&lt;p&gt;token을 입력하면 &lt;code&gt;app/toran/composer/auth.json&lt;/code&gt;에 파일이 생성된다. 여기서는 github에 대한 token만 등록하도록 물어보는데 나의 경우처럼 gitlab.com 등의 접근이 필요하다면 아래과 같이 설정 할 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;github-oauth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;github.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[github token]&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;gitlab-oauth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;gitlab.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[gitlab token]&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기서 설정된 “gitlab token”은 github와는 조금 다르다. github의 경우는 사이트에 token을 발급해서 넣었었는데 gitlab은 동일하게 &lt;a href=&quot;https://gitlab.com/profile/personal_access_tokens&quot;&gt;사이트에서 발급&lt;/a&gt; 받은 token을 강제로 넣었더니 정상적으로 동작하지 않았다. 대신 gitlab에 관련된 repository가 추가된 후 &lt;code&gt;php bin/cron -v&lt;/code&gt;를 다시 실행하면 아래와 같이 아이디와 비밀번호를 물어보는데 여기에 입력하면 “gitlab token”이 생성되어 들어가 있다. gitlab.com에 API로 token을 만들어주나 싶어 확인해 봤더니 token은 없었다(아이디 / 비밀번호를 암호화해서 보관하는 것으로 보인다).&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php bin/cron -v
Initializing private repositories
Initializing git@gitlab.com:company/project.git

Could not fetch https://gitlab.com/api/v3/projects/company%2Fproject, enter your gitlab.com credentials to access private repos
A token will be created and stored in &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/web/toran/app/toran/composer/auth.json&amp;quot;&lt;/span&gt;, your password will never be stored
To revoke access to this token you can visit gitlab.com/profile/applications
Username:
Password:
Token successfully created
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기까지 적용 했다면 이제는 웹페이지를 열어서 최종 설정을 하고 crontab에 스케쥴을 걸면 끝난다. 하지만 웹페이지 관련 설정이 조금 복잡하다. 이유는 Toran Proxy가 shell 접근과 web 접근시 동일한 퍼미션을 요구하기 때문이다. 필요한 폴더를 모두 쓰기 권한(777)을 주는 방법이 일반적이나 생성되는 파일 마다 계속 쓰기 권한을 주는 것은 무리가 있었다(몇가지를 그렇게 맞추다가 포기했다).&lt;/p&gt;

&lt;p&gt;따라서 아래의 내용은 선택에 맡긴다. 쓰기 권한이 요구되는 상황에 맞추어 권한을 주는 방법과 아래와 같이 php-fpm에서 사용자를 변경하는 방법이 있다.&lt;/p&gt;

&lt;p&gt;일반적인 php-fpm 설정 상태라면 pool로 www(/etc/php-fpm.d/www.conf)가 설정되어 있을 것이다. 여기에 새로운 pool을 아래와 같이 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/etc/php-fpm.d/toran.conf&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;[toran]
...
user = web
group = usergroup
...
listen = /dev/shm/php5-fpm.toran.sock
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;나머지 설정은 자신의 상황에 맞게하면 된다. 우선 listen의 경우 기존 unix socket 과 겹치지 않는 파일을 지정한 것인데 기존에 unix socket를 사용하지 않고 &lt;code&gt;listen = 127.0.0.1:9000&lt;/code&gt;과 같이 사용한다면 &lt;code&gt;listen = 127.0.0.1:9001&lt;/code&gt;와 같이 다른 포트를 지정해서 사용하면 된다.
중요한 부분은 user / group 설정 부분이다. 일반적으로 nobody / nobody를 사용하지만 여기서는 web / usergroup 를 지정해서 웹 접근시에도 shell 접속과 동일한 계정을 사용하도록 한 것이다. 일반적으로 보안 상의 이유로 이렇게 사용하지는 않으나 이 방법이 제일 쉬운 방법이다(보안에 대한 문제는 방화벽 등에서 제어하기 바란다. 어짜피 private repository로 사용할 것이므로 접근 제한은 해야할 것이다).&lt;/p&gt;

&lt;p&gt;이제 php-fpm을 재시작하면 www와 toran 두가지 pool이 동작하고 있다.&lt;/p&gt;

&lt;p&gt;이제부터는 nginx 설정이다. 아래의 예시를 참고해서 설정하자. ssl 관련된 설정을 위해서 ssl 인증서를 생성해야 한다(&lt;a href=&quot;https://letsencrypt.org/&quot;&gt;letsencrypt&lt;/a&gt;를 이용하면 무료로 인증서를 받을 수 있다. 이게 어렵거나 귀찮다면 &lt;a href=&quot;https://buy.wosign.com/free/&quot;&gt;https://buy.wosign.com/free/&lt;/a&gt;를 이용하면 3년까지 사용 가능한 ssl 인증서를 받을 수 있다).&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;server {
    listen 80;
    listen 443 ssl;
    server_name  your-private-repository.com;
    root         /home/web/toran/web/;

    ssl_certificate /etc/nginx/ssl/toran/your-private-repository.com.crt;
    ssl_certificate_key /etc/nginx/ssl/toran/your-private-repository.com.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;

    location / {
        try_files $uri /app.php$is_args$args;
    }

    location ~ ^/(app|cron)\.php(/|$) {
        # The path or IP to access your PHP FCGI/FPM processes
        fastcgi_pass unix:/dev/shm/php5-fpm.toran.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;

        # Set this to &quot;off&quot; if you are not using an ssl vhost
        fastcgi_param  HTTPS              on;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이제는 거의 마지막이다. 이제 your-private-repository.com로 접속해 보면 설정화면이 나온다. 여기서는 내용을 보고 필요한 설정을 하면 된다. 대부분의 경우는 특별히 손댈 것이 없다. 다만, 맨 위의 라이센스 관련된 부분을 확인해서 개인 사용을 체크 해주고 저장하면 설정이 완료된다. 나머지 설정도 나중에 설정 화면에서 변경할 수 있다.&lt;/p&gt;

&lt;p&gt;정말 마지막. 스케쥴 설정을 해준다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crontab -e

* * * * * su - web -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;cd /home/web/toran &amp;amp;&amp;amp; php bin/cron&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 설정은 매분마다 정보를 갱신하도록 스케쥴을 설정한 것이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;설정은 모두 끝났다. 이젠 사용하면된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;company/project&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dev-master&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://your-private-repository.com/repo/private/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://your-private-repository.com/repo/packagist/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;packagist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;간단히 설명하자면 &lt;code&gt;https://your-private-repository.com/repo/packagist/&lt;/code&gt;와 &lt;code&gt;&quot;packagist&quot;: false&lt;/code&gt;는 default repository인 packagist를 제외하고 toran proxy를 추가하는 것이다. toran이 proxy / cache 처리를 해주므로 packagist는 제외해도 된다(proxy를 사용하는 경우). 이 설정을 통해 느린 packagist를 벗어나 빠른 개인 repository를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://your-private-repository.com/repo/private/&lt;/code&gt; 설정은 말 그대로 private repository를 사용하기 위한 설정이다. private repository를 설정하는 것은 관리 화면에서 &lt;code&gt;Private Repositories&lt;/code&gt; 메뉴로 들어가면 간단히 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;나의 경우처럼 git를 바로 연결해서 사용했었다면 간단히 &lt;code&gt;Add Repository&lt;/code&gt;를 눌러 Type을 &lt;code&gt;vcs&lt;/code&gt;로 선택하고 git repository 주소를 입력해주면 끝난다(참고로 설정 내용은 &lt;code&gt;app/toran/config.yml&lt;/code&gt; 파일에 저장되어 있다).&lt;/p&gt;

&lt;p&gt;단, 여기서 오류가 날 수 있다. 앞서 설명했던 것과 같이 해당 repository가 private project라면 접속 권한 요구에 대한 오류가 날 수 있다. 이 때는 &lt;code&gt;app/toran/composer/auth.json&lt;/code&gt;에 접근 정보를 추가해 주면 된다(Type을 &lt;code&gt;git&lt;/code&gt;를 선택했다면 web 계정의 &lt;code&gt;auth.json&lt;/code&gt;(&lt;code&gt;~/.composer/auth.json&lt;/code&gt; 또는 &lt;code&gt;~/.config/composer/auth.json&lt;/code&gt;)에 접근 정보를 추가해 주어야 할 수도 있다).&lt;/p&gt;

&lt;p&gt;그리고 Type를 &lt;code&gt;git&lt;/code&gt;로 선택할 수도 있는데 이 경우엔 composer에서 package를 받았을 때 git를 사용할 수 없다. &lt;code&gt;vcs&lt;/code&gt;로 설정된 경우만 git를 사용할 수 있어 commit / push가 가능하다. 목적에 따라 이를 막아야 할 경우라면 &lt;code&gt;git&lt;/code&gt;를 선택하는 것도 가능하다.&lt;/p&gt;
</content>
<summary>오늘은 Composer에서 Packagist가 아닌 private repository를 사용할 수 있도록 Toran Proxy를 설정하는 방법을 설명하고자 한다. 사실 Toran Proxy 외에도 Satis라는 것도 있는데 관련된 내용은 Handling private packages with Satis or Toran Proxy을 참고하길 바란다(Satis를 조금 더 편하게 사용하기 위한 라이브러리들도 몇가지가 있다. 사실 Satis가 더 유명하나 Toran Proxy가 더 사용하기 편할 것 같아 선택했다).본 설명에 앞서 Toran Proxy를 이용함으로써 얻을 수 있는 이점부터 이야기 해보자. 내가 Toran Proxy를 설치한 이유기도 하다.  private repository 운영할 수 있다.  public proxy를 사용해서 composer의 속도를 올릴 수 있다.오픈소스 프로젝트를 진행하는 것이 아닌 회사의 업무 등의 이유로 composer를 사용하는 경우라면 private project로 진행하는 것이 일반적일 것이다. 나의 경우는 gitlab.com에서 private project로 git를 사용하고 composer에는 아래와 같은 형식으로 사용하고 있었다.123456789&amp;quot;require&amp;quot;: {  &amp;quot;company/project&amp;quot;: &amp;quot;dev-master&amp;quot;},&amp;quot;repositories&amp;quot;: [    {      &amp;quot;type&amp;quot;: &amp;quot;git&amp;quot;,      &amp;quot;url&amp;quot;: &amp;quot;git@gitlab.com:company/project.git&amp;quot;    }]    이 방법은 project를 package로 배포하지 않고 최신 소스(커밋)를 composer에서 가져오도록 한 것이다. 이 경우 별도의 composer repository가 필요하지 않다. 다만, 버전을 별도로 관리할 수 없고 composer update가 느려진다. composer update가 느려지는 이유는 update시마다 해당 프로젝트의 composer.json을 읽어 변경사항을 확인하기 때문이다. 이렇게 사용하는 것이 한두개라면 모르겠지만 많다면 composer update를 실행 하기가 두려워질 정도로 느려진다(composer.json 파일을 매번 확인하는 데다가 gitlab.com / packagist.org가 해외 서비스다 보니 네트워크가 느려서 더 심하다). composer 자체도 느린데 이런 문제까지 겹치니 감당 안된다. php composer 속도 개선하기에서 언급한 방법들을 적용해도 이 문제에는 큰 효과가 없다.composer에 관해서는 더 많은 이야기가 있을 수 있으나 본 글의 주제를 벗어 나므로 이쯤에서 줄이고 본격적으로 Toran Proxy 설치를 설명하겠다.  Toran Proxy는 사실 유료다. 단, 개인 사용자에게는 개발자 1명까지 무료다(무료의 경우 기술 지원을 하지 않는다).Toran Proxy에서 download 링크를 누르면 다시 download 링크와 설치 방법에 대한 안내를 볼 수 있다.아래는 내가 설치한 과정을 정리한 것이다. 실제로는 bash shell 스크립트로 작성되어 있는데 중요한 부분만 다시 정리한 것으로 작업 상에 약간의 차이가 있을 수 있다. 또한, CentOS 7에서 작업 했으며 사용자는 web, 사용자 그룹은 usergroup이며 사용자 root directory는 /home/web/이다. 따라서 자신의 환경과 맞지 않는 부분은 맞게 고쳐서 적용해야 한다. 1 2 3 4 5 6 7 8 91011121314151617181920212223242526# 소스를 다운 받아서 /home/web/에 압축을 푼다.# 최신 버전이 1.5.1이 아닐 수 있으니 다운로드 링크는 웹사이트에서 복사하는 것을 권한다.$ curl -LO https://toranproxy.com/releases/toran-proxy-v1.5.1.tgz$ tar zxvf toran-proxy-v1.5.1.tgz -C /home/web/# 해당 폴더로 가서$ cd /home/web/toran# 기본 설정 파일을 만든다.$ cp app/config/parameters.yml.dist app/config/parameters.yml# 아래의 app/config/parameters.yml의 설정은 직접 해당 파일을 열어서 수정해도 된다.# 나의 경우는 shell 스크립트로 제작하면서 아래와 같이 처리한 것이다.# project hash키를 난수로 만들어 넣어준다.$ hashkey=`php -r &amp;quot;echo sha1(rand());&amp;quot;`$ sed -i &amp;quot;s/ThisTokenIsNotSoSecret-Change-I/$hashkey/g&amp;quot; app/config/parameters.yml# https를 사용하도록 설정한다. 기본은 http이나 나중에 composer에서 쉽게 사용하려면 https를 사용하는 것이 좋다.sed -i &amp;quot;s/toran_scheme:\s*http$/toran_scheme: https/g&amp;quot; app/config/parameters.yml# private repository로 사용할 도메인을 지정한다.sed -i &amp;quot;s/toran_host:\s*example.org$/toran_host: your-private-repository.com/g&amp;quot; app/config/parameters.yml# 필요한 디렉토리를 생성하고 권한을 부여한다.chmod 777 app/toran app/cache app/logs web/repo app/bootstrap.php.cachemkdir -p app/toran/cache web/repo/packagist/ web/repo/private/chmod 777 app/toran/cache web/repo/packagist/ web/repo/private/chown web.usergroup -R /home/web/toran여기까지가 기본 설치 과정이다. 하지만 사용을 위해서는 설정할 것들이 많이 남았다. 이 상태에서 php bin/cron -v를 실행하면 아래와 같은 결과가 나올 것이다.1234$ php bin/cron -vYou need to setup a GitHub OAuth token because Toran makes a lot of requests and will use up the API calls limit if it is unauthenticatedHead to https://github.com/settings/tokens/new to create a token. You need to select the public_repo credentials, and the repo one if you are going to use private repositories from GitHub with Toran.Token:안내에 설명되어 있는 것과 같이 https://github.com/settings/tokens/new 에 가서 개인용 ssh token을 생성해서 넣어야 한다. 생성시 어떤 권한을 부여할지 선택하는 화면이 나오는데 다른 것은 필요 없고 public_repo만 선택해서 생성하면 된다. 사실 일반적인 경우라면 composer 사용시 미리 받아 놓은 token이 있을테니 그걸 사용해도 된다. 보통 ~/.composer/auth.json 또는 ~/.config/composer/auth.json에 등록이 되어있다.token을 입력하면 app/toran/composer/auth.json에 파일이 생성된다. 여기서는 github에 대한 token만 등록하도록 물어보는데 나의 경우처럼 gitlab.com 등의 접근이 필요하다면 아래과 같이 설정 할 수 있다.1234{    &amp;quot;github-oauth&amp;quot;: { &amp;quot;github.com&amp;quot;: &amp;quot;[github token]&amp;quot; },    &amp;quot;gitlab-oauth&amp;quot;: { &amp;quot;gitlab.com&amp;quot;: &amp;quot;[gitlab token]&amp;quot; }}여기서 설정된 “gitlab token”은 github와는 조금 다르다. github의 경우는 사이트에 token을 발급해서 넣었었는데 gitlab은 동일하게 사이트에서 발급 받은 token을 강제로 넣었더니 정상적으로 동작하지 않았다. 대신 gitlab에 관련된 repository가 추가된 후 php bin/cron -v를 다시 실행하면 아래와 같이 아이디와 비밀번호를 물어보는데 여기에 입력하면 “gitlab token”이 생성되어 들어가 있다. gitlab.com에 API로 token을 만들어주나 싶어 확인해 봤더니 token은 없었다(아이디 / 비밀번호를 암호화해서 보관하는 것으로 보인다). 1 2 3 4 5 6 7 8 910$ php bin/cron -vInitializing private repositoriesInitializing git@gitlab.com:company/project.gitCould not fetch https://gitlab.com/api/v3/projects/company%2Fproject, enter your gitlab.com credentials to access private reposA token will be created and stored in &amp;quot;/home/web/toran/app/toran/composer/auth.json&amp;quot;, your password will never be storedTo revoke access to this token you can visit gitlab.com/profile/applicationsUsername:Password:Token successfully created여기까지 적용 했다면 이제는 웹페이지를 열어서 최종 설정을 하고 crontab에 스케쥴을 걸면 끝난다. 하지만 웹페이지 관련 설정이 조금 복잡하다. 이유는 Toran Proxy가 shell 접근과 web 접근시 동일한 퍼미션을 요구하기 때문이다. 필요한 폴더를 모두 쓰기 권한(777)을 주는 방법이 일반적이나 생성되는 파일 마다 계속 쓰기 권한을 주는 것은 무리가 있었다(몇가지를 그렇게 맞추다가 포기했다).따라서 아래의 내용은 선택에 맡긴다. 쓰기 권한이 요구되는 상황에 맞추어 권한을 주는 방법과 아래와 같이 php-fpm에서 사용자를 변경하는 방법이 있다.일반적인 php-fpm 설정 상태라면 pool로 www(/etc/php-fpm.d/www.conf)가 설정되어 있을 것이다. 여기에 새로운 pool을 아래와 같이 추가한다./etc/php-fpm.d/toran.conf[toran]...user = webgroup = usergroup...listen = /dev/shm/php5-fpm.toran.sock...나머지 설정은 자신의 상황에 맞게하면 된다. 우선 listen의 경우 기존 unix socket 과 겹치지 않는 파일을 지정한 것인데 기존에 unix socket를 사용하지 않고 listen = 127.0.0.1:9000과 같이 사용한다면 listen = 127.0.0.1:9001와 같이 다른 포트를 지정해서 사용하면 된다.중요한 부분은 user / group 설정 부분이다. 일반적으로 nobody / nobody를 사용하지만 여기서는 web / usergroup 를 지정해서 웹 접근시에도 shell 접속과 동일한 계정을 사용하도록 한 것이다. 일반적으로 보안 상의 이유로 이렇게 사용하지는 않으나 이 방법이 제일 쉬운 방법이다(보안에 대한 문제는 방화벽 등에서 제어하기 바란다. 어짜피 private repository로 사용할 것이므로 접근 제한은 해야할 것이다).이제 php-fpm을 재시작하면 www와 toran 두가지 pool이 동작하고 있다.이제부터는 nginx 설정이다. 아래의 예시를 참고해서 설정하자. ssl 관련된 설정을 위해서 ssl 인증서를 생성해야 한다(letsencrypt를 이용하면 무료로 인증서를 받을 수 있다. 이게 어렵거나 귀찮다면 https://buy.wosign.com/free/를 이용하면 3년까지 사용 가능한 ssl 인증서를 받을 수 있다).server {    listen 80;    listen 443 ssl;    server_name  your-private-repository.com;    root         /home/web/toran/web/;    ssl_certificate /etc/nginx/ssl/toran/your-private-repository.com.crt;    ssl_certificate_key /etc/nginx/ssl/toran/your-private-repository.com.key;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    ssl_prefer_server_ciphers on;    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;    location / {        try_files $uri /app.php$is_args$args;    }    location ~ ^/(app|cron)\.php(/|$) {        # The path or IP to access your PHP FCGI/FPM processes        fastcgi_pass unix:/dev/shm/php5-fpm.toran.sock;        fastcgi_split_path_info ^(.+\.php)(/.*)$;        include fastcgi_params;        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;        # Set this to &quot;off&quot; if you are not using an ssl vhost        fastcgi_param  HTTPS              on;    }}이제는 거의 마지막이다. 이제 your-private-repository.com로 접속해 보면 설정화면이 나온다. 여기서는 내용을 보고 필요한 설정을 하면 된다. 대부분의 경우는 특별히 손댈 것이 없다. 다만, 맨 위의 라이센스 관련된 부분을 확인해서 개인 사용을 체크 해주고 저장하면 설정이 완료된다. 나머지 설정도 나중에 설정 화면에서 변경할 수 있다.정말 마지막. 스케쥴 설정을 해준다.123$ crontab -e* * * * * su - web -c &amp;quot;cd /home/web/toran &amp;amp;&amp;amp; php bin/cron&amp;quot;위 설정은 매분마다 정보를 갱신하도록 스케쥴을 설정한 것이다.설정은 모두 끝났다. 이젠 사용하면된다. 1 2 3 4 5 6 7 8 910111213141516&amp;quot;require&amp;quot;: {  &amp;quot;company/project&amp;quot;: &amp;quot;dev-master&amp;quot;},&amp;quot;repositories&amp;quot;: [  {    &amp;quot;type&amp;quot;: &amp;quot;composer&amp;quot;,    &amp;quot;url&amp;quot;: &amp;quot;https://your-private-repository.com/repo/private/&amp;quot;  },  {    &amp;quot;type&amp;quot;: &amp;quot;composer&amp;quot;,    &amp;quot;url&amp;quot;: &amp;quot;https://your-private-repository.com/repo/packagist/&amp;quot;  },  {    &amp;quot;packagist&amp;quot;: false  }]    간단히 설명하자면 https://your-private-repository.com/repo/packagist/와 &quot;packagist&quot;: false는 default repository인 packagist를 제외하고 toran proxy를 추가하는 것이다. toran이 proxy / cache 처리를 해주므로 packagist는 제외해도 된다(proxy를 사용하는 경우). 이 설정을 통해 느린 packagist를 벗어나 빠른 개인 repository를 사용할 수 있다.https://your-private-repository.com/repo/private/ 설정은 말 그대로 private repository를 사용하기 위한 설정이다. private repository를 설정하는 것은 관리 화면에서 Private Repositories 메뉴로 들어가면 간단히 사용할 수 있다.나의 경우처럼 git를 바로 연결해서 사용했었다면 간단히 Add Repository를 눌러 Type을 vcs로 선택하고 git repository 주소를 입력해주면 끝난다(참고로 설정 내용은 app/toran/config.yml 파일에 저장되어 있다).단, 여기서 오류가 날 수 있다. 앞서 설명했던 것과 같이 해당 repository가 private project라면 접속 권한 요구에 대한 오류가 날 수 있다. 이 때는 app/toran/composer/auth.json에 접근 정보를 추가해 주면 된다(Type을 git를 선택했다면 web 계정의 auth.json(~/.composer/auth.json 또는 ~/.config/composer/auth.json)에 접근 정보를 추가해 주어야 할 수도 있다).그리고 Type를 git로 선택할 수도 있는데 이 경우엔 composer에서 package를 받았을 때 git를 사용할 수 없다. vcs로 설정된 경우만 git를 사용할 수 있어 commit / push가 가능하다. 목적에 따라 이를 막아야 할 경우라면 git를 선택하는 것도 가능하다.</summary>
</entry>
<entry>
<title>Mysql: Table ‘name’ is specified twice, both as a target for ‘UPDATE’ and as a separate source for data 오류 해결</title>
<link href="https://blog.asamaru.net/2016/05/30/mysql-table-name-is-specified-twice-both-as-a-target-for-update-and-as-a-separate-source-for-data/" rel="alternate" type="text/html" title="Mysql: Table &#39;name&#39; is specified twice, both as a target for &#39;UPDATE&#39; and as a separate source for data 오류 해결" />
<published>2016-05-30T20:55:10+09:00</published>
<updated>2016-05-30T20:55:10+09:00</updated>
<id>https://blog.asamaru.net/2016/05/30/mysql-table-name-is-specified-twice-both-as-a-target-for-update-and-as-a-separate-source-for-data</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/05/30/mysql-table-name-is-specified-twice-both-as-a-target-for-update-and-as-a-separate-source-for-data/">&lt;p&gt;아래의 Query는 계층형 카테고리에서 해당 노드와 상위 노드의 ‘itemCount’를 모두 1 증가 시키기 위한 Query다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`storeCategory`&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;`_lft`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`storeCategory`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;`fullCode`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ab&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`_lft`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`_rgt`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 Query 에서는 자신의 Table의 검색 결과를 자신의 데이터를 변경하는데 사용하고 있다. 이 경우 아래와 같은 오류가 난다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;Table &#39;storeCategory&#39; is specified twice, both as a target for &#39;UPDATE&#39; and as a separate source for data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이 경우는 아래와 같은 방식으로 문제를 회피할 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`storeCategory`&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;`_lft`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`storeCategory`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;`fullCode`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dummy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`_lft`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;`_rgt`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;검색 결과를 dummy table로 alias 하여 직접적인 접근을 우회한 것이다.&lt;/p&gt;
</content>
<summary>아래의 Query는 계층형 카테고리에서 해당 노드와 상위 노드의 ‘itemCount’를 모두 1 증가 시키기 위한 Query다.1UPDATE `storeCategory` SET itemCount=itemCount+1 WHERE (SELECT X.`_lft` FROM `storeCategory` as X WHERE X.`fullCode` = &amp;#39;ab&amp;#39; LIMIT 1) BETWEEN `_lft` AND `_rgt`;위 Query 에서는 자신의 Table의 검색 결과를 자신의 데이터를 변경하는데 사용하고 있다. 이 경우 아래와 같은 오류가 난다.Table &#39;storeCategory&#39; is specified twice, both as a target for &#39;UPDATE&#39; and as a separate source for data이 경우는 아래와 같은 방식으로 문제를 회피할 수 있다.1UPDATE `storeCategory` SET itemCount=itemCount+1 WHERE (SELECT * FROM (SELECT X.`_lft` FROM `storeCategory` as X WHERE X.`fullCode` = new.categoryId LIMIT 1) _dummy) BETWEEN `_lft` AND `_rgt`;검색 결과를 dummy table로 alias 하여 직접적인 접근을 우회한 것이다.</summary>
</entry>
<entry>
<title>linux에서 대량의 파일을 보다 빠르게 지우기</title>
<link href="https://blog.asamaru.net/2016/04/26/efficiently-delete-large-directory-containing-thousands-of-files/" rel="alternate" type="text/html" title="linux에서 대량의 파일을 보다 빠르게 지우기" />
<published>2016-04-26T21:53:55+09:00</published>
<updated>2016-04-26T21:53:55+09:00</updated>
<id>https://blog.asamaru.net/2016/04/26/efficiently-delete-large-directory-containing-thousands-of-files</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/04/26/efficiently-delete-large-directory-containing-thousands-of-files/">&lt;p&gt;주기적으로 실행되는 스케쥴 중에 대량의 파일을 삭제해야 하는 작업이 있었다. 데이터 수집 등의 작업으로 누적된 로그/캐시 파일들을 작업 완료 후 삭제를 해야하는 작업이었다. 그런데 파일의 수가 워낙에 많다보니 지우는 작업에 소요되는 시간이 너무 길었다. 어차피 서비스 서버가 아니고 스케쥴로 처리되는 작업이니 시간이 조금 오래 걸려도 큰 문제될 것은 없었으나 그래도 시간을 조금이라도 줄여보고자 자료를 찾아보다 &lt;a href=&quot;http://unix.stackexchange.com/questions/37329/efficiently-delete-large-directory-containing-thousands-of-files&quot;&gt;Efficiently delete large directory containing thousands of files&lt;/a&gt;라는 글을 찾았다.&lt;/p&gt;

&lt;p&gt;위 글에서 제시하는 방법은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Rsync&quot;&gt;rsync&lt;/a&gt;를 이용해서 빈 폴더와 동기화시키는 방법으로 파일들을 삭제하는 것이다. 이게 큰 차이가 있을까 싶었으나 위 글 외에도 여러 곳에서 이 방법을 제시하고 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rsync -a --delete _empty/ target_directory/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;대량의 파일을 지울 일이 있다면 한번쯤은 시도해 보는 것도 괜찮을 것 같아 소개해 본다.&lt;/p&gt;

&lt;p&gt;추가적으로 아래와 같이 병렬 삭제를 하는 것도 방법이라고 한다. 하지만 위 방법이 훨씬 나을 것으로 본다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find target_directory -maxdepth &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tac &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xargs -d &lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt; -P &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; -n &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; rm -rf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>주기적으로 실행되는 스케쥴 중에 대량의 파일을 삭제해야 하는 작업이 있었다. 데이터 수집 등의 작업으로 누적된 로그/캐시 파일들을 작업 완료 후 삭제를 해야하는 작업이었다. 그런데 파일의 수가 워낙에 많다보니 지우는 작업에 소요되는 시간이 너무 길었다. 어차피 서비스 서버가 아니고 스케쥴로 처리되는 작업이니 시간이 조금 오래 걸려도 큰 문제될 것은 없었으나 그래도 시간을 조금이라도 줄여보고자 자료를 찾아보다 Efficiently delete large directory containing thousands of files라는 글을 찾았다.위 글에서 제시하는 방법은 rsync를 이용해서 빈 폴더와 동기화시키는 방법으로 파일들을 삭제하는 것이다. 이게 큰 차이가 있을까 싶었으나 위 글 외에도 여러 곳에서 이 방법을 제시하고 있다.1$ rsync -a --delete _empty/ target_directory/대량의 파일을 지울 일이 있다면 한번쯤은 시도해 보는 것도 괜찮을 것 같아 소개해 본다.추가적으로 아래와 같이 병렬 삭제를 하는 것도 방법이라고 한다. 하지만 위 방법이 훨씬 나을 것으로 본다.1$ find target_directory -maxdepth 3 | tac | xargs -d \n -P 5 -n 5 rm -rf</summary>
</entry>
<entry>
<title>NFS로 연결된 디스크에서 Gulp Watch 사용시 파일 변경 감지가 느릴 때</title>
<link href="https://blog.asamaru.net/2016/04/26/gulp-watch-is-very-slow-to-recognize-file-modifications/" rel="alternate" type="text/html" title="NFS로 연결된 디스크에서 Gulp Watch 사용시 파일 변경 감지가 느릴 때" />
<published>2016-04-26T21:21:07+09:00</published>
<updated>2016-04-26T21:21:07+09:00</updated>
<id>https://blog.asamaru.net/2016/04/26/gulp-watch-is-very-slow-to-recognize-file-modifications</id>
<content type="html" xml:base="https://blog.asamaru.net/2016/04/26/gulp-watch-is-very-slow-to-recognize-file-modifications/">&lt;p&gt;얼마 전부터 프로젝트에서 &lt;a href=&quot;https://lumen.laravel.com/&quot;&gt;Lumen&lt;/a&gt;을 사용하고 있다. &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt;을 사용하려고 하다가 경량 프레임워크에 더 끌려서 Lumen을 사용중이다. 사실 이 부분에 관련해서 약간의 후회(고민)를 하고 있다. lumen은 아무래도 자료도 부족한 면이 있고 Laravel 모듈과의 연동이 원활하지 않은 부분이 있어서 불편한 면이 있다.&lt;/p&gt;

&lt;p&gt;Lumen에는 Laravel에서 기본적으로 제공하는 기능 중 많은 부분이 제외되어 있는데 그 중 하나가 &lt;a href=&quot;https://laravel.com/docs/master/elixir&quot;&gt;Elixir&lt;/a&gt;이다. 하지만 Elixir를 Lumen에 연결하는 것은 크게 어렵지 않다. Elixir는 &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;를 기반으로 제작되어 있다. 따라서 작업시 gulp의 watch 기능을 사용하게 되는데 나의 작업 환경인 vagrant(centos) 내에서 파일의 변경을 잘 인식하지 못했다.&lt;/p&gt;

&lt;p&gt;그래서 관련자료를 찾다가 &lt;a href=&quot;https://github.com/gulpjs/gulp/issues/448&quot;&gt;Watch is very slow to recognize file modifications&lt;/a&gt;라는 글을 찾았다. 여기서 원인을 찾았는데 원인은 바로 NFS로 연결된 디스크로 인한 문제였다.&lt;/p&gt;

&lt;p&gt;이 글에서의 해결책은 아래와 같다. 중요한 부분은 &lt;code&gt;actimeo=2&lt;/code&gt; 이다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;config.vm.synced_folder &quot;dev&quot;, &quot;/dev/vagrant&quot;,
    :nfs =&amp;gt; true,
    :mount_options =&amp;gt; [&#39;actimeo=2&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;하지만 나의 경우는 &lt;code&gt;synced_folder&lt;/code&gt;를 사용하지 않고 부팅시 직접적으로 NFS 디스크를 마운트하고 있다. 그래서 아래와 같이 적용했다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;mount -o &quot;vers=3,udp,nolock,actimeo=2&quot; 192.168.99.1:&quot;/subdev/web&quot; /home/web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그럼 여기서 &lt;code&gt;actimeo&lt;/code&gt;는 무엇인가? &lt;a href=&quot;http://linux.die.net/man/5/nfs&quot;&gt;Linux man page&lt;/a&gt;에 아래와 같이 설명되어 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;actimeo=n&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;Using actimeo sets all of acregmin, acregmax, acdirmin, and acdirmax to the same value. If this option is not specified, the NFS client uses the defaults for each of these options listed above.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;간단히 이야기하자면 위의 방법은 NFS의 파일 cache time을 2초로 줄여서 파일의 변경을 빠르게 인지할 수 있도록 해주는 것이다.&lt;/p&gt;

&lt;p&gt;다른 방법으로는 &lt;code&gt;lookupcache=none&lt;/code&gt; 옵션을 사용하는 것도 가능하다(&lt;a href=&quot;http://stackoverflow.com/a/28571327&quot;&gt;Watching files for changes on Vagrant, file modification times not updating&lt;/a&gt;
).&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;config.vm.synced_folder &quot;./&quot;, &quot;/vagrant&quot;, type: &quot;nfs&quot;, mount_options: [&quot;lookupcache=none&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>얼마 전부터 프로젝트에서 Lumen을 사용하고 있다. Laravel을 사용하려고 하다가 경량 프레임워크에 더 끌려서 Lumen을 사용중이다. 사실 이 부분에 관련해서 약간의 후회(고민)를 하고 있다. lumen은 아무래도 자료도 부족한 면이 있고 Laravel 모듈과의 연동이 원활하지 않은 부분이 있어서 불편한 면이 있다.Lumen에는 Laravel에서 기본적으로 제공하는 기능 중 많은 부분이 제외되어 있는데 그 중 하나가 Elixir이다. 하지만 Elixir를 Lumen에 연결하는 것은 크게 어렵지 않다. Elixir는 Gulp를 기반으로 제작되어 있다. 따라서 작업시 gulp의 watch 기능을 사용하게 되는데 나의 작업 환경인 vagrant(centos) 내에서 파일의 변경을 잘 인식하지 못했다.그래서 관련자료를 찾다가 Watch is very slow to recognize file modifications라는 글을 찾았다. 여기서 원인을 찾았는데 원인은 바로 NFS로 연결된 디스크로 인한 문제였다.이 글에서의 해결책은 아래와 같다. 중요한 부분은 actimeo=2 이다.config.vm.synced_folder &quot;dev&quot;, &quot;/dev/vagrant&quot;,    :nfs =&amp;gt; true,    :mount_options =&amp;gt; [&#39;actimeo=2&#39;]하지만 나의 경우는 synced_folder를 사용하지 않고 부팅시 직접적으로 NFS 디스크를 마운트하고 있다. 그래서 아래와 같이 적용했다.mount -o &quot;vers=3,udp,nolock,actimeo=2&quot; 192.168.99.1:&quot;/subdev/web&quot; /home/web그럼 여기서 actimeo는 무엇인가? Linux man page에 아래와 같이 설명되어 있다.  actimeo=n  Using actimeo sets all of acregmin, acregmax, acdirmin, and acdirmax to the same value. If this option is not specified, the NFS client uses the defaults for each of these options listed above.간단히 이야기하자면 위의 방법은 NFS의 파일 cache time을 2초로 줄여서 파일의 변경을 빠르게 인지할 수 있도록 해주는 것이다.다른 방법으로는 lookupcache=none 옵션을 사용하는 것도 가능하다(Watching files for changes on Vagrant, file modification times not updating).config.vm.synced_folder &quot;./&quot;, &quot;/vagrant&quot;, type: &quot;nfs&quot;, mount_options: [&quot;lookupcache=none&quot;]</summary>
</entry>
</feed>
