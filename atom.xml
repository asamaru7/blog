<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.0.1">Jekyll</generator>
<link href="http://blog.asamaru.net/atom.xml" rel="self" type="application/atom+xml" />
<link href="http://blog.asamaru.net/" rel="alternate" type="text/html" />
<updated>2016-02-15T20:23:21+09:00</updated>
<id>http://blog.asamaru.net/</id>
<subtitle>세상에 필요한 소스코드 한줄 남기고 가자.
</subtitle>
<author>
<name>유영재</name>
</author>
<entry>
<title>OSX에서 Microsoft RDP 접속 설정 정보 저장 위치</title>
<link href="http://blog.asamaru.net/2016/02/10/Microsoft-RDP-8-for-Mac-configuration-backup/" rel="alternate" type="text/html" title="OSX에서 Microsoft RDP 접속 설정 정보 저장 위치" />
<published>2016-02-10T20:50:19+09:00</published>
<updated>2016-02-10T20:50:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/10/Microsoft-RDP-8-for-Mac-configuration-backup</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/10/Microsoft-RDP-8-for-Mac-configuration-backup/">&lt;p&gt;개인적으로 MS를 좋아하지 않지만 MS에서 내놓은 것 중 정말 괜찮다고 생각하는 것 중 하나가 RDP(Microsoft Remote Desktop)이다. 업무용으로 맥북을 사용하다보니 윈도우가 필히 필요한 작업을 할 때는 난감하다. 기존에는 VMWare 같은 것들을 썼지만 이런 가상 PC를 띄우는 것조차 귀찮아져서 최근에는 일반 PC에 원도우를 설치해 두고 원격 데스크탑을 사용중이다. 물론 나 혼자 사용하는 것은 아니고 직장 동료들도 각각의 계정을 만들어 함께 사용중이다. 이렇게 사용하니 급할때는 스마트폰에서도 접속할 수 있고 맥북에서 접속시에도 모든 작업을 할 수 있어 무척 편리하다. 앞서 이야기에서 이것을 정말 괜찮은 프로그램이라고 이야기한 이유는 쾌적한 속도 때문이다. 다른 원격 프로그램보다 성능이 훨씬 뛰어나서 원격 데스크톱인 것을 인지하지 못할 정도다.&lt;/p&gt;

&lt;p&gt;서론이 길었는데 오늘 이야기하고자하는 것은 이게 아니다. 사실 얼마전 맥북을 신형으로 교체하면서 RDP의 설정을 이전해야 했다. 그런데 이 RDP의 최대 단점 중 하나가 설정을 한번에 추출할 수가 없다는 것이다. Export 기능이 있기는하나 하나씩 별도로 추출해야하며 비밀번호 등은 추출되지 않고, 한글로된 이름은 나중에 Import시에 다 깨진다. 역시 MS. 이래서 싫어.
나의 경우는 일반 작업뿐 아니라 구버전 IE를 테스트할 때도 원격 데스크탑을 활용하므로 설정이 아주 많은데 OSX를 설치할 때마다 옮기는 것이 여간 귀찮은 것이 아니었다. 어쨌든 이번에도 설정을 결국 다 날려먹고, 앞으로는 제대로 백업하고 싶은 마음에 조사를 조금 해봤다.&lt;/p&gt;

&lt;p&gt;결국은 백업할 방법을 &lt;a href=&quot;http://apple.stackexchange.com/a/182258&quot;&gt;Where does Microsoft RDP 8 for Mac store it’s configuration&lt;/a&gt;에서 찾았다.&lt;/p&gt;

&lt;p&gt;RDP의 plist 파일 자체를 백업하는 것이다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;ls ~/Library/Containers/com.microsoft.rdc.mac/Data/Library/Preferences/com.microsoft.rdc.mac.plist
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 글에 따르면 이 파일안에 모든 정보가 들어가 있다고 한다. 사실 확인은 해보지 않았으나 다음에 OSX를 재설치하게 되면 꼭 이 파일을 백업해서 복구에 사용하려고 한다.&lt;/p&gt;

&lt;p&gt;검증되지는 않았지만 OSX를 재설치하고자 하고 RDP를 사용중이라면 위 파일을 백업해서 사용해보길 권한다. 밑져야 본전이니.&lt;/p&gt;
</content>
<summary>개인적으로 MS를 좋아하지 않지만 MS에서 내놓은 것 중 정말 괜찮다고 생각하는 것 중 하나가 RDP(Microsoft Remote Desktop)이다. 업무용으로 맥북을 사용하다보니 윈도우가 필히 필요한 작업을 할 때는 난감하다. 기존에는 VMWare 같은 것들을 썼지만 이런 가상 PC를 띄우는 것조차 귀찮아져서 최근에는 일반 PC에 원도우를 설치해 두고 원격 데스크탑을 사용중이다. 물론 나 혼자 사용하는 것은 아니고 직장 동료들도 각각의 계정을 만들어 함께 사용중이다. 이렇게 사용하니 급할때는 스마트폰에서도 접속할 수 있고 맥북에서 접속시에도 모든 작업을 할 수 있어 무척 편리하다. 앞서 이야기에서 이것을 정말 괜찮은 프로그램이라고 이야기한 이유는 쾌적한 속도 때문이다. 다른 원격 프로그램보다 성능이 훨씬 뛰어나서 원격 데스크톱인 것을 인지하지 못할 정도다.서론이 길었는데 오늘 이야기하고자하는 것은 이게 아니다. 사실 얼마전 맥북을 신형으로 교체하면서 RDP의 설정을 이전해야 했다. 그런데 이 RDP의 최대 단점 중 하나가 설정을 한번에 추출할 수가 없다는 것이다. Export 기능이 있기는하나 하나씩 별도로 추출해야하며 비밀번호 등은 추출되지 않고, 한글로된 이름은 나중에 Import시에 다 깨진다. 역시 MS. 이래서 싫어.나의 경우는 일반 작업뿐 아니라 구버전 IE를 테스트할 때도 원격 데스크탑을 활용하므로 설정이 아주 많은데 OSX를 설치할 때마다 옮기는 것이 여간 귀찮은 것이 아니었다. 어쨌든 이번에도 설정을 결국 다 날려먹고, 앞으로는 제대로 백업하고 싶은 마음에 조사를 조금 해봤다.결국은 백업할 방법을 Where does Microsoft RDP 8 for Mac store it’s configuration에서 찾았다.RDP의 plist 파일 자체를 백업하는 것이다.1ls ~/Library/Containers/com.microsoft.rdc.mac/Data/Library/Preferences/com.microsoft.rdc.mac.plist위 글에 따르면 이 파일안에 모든 정보가 들어가 있다고 한다. 사실 확인은 해보지 않았으나 다음에 OSX를 재설치하게 되면 꼭 이 파일을 백업해서 복구에 사용하려고 한다.검증되지는 않았지만 OSX를 재설치하고자 하고 RDP를 사용중이라면 위 파일을 백업해서 사용해보길 권한다. 밑져야 본전이니.</summary>
</entry>
<entry>
<title>PHP CLI 사용자 입력(STDIN) 받기</title>
<link href="http://blog.asamaru.net/2016/02/10/php-stdin/" rel="alternate" type="text/html" title="PHP CLI 사용자 입력(STDIN) 받기" />
<published>2016-02-10T20:50:19+09:00</published>
<updated>2016-02-10T20:50:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/10/php-stdin</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/10/php-stdin/">&lt;p&gt;PHP CLI를 사용해서 Shell Script를 생성하다보면 사용자에게 어떤 데이터를 입력 받아야 상황이 발생할 수 있다. 이런 경우에 사용할 수 있는 몇가지 방법에 대해 설명하고자 한다.&lt;/p&gt;

&lt;p&gt;우선 PHP 메뉴얼 중 &lt;a href=&quot;http://php.net/manual/kr/features.commandline.io-streams.php&quot;&gt;Input/output streams&lt;/a&gt;에 있는 예시에 약간의 코드를 더해서 설명하겠다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;php://stdin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$fileContents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fclose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fileContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;우선 위 방법은 fopen을 사용해서 사용자에게 입력 받는 방법이다. 이 방법은 사용자의 입력이 완료될 때(Enter 입력시)까지 대기하게 하거나 pipe(|)를 이용해 입력이 가능하다. 위 내용을 &lt;code&gt;fopenTest.php&lt;/code&gt;로 저장했다면 아래와 같이 실행해 볼 수 있다. 그리고 1024는 입력의 최대 길이로 그 이상의 입력이 들어오면 무시된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이와 동일한 역할로 다음과 같이 사용할 수도 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// reads one line from STDIN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;처음 코드와 동일하게 동작한다. 그리고 특정 형식으로 데이터를 입력받고 싶다면 아래와 같이 사용할 수도 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// reads number from STDIN&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 코드는 실행 결과는 약간 다른점이 있으니 아래의 실행 예시를 참고하자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 입력값이 무시되어 아무값도 출력되지 않음&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
2test3 &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 2 이후의 입력값이 무시됨&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 유효한 입력으로 123이 출력됨&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; php fopenTest.php
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 유효한 입력으로 123이 출력됨&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;PHP에서는 다른 방법으로 &lt;a href=&quot;http://php.net/manual/kr/function.readline.php&quot;&gt;readline&lt;/a&gt;을 사용하는 것이 가능하다. 예를들면 아래와 같이 확인해 볼 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//get 3 commands from user&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Command: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;readline_add_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//dump history&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline_list_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//dump variables&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그런데 이 함수는 제약조건이 있다. 메뉴얼에 따르면 &lt;a href=&quot;http://php.net/manual/kr/function.readline-list-history.php&quot;&gt;readline_list_history&lt;/a&gt;는 &lt;code&gt;libreadline&lt;/code&gt;과 함께 컴파일되어야만 사용할 수 있다고 되어 있다. 그래서 위 예시는 제대로 테스트 해보지 못했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;그렇다면 사용자에게 한글자의 입력만 받고 싶다면 어떻게하면 될까? 아래의 예시를 보자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fgetc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 코드를 실행하면 한글자만 입력을 받게 되지만 한글자를 입력하고 Enter를 눌러야 한다. 그럼 그냥 한글자를 입력하면 바로 입력을 완료하고자 한다면 어떻게 할까? 아래에 그 답이 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;readline_callback_handler_install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strcasecmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;작업을 취소함&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;변경 완료&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;나의 경우엔 위 스크립트를 사용해야하는 상황이 가장 많은 것 같다. 위험한 동작을 실행하기전 다시 한번 확인하는 것이 정신 건강에 이롭다.&lt;/p&gt;
</content>
<summary>PHP CLI를 사용해서 Shell Script를 생성하다보면 사용자에게 어떤 데이터를 입력 받아야 상황이 발생할 수 있다. 이런 경우에 사용할 수 있는 몇가지 방법에 대해 설명하고자 한다.우선 PHP 메뉴얼 중 Input/output streams에 있는 예시에 약간의 코드를 더해서 설명하겠다.123456&amp;lt;?php$stdin = fopen(&amp;#39;php://stdin&amp;#39;, &amp;#39;r&amp;#39;);$fileContents = fread($stdin, 1024);fclose($stdin);echo $fileContents;우선 위 방법은 fopen을 사용해서 사용자에게 입력 받는 방법이다. 이 방법은 사용자의 입력이 완료될 때(Enter 입력시)까지 대기하게 하거나 pipe(|)를 이용해 입력이 가능하다. 위 내용을 fopenTest.php로 저장했다면 아래와 같이 실행해 볼 수 있다. 그리고 1024는 입력의 최대 길이로 그 이상의 입력이 들어오면 무시된다.123456$ php fopenTest.phptest # 입력 후 Entertest$ echo &amp;quot;test&amp;quot; | php fopenTest.phptest이와 동일한 역할로 다음과 같이 사용할 수도 있다.12&amp;lt;?phpecho trim(fgets(STDIN)); // reads one line from STDIN처음 코드와 동일하게 동작한다. 그리고 특정 형식으로 데이터를 입력받고 싶다면 아래와 같이 사용할 수도 있다.123&amp;lt;?phpfscanf(STDIN, &amp;quot;%d\n&amp;quot;, $number); // reads number from STDINecho $number;위 코드는 실행 결과는 약간 다른점이 있으니 아래의 실행 예시를 참고하자. 1 2 3 4 5 6 7 8 91011121314$ php fopenTest.phptest # 입력 후 Enter# 입력값이 무시되어 아무값도 출력되지 않음$ php fopenTest.php2test3 # 입력 후 Enter2 # 2 이후의 입력값이 무시됨$ php fopenTest.php123 # 입력 후 Enter123 # 유효한 입력으로 123이 출력됨$ echo &amp;quot;123&amp;quot; | php fopenTest.php123 # 유효한 입력으로 123이 출력됨PHP에서는 다른 방법으로 readline을 사용하는 것이 가능하다. 예를들면 아래와 같이 확인해 볼 수 있다. 1 2 3 4 5 6 7 8 9101112&amp;lt;?php//get 3 commands from userfor ($i=0; $i &amp;lt; 3; $i++) {        $line = readline(&amp;quot;Command: &amp;quot;);        readline_add_history($line);}//dump historyprint_r(readline_list_history());//dump variablesprint_r(readline_info());그런데 이 함수는 제약조건이 있다. 메뉴얼에 따르면 readline_list_history는 libreadline과 함께 컴파일되어야만 사용할 수 있다고 되어 있다. 그래서 위 예시는 제대로 테스트 해보지 못했다.그렇다면 사용자에게 한글자의 입력만 받고 싶다면 어떻게하면 될까? 아래의 예시를 보자.123&amp;lt;?phpecho &amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;;$input = fgetc(STDIN);위 코드를 실행하면 한글자만 입력을 받게 되지만 한글자를 입력하고 Enter를 눌러야 한다. 그럼 그냥 한글자를 입력하면 바로 입력을 완료하고자 한다면 어떻게 할까? 아래에 그 답이 있다. 1 2 3 4 5 6 7 8 9101112131415161718192021&amp;lt;?phpecho &amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;;readline_callback_handler_install(&amp;#39;&amp;#39;, function () {});while (true) {  $r = [STDIN];  $w = null;  $e = null;  $n = stream_select($r, $w, $e, 0);  if ($n &amp;amp;&amp;amp; in_array(STDIN, $r)) {    $c = stream_get_contents(STDIN, 1);    if (strcasecmp($c, &amp;#39;y&amp;#39;) != 0) {      echo &amp;quot;\n작업을 취소함\n&amp;quot;;      exit;    }    break;  }}echo &amp;quot;변경 완료\n&amp;quot;;나의 경우엔 위 스크립트를 사용해야하는 상황이 가장 많은 것 같다. 위험한 동작을 실행하기전 다시 한번 확인하는 것이 정신 건강에 이롭다.</summary>
</entry>
<entry>
<title>CCProxy를 사용해서 Windows Proxy Server 만들기</title>
<link href="http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy/" rel="alternate" type="text/html" title="CCProxy를 사용해서 Windows Proxy Server 만들기" />
<published>2016-02-02T14:27:19+09:00</published>
<updated>2016-02-02T14:27:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy/">&lt;p&gt;Proxy Server를 사용할 일이 생겼는데 필요한 프로그램이 윈도우용 프로그램이라 윈도우 PC에 프록서 서버를 구성해야하는 상황이었다. 정확히 이야기하자면 외부 Proxy 서비스를 사용하고 있는데 서비스 제공자가 접속 프로그램을 윈도우용으로만 제공해서 어쩔 수 없이 윈도우에서 사용중이었다. 그런데 이 Proxy 서비스를 사용해야하는 프로그램은 linux 환경에서 동작해서 기존에는 윈도우 PC에 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;로 linux 환경을 구성해서 사용했다. 그런데 문제는 proxy를 선택적으로 사용해야 하는데 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 내부에서는 가상망으로 구성되어 무조건 부모망을 사용해서 선택적으로 사용할 수 없었다. NIC을 추가해서 망을 이중화하면 되지만 여러가지 이유로 그냥 윈도우 PC는 중개(Proxy)용으로만 사용하고 별도의 서버를 구성하기로 했다. 그래서 윈도우용 Proxy Server를 구성하게된 것이다. 다시말해 Proxy를 Proxy를 통해 사용하는 것. 사설이 길었는데 이건 중요한 것은 아니고.&lt;/p&gt;

&lt;p&gt;결론적으로 몇가지 프로그램을 알아보던 중 &lt;a href=&quot;http://www.youngzsoft.net/ccproxy/&quot;&gt;CCProxy&lt;/a&gt;를 선택했다. 최대 3명의 사용자까지 무료로 사용 가능하고 NT Service로 등록 가능하며 설정이 무척 쉽다.&lt;/p&gt;

&lt;p&gt;설치 과정은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youngzsoft.net/ccproxy/&quot;&gt;CCProxy&lt;/a&gt;에서 free version을 다운 받아서 설치한다. 설치 후에 프로그램을 실행하면 방화벽에서 허용할 것인지 물어보는데 당연히 허용해야 한다. 아니면 사용할 포트만 직접 방화벽에서 열어주어도 된다.&lt;/p&gt;

&lt;p&gt;프로그램이 실행되면 “Options”를 눌러 사용할 포트만 체크해주고 “Local IP Address” 영역을 확인해 준다. “Local IP Address” 영역에는 기본적으로 “Auto Detect”가 체크되어 있는데 원하는 IP가 아니라면 체크를 해제하고 원하는 IP를 선택하면 된다. 그리고 “NT Service”를 체크해주고 “OK”를 누르면 완료.&lt;/p&gt;

&lt;p&gt;마지막으로 접속하는 Client를 제한하고 싶다면 “Account” 메뉴에서 지정하면 된다.&lt;/p&gt;

&lt;p&gt;스샷을 첨부하려 했으나 그럴 필요가 없을 정도로 간단하다.&lt;/p&gt;
</content>
<summary>Proxy Server를 사용할 일이 생겼는데 필요한 프로그램이 윈도우용 프로그램이라 윈도우 PC에 프록서 서버를 구성해야하는 상황이었다. 정확히 이야기하자면 외부 Proxy 서비스를 사용하고 있는데 서비스 제공자가 접속 프로그램을 윈도우용으로만 제공해서 어쩔 수 없이 윈도우에서 사용중이었다. 그런데 이 Proxy 서비스를 사용해야하는 프로그램은 linux 환경에서 동작해서 기존에는 윈도우 PC에 Vagrant로 linux 환경을 구성해서 사용했다. 그런데 문제는 proxy를 선택적으로 사용해야 하는데 Vagrant 내부에서는 가상망으로 구성되어 무조건 부모망을 사용해서 선택적으로 사용할 수 없었다. NIC을 추가해서 망을 이중화하면 되지만 여러가지 이유로 그냥 윈도우 PC는 중개(Proxy)용으로만 사용하고 별도의 서버를 구성하기로 했다. 그래서 윈도우용 Proxy Server를 구성하게된 것이다. 다시말해 Proxy를 Proxy를 통해 사용하는 것. 사설이 길었는데 이건 중요한 것은 아니고.결론적으로 몇가지 프로그램을 알아보던 중 CCProxy를 선택했다. 최대 3명의 사용자까지 무료로 사용 가능하고 NT Service로 등록 가능하며 설정이 무척 쉽다.설치 과정은 다음과 같다.CCProxy에서 free version을 다운 받아서 설치한다. 설치 후에 프로그램을 실행하면 방화벽에서 허용할 것인지 물어보는데 당연히 허용해야 한다. 아니면 사용할 포트만 직접 방화벽에서 열어주어도 된다.프로그램이 실행되면 “Options”를 눌러 사용할 포트만 체크해주고 “Local IP Address” 영역을 확인해 준다. “Local IP Address” 영역에는 기본적으로 “Auto Detect”가 체크되어 있는데 원하는 IP가 아니라면 체크를 해제하고 원하는 IP를 선택하면 된다. 그리고 “NT Service”를 체크해주고 “OK”를 누르면 완료.마지막으로 접속하는 Client를 제한하고 싶다면 “Account” 메뉴에서 지정하면 된다.스샷을 첨부하려 했으나 그럴 필요가 없을 정도로 간단하다.</summary>
</entry>
<entry>
<title>구형 애플 맥 미니 CentOS 7 서버로 재활용하기</title>
<link href="http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini/" rel="alternate" type="text/html" title="구형 애플 맥 미니 CentOS 7 서버로 재활용하기" />
<published>2016-02-02T12:37:47+09:00</published>
<updated>2016-02-02T12:37:47+09:00</updated>
<id>http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini/">&lt;p&gt;회사에서 맥북 프로를 새로 구매하면서 맥 미니(2012년형)가 한대 남게 되었다. 사실은 다른 이유로 2대가 남게 되었는데 한대는 예비로 그냥 두고 한대를 서버로 사용하기로 했다. 그래서 설치 방법을 찾아보다 &lt;a href=&quot;http://drewcdecker.me/2014/08/installing-centos-7-on-an-apple-mac-mini/&quot;&gt;Installing CentOS 7 on an Apple Mac Mini&lt;/a&gt;를 찾았다. 그런데 이 글에서는 &lt;a href=&quot;https://www.centos.org/&quot;&gt;CentOS 7&lt;/a&gt;을 바로 설치할 수 없어 CentOS 6.5를 설치 후 7으로 업데이트하는 방법을 안내하고 있었다. 이 방법은 개인적인 취향상 선택하기 싫었다. 그래서 조금 더 찾다보니 &lt;a href=&quot;http://www.myiphoneadventure.com/os-x/create-a-bootable-centos-usb-drive-with-a-mac-os-x&quot;&gt;Create a bootable CentOS USB drive with a Mac (OS X) for a PC&lt;/a&gt;라는 글이 있었다. 여기서는 맥 설치용 CentOS 7 부트 USB를 만드는 법을 설명하고 있어서 이 글을 참고해서 작업을 시작했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;우선 &lt;a href=&quot;https://www.centos.org/download/&quot;&gt;CentOS 7용 iso 이미지&lt;/a&gt;를 내려 받는다. 나는 minimal을 선호하기 때문에 위 글의 설명과 달리 minimal을 다운 받았다.&lt;/p&gt;

&lt;p&gt;해당 이미지가 있는 폴더에 가서 아래와 같이 dmg 파일을 우선 생성한다. 당연히 맥에서 작업해야 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hdiutil convert -format UDRW -o target.img CentOS-7-x86_64-Minimal-1511.iso

Master Boot Record&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MBR : 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
CentOS &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; x86_64                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Apple_ISO : 1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Type EF : 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
.
CentOS &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; x86_64                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Apple_ISO : 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
....................................................................................................................................................................
경과 시간: 661.204ms
속도: 912.0Mbytes/초
저장: 0.0%
created: /Users/yjyou/Downloads/target.img.dmg
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;부트 이미지를 담을 USB를 연결한 다음 아래와 같이 &lt;code&gt;diskutil&lt;/code&gt;을 사용해서 disk 번호를 확인한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil list

/dev/disk0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;internal, physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:      GUID_partition_scheme                        *500.3 GB   disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:          Apple_CoreStorage Macintosh HD            250.5 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
   4:                  Apple_HFS DATA                    248.8 GB   disk0s4
/dev/disk1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;internal, virtual&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:                  Apple_HFS Macintosh HD           +250.1 GB   disk1
                                 Logical Volume on disk0s2
                                 55AC6B2F-B3B4-450F-B4DE-E025311E9955
                                 Unencrypted
/dev/disk2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;external, physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:      GUID_partition_scheme                        *15.8 GB    disk2
   1:                        EFI EFI                     209.7 MB   disk2s1
   2:       Microsoft Basic Data USB                     15.6 GB    disk2s2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;나의 경우는 &lt;code&gt;/dev/disk2&lt;/code&gt;에 mount 되어 있었다. &lt;strong&gt;이후의 과정에서는 당연히 자신에게 맞는 disk 번호를 사용해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;우선 USB를 unmount 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; diskutil unmountDisk /dev/disk2

Unmount of all volumes on disk2 was successful
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이제는 실제로 위에 만든 dmg 이미지를 이용해서 부트 USB를 만든다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;sudo dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;target.img.dmg &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/disk2 &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1m

602+1 records in
602+1 records out
&lt;span class=&quot;m&quot;&gt;632262656&lt;/span&gt; bytes transferred in 155.872514 secs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4056281&lt;/span&gt; bytes/sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

real	2m36.025s
user	0m0.006s
sys	0m2.548s
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이미지를 만드는데 시간이 조금 소요되니 걱정하지 말고 기다리자. 그리고 생성되고 나면 해당 디스크를 인식할 수 없다고 자동적으로 추출된다. 이제는 USB를 빼서 설치할 맥 미니에 연결하고 부팅한다. 당연히 &lt;code&gt;alt/option&lt;/code&gt;를 누르고 부팅해서 부팅 디스크를 선택하는 화면으로 진입해야 한다.&lt;/p&gt;

&lt;p&gt;이후 과정을 진행하기 전에 파티션의 변경이 필요하다면 미리 맥 미니 내에서 설정해 두어야 한다. 나의 경우를 보자면 500G의 디스크를 2개의 파티션으로 나누고 복구 파티션까지 3개가 있었다. 처음엔 복구 파티션을 두고 두개의 파티션을 CentOS 설치 과정에서 묶으려고 했는데 복구 파티션이 두개 파티션 사이에 위치해 합칠 수 없었다. 그래서 맥에서 두개의 파티션을 합쳐주고 다시 설치했다. 사실은 이 과정은 복구 파티션을 두려고 했던 것인데 실제 CentOS를 설치하면서 복구 파티션도 날렸다(원하지 않았지만). 이렇게되면 위 과정이 필요없었을 수 있지만 혹시나해서 남겨둔다.&lt;/p&gt;

&lt;p&gt;이제부터는 일반적으로 CentOS를 설치하는 것과 동일하게 설치하면 된다. 설치 방법이 궁금하다면 &lt;a href=&quot;http://blog.asamaru.net/2015/10/14/centos-7-minimal-install/&quot;&gt;CentOS 7 minimal 설치&lt;/a&gt;를  참고해도 된다.&lt;/p&gt;

&lt;p&gt;마지막으로 중요한 부분이 있다. 파티션 설치시 &lt;code&gt;/boot/efi&lt;/code&gt;을 별도로 지정해야 한다는 것이다. 일반적인 설치에서는 하지 않던 작업인데 맥 미니의 경우 해당 파티션이 기본적으로 없어서 그런 것인지 지정하지 않으면 파티셔닝이 완료되지 않았다. &lt;code&gt;/boot/efi&lt;/code&gt;의 용량은 최소 100MB를 지정하도록 권장하는 것 같다. 이 부분 또한 자동 파티셔닝이 아닌 사용자 지정 파티션을 사용해서 발생한 문제일지도 모르겠다. 하지만 개인적인 생각으로 “맥 미니에서 다른 CentOS 설치시 잘 안되는 경우는 이것 때문이지 않을까?”해서 경험을 남겨둔다.&lt;/p&gt;

&lt;p&gt;이후부터는 정말 CentOS 설치와 동일하다(일단 나의 경우엔).&lt;/p&gt;
</content>
<summary>회사에서 맥북 프로를 새로 구매하면서 맥 미니(2012년형)가 한대 남게 되었다. 사실은 다른 이유로 2대가 남게 되었는데 한대는 예비로 그냥 두고 한대를 서버로 사용하기로 했다. 그래서 설치 방법을 찾아보다 Installing CentOS 7 on an Apple Mac Mini를 찾았다. 그런데 이 글에서는 CentOS 7을 바로 설치할 수 없어 CentOS 6.5를 설치 후 7으로 업데이트하는 방법을 안내하고 있었다. 이 방법은 개인적인 취향상 선택하기 싫었다. 그래서 조금 더 찾다보니 Create a bootable CentOS USB drive with a Mac (OS X) for a PC라는 글이 있었다. 여기서는 맥 설치용 CentOS 7 부트 USB를 만드는 법을 설명하고 있어서 이 글을 참고해서 작업을 시작했다.우선 CentOS 7용 iso 이미지를 내려 받는다. 나는 minimal을 선호하기 때문에 위 글의 설명과 달리 minimal을 다운 받았다.해당 이미지가 있는 폴더에 가서 아래와 같이 dmg 파일을 우선 생성한다. 당연히 맥에서 작업해야 한다. 1 2 3 4 5 6 7 8 9101112$ hdiutil convert -format UDRW -o target.img CentOS-7-x86_64-Minimal-1511.isoMaster Boot Record(MBR : 0) 읽는 중...CentOS 7 x86_64                 (Apple_ISO : 1) 읽는 중...(Type EF : 2) 읽는 중....CentOS 7 x86_64                 (Apple_ISO : 3) 읽는 중.......................................................................................................................................................................경과 시간: 661.204ms속도: 912.0Mbytes/초저장: 0.0%created: /Users/yjyou/Downloads/target.img.dmg부트 이미지를 담을 USB를 연결한 다음 아래와 같이 diskutil을 사용해서 disk 번호를 확인한다. 1 2 3 4 5 6 7 8 91011121314151617181920$ diskutil list/dev/disk0 (internal, physical):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:      GUID_partition_scheme                        *500.3 GB   disk0   1:                        EFI EFI                     209.7 MB   disk0s1   2:          Apple_CoreStorage Macintosh HD            250.5 GB   disk0s2   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3   4:                  Apple_HFS DATA                    248.8 GB   disk0s4/dev/disk1 (internal, virtual):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:                  Apple_HFS Macintosh HD           +250.1 GB   disk1                                 Logical Volume on disk0s2                                 55AC6B2F-B3B4-450F-B4DE-E025311E9955                                 Unencrypted/dev/disk2 (external, physical):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:      GUID_partition_scheme                        *15.8 GB    disk2   1:                        EFI EFI                     209.7 MB   disk2s1   2:       Microsoft Basic Data USB                     15.6 GB    disk2s2나의 경우는 /dev/disk2에 mount 되어 있었다. 이후의 과정에서는 당연히 자신에게 맞는 disk 번호를 사용해야 한다.우선 USB를 unmount 한다.123$  diskutil unmountDisk /dev/disk2Unmount of all volumes on disk2 was successful이제는 실제로 위에 만든 dmg 이미지를 이용해서 부트 USB를 만든다.123456789$ time sudo dd if=target.img.dmg of=/dev/disk2 bs=1m602+1 records in602+1 records out632262656 bytes transferred in 155.872514 secs (4056281 bytes/sec)real	2m36.025suser	0m0.006ssys	0m2.548s이미지를 만드는데 시간이 조금 소요되니 걱정하지 말고 기다리자. 그리고 생성되고 나면 해당 디스크를 인식할 수 없다고 자동적으로 추출된다. 이제는 USB를 빼서 설치할 맥 미니에 연결하고 부팅한다. 당연히 alt/option를 누르고 부팅해서 부팅 디스크를 선택하는 화면으로 진입해야 한다.이후 과정을 진행하기 전에 파티션의 변경이 필요하다면 미리 맥 미니 내에서 설정해 두어야 한다. 나의 경우를 보자면 500G의 디스크를 2개의 파티션으로 나누고 복구 파티션까지 3개가 있었다. 처음엔 복구 파티션을 두고 두개의 파티션을 CentOS 설치 과정에서 묶으려고 했는데 복구 파티션이 두개 파티션 사이에 위치해 합칠 수 없었다. 그래서 맥에서 두개의 파티션을 합쳐주고 다시 설치했다. 사실은 이 과정은 복구 파티션을 두려고 했던 것인데 실제 CentOS를 설치하면서 복구 파티션도 날렸다(원하지 않았지만). 이렇게되면 위 과정이 필요없었을 수 있지만 혹시나해서 남겨둔다.이제부터는 일반적으로 CentOS를 설치하는 것과 동일하게 설치하면 된다. 설치 방법이 궁금하다면 CentOS 7 minimal 설치를  참고해도 된다.마지막으로 중요한 부분이 있다. 파티션 설치시 /boot/efi을 별도로 지정해야 한다는 것이다. 일반적인 설치에서는 하지 않던 작업인데 맥 미니의 경우 해당 파티션이 기본적으로 없어서 그런 것인지 지정하지 않으면 파티셔닝이 완료되지 않았다. /boot/efi의 용량은 최소 100MB를 지정하도록 권장하는 것 같다. 이 부분 또한 자동 파티셔닝이 아닌 사용자 지정 파티션을 사용해서 발생한 문제일지도 모르겠다. 하지만 개인적인 생각으로 “맥 미니에서 다른 CentOS 설치시 잘 안되는 경우는 이것 때문이지 않을까?”해서 경험을 남겨둔다.이후부터는 정말 CentOS 설치와 동일하다(일단 나의 경우엔).</summary>
</entry>
<entry>
<title>SSH를 사용해서 mysqldump 하기</title>
<link href="http://blog.asamaru.net/2016/01/27/mysqldump-via-ssh/" rel="alternate" type="text/html" title="SSH를 사용해서 mysqldump 하기" />
<published>2016-01-27T19:57:47+09:00</published>
<updated>2016-01-27T19:57:47+09:00</updated>
<id>http://blog.asamaru.net/2016/01/27/mysqldump-via-ssh</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/27/mysqldump-via-ssh/">&lt;p&gt;&lt;a href=&quot;/2016/01/26/ssh-login-without-password/&quot;&gt;SSH 비밀번호 입력없이 로그인하기&lt;/a&gt;에 이어서 ssh를 이용해서 MySql 원격 서버의 데이터를 로컬로 dump 받는 방법을 소개하려고 한다.&lt;/p&gt;

&lt;p&gt;“굳이 이런 방법이 왜 필요한가?”에 대한 의문이 생길 수 있으니 상황부터 설명해야 할 것 같다.
mysqldump를 사용하고자 할 경우 mysql client가 설치되어 있어야 한다. CentOS기준으로 mysql은 “mysql”, mariadb 기준으로 보자면 “MariaDB-client” 패키지가 설치되어 있어야 한다. 그런데 이 패키지가 설치되지 않은 상태에서 mysqldump를 사용하고자 하는 것이다. 간단히 생각하면 위 패키지를 설치하면 끝인데 굳이 자주 사용되지 않을 기능 때문에 패키지를 설치하고 싶지 않다면 아래에 소개할 내용이 필요하다. 굳이 필요할까 싶지만 성격 문제인지 패키지를 설치하는 것이 싫어서 이렇게 하고 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;ssh &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;mysqldump -uroot --default-character-set=utf8 --skip-triggers --compress [db name] [table name]&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;save file&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;/2016/01/26/ssh-login-without-password/&quot;&gt;SSH 비밀번호 입력없이 로그인하기&lt;/a&gt;에서 설명했던 공개키 등록이 선행되어 있어야 한다. 아니면 sshpass를 활용하는 방법도 당연히 가능하다.&lt;/p&gt;

&lt;p&gt;지난 글과 겹치는 내용이긴하나 이렇게도 사용할 수 있다는 소개 차원에서 글을 남긴다.&lt;/p&gt;
</content>
<summary>SSH 비밀번호 입력없이 로그인하기에 이어서 ssh를 이용해서 MySql 원격 서버의 데이터를 로컬로 dump 받는 방법을 소개하려고 한다.“굳이 이런 방법이 왜 필요한가?”에 대한 의문이 생길 수 있으니 상황부터 설명해야 할 것 같다.mysqldump를 사용하고자 할 경우 mysql client가 설치되어 있어야 한다. CentOS기준으로 mysql은 “mysql”, mariadb 기준으로 보자면 “MariaDB-client” 패키지가 설치되어 있어야 한다. 그런데 이 패키지가 설치되지 않은 상태에서 mysqldump를 사용하고자 하는 것이다. 간단히 생각하면 위 패키지를 설치하면 끝인데 굳이 자주 사용되지 않을 기능 때문에 패키지를 설치하고 싶지 않다면 아래에 소개할 내용이 필요하다. 굳이 필요할까 싶지만 성격 문제인지 패키지를 설치하는 것이 싫어서 이렇게 하고 있다.1ssh [user]@[host] &amp;quot;mysqldump -uroot --default-character-set=utf8 --skip-triggers --compress [db name] [table name]&amp;quot; &amp;gt; [save file]SSH 비밀번호 입력없이 로그인하기에서 설명했던 공개키 등록이 선행되어 있어야 한다. 아니면 sshpass를 활용하는 방법도 당연히 가능하다.지난 글과 겹치는 내용이긴하나 이렇게도 사용할 수 있다는 소개 차원에서 글을 남긴다.</summary>
</entry>
<entry>
<title>SSH 비밀번호 입력없이 로그인하기</title>
<link href="http://blog.asamaru.net/2016/01/26/ssh-login-without-password/" rel="alternate" type="text/html" title="SSH 비밀번호 입력없이 로그인하기" />
<published>2016-01-26T21:15:08+09:00</published>
<updated>2016-01-26T21:15:08+09:00</updated>
<id>http://blog.asamaru.net/2016/01/26/ssh-login-without-password</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/26/ssh-login-without-password/">&lt;p&gt;ssh 사용시 매번 비밀번호를 입력하는 것은 귀찮은 일이다. 그럼에도 불구하고 ssh의 기본 기능에 비밀번호를 미리 입력하는 기능을 제공하지 않는 것은 보안 상의 이유 때문일 것이다. 하지만 비밀번호를 입력하는 귀찮음을 해소하는 것 외에도 스케쥴링 처리 스크립트 등에서 사용자의 비밀번호 입력없이 ssh 접속을 해야할 경우가 있다. 이런 경우에 대비해서 ssh에서는 클라이언트의 공개키를 원격 서버에 미리 등록 시켜두는 방식으로 비밀번호 없이 접속할 수 있는 방법을 제공한다. 사실 이 방법이 보안 상으로도 안전한 편이고 등록하는 과정도 크게 복잡하지 않으므로 가장 권장되는 방법이라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;그렇다고 이 방법 외에는 대안이 없는 것은 아니다. &lt;code&gt;expect&lt;/code&gt; 명령을 이용해서 비밀번호 입력을 자동화하는 방법과 &lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;를 사용하는 방법이 있다. 사실 &lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;를 몰랐을 때는 &lt;code&gt;expect&lt;/code&gt;를 주로 사용했는데 &lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;를 사용하면 훨씬 쉽게 다양한 일을 할 수 있다.&lt;/p&gt;

&lt;p&gt;자.. 이제부터 하나씩 방법을 설명하고자 한다. 아래는 CentOS 기준이며 기타 리눅스에서도 거의 동일한 것으로 알고 있다.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 공개키 등록 방식&lt;/h3&gt;

&lt;p&gt;우선 &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;에 파일이 존재하는지 확인한다. 없다면 아래와 같이 &lt;code&gt;ssh-keygen&lt;/code&gt;을 사용해서 개인용 개인키/공개키를 생성한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 명령을 입력하면 몇가지를 물어보는데 특별한 이유가 없다면 그냥 엔터를 계속 눌러서 완료하면 된다.
이렇게 생성하고나면 개인키는 &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;로 공개키는 &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;로 생성된다.&lt;/p&gt;

&lt;p&gt;이제는 공개키를 접속하려는 원격 서버에 등록해야 한다.
아래와 같이 직접 해당 서버로 복사하는 방법이 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;scp ~/.ssh/id_rsa.pub &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그런데 이렇게하면 기존 파일이 존재할 경우 덮어쓰게 되므로 권장하지 않는다. 대신 아래와 같이 &lt;code&gt;ssh-copy-id&lt;/code&gt;를 사용하는 것을 권장한다. &lt;code&gt;ssh-copy-id&lt;/code&gt;를 사용하면 원격 서버에 &lt;code&gt;authorized_keys&lt;/code&gt; 파일이 없다면 생성해주고 있다면 공개키를 추가해 준다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기까지 완료 했다면 비밀번호 없이 ssh 접속이 가능해야 한다.
그런데 간혹 작업을 완료했음에도 불구하고 계속 비밀번호를 물어보는 경우가 있다. 그런 경우는 대부분 원격 서버의 &lt;code&gt;authorized_keys&lt;/code&gt; 파일 퍼미션 문제다. 원격 서버에서 퍼미션을 아래와 같은지 확인하고 맞지 않다면 변경해 준다. 대부분의 경우는 접속 문제가 해결된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;chmod &lt;span class=&quot;m&quot;&gt;700&lt;/span&gt; ~/.ssh/
chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;sshpasshttpsourceforgenetprojectssshpass--&quot;&gt;2. &lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;를 사용하는 방식&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;는 ssh와는 직접적인 관련이 없는 프로그램으로 별도 설치가 필요하다. 설치되어 있지 않다면 아래와 같이 설치한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;yum --enablerepo&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;epel -y install sshpass
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;기본적인 사용은 아래와 같이 할 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;sshpass -p&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;password&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ssh -o &lt;span class=&quot;nv&quot;&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;no &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 방식은 서두에서도 이야기 했듯이 비밀번호가 명령 상에 노출되므로 보안상으로는 좋지는 않다. 하지만 필요할 때가 있으니 알아두면 요긴하게 쓰이리라 생각한다. 그리고 &lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;는 접속시 비밀번호를 자동 입력해주는 역할 외에 다음과 같은 일도 할 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# 원격 서버에서 command 실행&lt;/span&gt;
sshpass -p&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;password&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ssh -o &lt;span class=&quot;nv&quot;&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;no &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 원격 서버로 test.txt 파일 복사(scp)&lt;/span&gt;
sshpass -p&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;password&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; scp -o &lt;span class=&quot;nv&quot;&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;no test.txt &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:~/test.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;expect--&quot;&gt;3. expect를 사용하는 방식&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/projects/sshpass/&quot;&gt;sshpass&lt;/a&gt;를 사용하면 이 방식은 크게 의미가 없다. 하지만 sshpass를 사용할 수 없는 상황이다. expect를 활용해서 다른 곳에 응용할 수 있으니 참고 차원에서 ssh 자동 로그인 스크립트를 남긴다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sshlogin&lt;/strong&gt; 파일로 아래의 내용을 저장하고 실행 권한을 준다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#! /usr/bin/expect&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;idNhost &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lrange &lt;span class=&quot;nv&quot;&gt;$argv&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; 0&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;password &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lindex &lt;span class=&quot;nv&quot;&gt;$argv&lt;/span&gt; 1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
spawn ssh &lt;span class=&quot;nv&quot;&gt;$idNhost&lt;/span&gt;
expect -re &lt;span class=&quot;s2&quot;&gt;&amp;quot;password: &amp;quot;&lt;/span&gt;
send &lt;span class=&quot;s2&quot;&gt;&amp;quot;$password\r&amp;quot;&lt;/span&gt;
interact
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;사용법은 다음과 같다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;./sshlogin &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[password]&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>ssh 사용시 매번 비밀번호를 입력하는 것은 귀찮은 일이다. 그럼에도 불구하고 ssh의 기본 기능에 비밀번호를 미리 입력하는 기능을 제공하지 않는 것은 보안 상의 이유 때문일 것이다. 하지만 비밀번호를 입력하는 귀찮음을 해소하는 것 외에도 스케쥴링 처리 스크립트 등에서 사용자의 비밀번호 입력없이 ssh 접속을 해야할 경우가 있다. 이런 경우에 대비해서 ssh에서는 클라이언트의 공개키를 원격 서버에 미리 등록 시켜두는 방식으로 비밀번호 없이 접속할 수 있는 방법을 제공한다. 사실 이 방법이 보안 상으로도 안전한 편이고 등록하는 과정도 크게 복잡하지 않으므로 가장 권장되는 방법이라고 할 수 있다.그렇다고 이 방법 외에는 대안이 없는 것은 아니다. expect 명령을 이용해서 비밀번호 입력을 자동화하는 방법과 sshpass를 사용하는 방법이 있다. 사실 sshpass를 몰랐을 때는 expect를 주로 사용했는데 sshpass를 사용하면 훨씬 쉽게 다양한 일을 할 수 있다.자.. 이제부터 하나씩 방법을 설명하고자 한다. 아래는 CentOS 기준이며 기타 리눅스에서도 거의 동일한 것으로 알고 있다.1. 공개키 등록 방식우선 ~/.ssh/id_rsa.pub에 파일이 존재하는지 확인한다. 없다면 아래와 같이 ssh-keygen을 사용해서 개인용 개인키/공개키를 생성한다.1ssh-keygen -t rsa위 명령을 입력하면 몇가지를 물어보는데 특별한 이유가 없다면 그냥 엔터를 계속 눌러서 완료하면 된다.이렇게 생성하고나면 개인키는 ~/.ssh/id_rsa로 공개키는 ~/.ssh/id_rsa.pub로 생성된다.이제는 공개키를 접속하려는 원격 서버에 등록해야 한다.아래와 같이 직접 해당 서버로 복사하는 방법이 있다.1scp ~/.ssh/id_rsa.pub [user]@[host]:~/.ssh/authorized_keys그런데 이렇게하면 기존 파일이 존재할 경우 덮어쓰게 되므로 권장하지 않는다. 대신 아래와 같이 ssh-copy-id를 사용하는 것을 권장한다. ssh-copy-id를 사용하면 원격 서버에 authorized_keys 파일이 없다면 생성해주고 있다면 공개키를 추가해 준다.1ssh-copy-id -i ~/.ssh/id_rsa.pub [user]@[host]여기까지 완료 했다면 비밀번호 없이 ssh 접속이 가능해야 한다.그런데 간혹 작업을 완료했음에도 불구하고 계속 비밀번호를 물어보는 경우가 있다. 그런 경우는 대부분 원격 서버의 authorized_keys 파일 퍼미션 문제다. 원격 서버에서 퍼미션을 아래와 같은지 확인하고 맞지 않다면 변경해 준다. 대부분의 경우는 접속 문제가 해결된다.12chmod 700 ~/.ssh/chmod 600 ~/.ssh/authorized_keys2. sshpass를 사용하는 방식sshpass는 ssh와는 직접적인 관련이 없는 프로그램으로 별도 설치가 필요하다. 설치되어 있지 않다면 아래와 같이 설치한다.1yum --enablerepo=epel -y install sshpass기본적인 사용은 아래와 같이 할 수 있다.1sshpass -p[password] ssh -o StrictHostKeyChecking=no [user]@[host]위 방식은 서두에서도 이야기 했듯이 비밀번호가 명령 상에 노출되므로 보안상으로는 좋지는 않다. 하지만 필요할 때가 있으니 알아두면 요긴하게 쓰이리라 생각한다. 그리고 sshpass는 접속시 비밀번호를 자동 입력해주는 역할 외에 다음과 같은 일도 할 수 있다.1234# 원격 서버에서 command 실행sshpass -p[password] ssh -o StrictHostKeyChecking=no [user]@[host] [command]# 원격 서버로 test.txt 파일 복사(scp)sshpass -p[password] scp -o StrictHostKeyChecking=no test.txt [user]@[host]:~/test.txt3. expect를 사용하는 방식sshpass를 사용하면 이 방식은 크게 의미가 없다. 하지만 sshpass를 사용할 수 없는 상황이다. expect를 활용해서 다른 곳에 응용할 수 있으니 참고 차원에서 ssh 자동 로그인 스크립트를 남긴다.sshlogin 파일로 아래의 내용을 저장하고 실행 권한을 준다.1234567#! /usr/bin/expectset idNhost [lrange $argv 0 0]set password [lindex $argv 1]spawn ssh $idNhostexpect -re &amp;quot;password: &amp;quot;send &amp;quot;$password\r&amp;quot;interact사용법은 다음과 같다.1./sshlogin [user]@[host] &amp;quot;[password]&amp;quot;</summary>
</entry>
<entry>
<title>안드로이드에서 Soft Navigation Bar 검사하기</title>
<link href="http://blog.asamaru.net/2016/01/20/detect-soft-navigation-bar-availability-in-android-device-progmatically/" rel="alternate" type="text/html" title="안드로이드에서 Soft Navigation Bar 검사하기" />
<published>2016-01-20T20:36:18+09:00</published>
<updated>2016-01-20T20:36:18+09:00</updated>
<id>http://blog.asamaru.net/2016/01/20/detect-soft-navigation-bar-availability-in-android-device-progmatically</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/20/detect-soft-navigation-bar-availability-in-android-device-progmatically/">&lt;p&gt;안드로이드 기기 중에는 Soft Navigation을 사용하는 것들이 있다. 보통은 뒤로, 메뉴, 홈 버튼 등이 스크린과 분리되어 물리적 버튼으로 구성되어 있으나 이 버튼들이 스크린 하단 영역에 포함되어 있는 경우다. 이런 기기에서는 상황에 딸 하단의 버튼 영역을 숨겨 보다 넓은 공간을 스크린으로 활용할 수 있다.&lt;/p&gt;

&lt;p&gt;여기서 다루고자 하는 것은 이런 물리 버튼을 가진 기기와 Soft Navigation을 사용하는 기기를 구분하는 방법이다.&lt;/p&gt;

&lt;p&gt;관련 정보를 찾아보면 명확하게 구분할 수 있는 방법을 제시하는 곳을 찾기가 어렵다(안드로이드에서 기기에 관련해서 명확한 구분을 할 수 있는 것을 찾는게 더 빠를지도). 그래서 몇가지를 조사해서 적용한 내용을 남기려고 한다. 이 부분은 현재 테스트할 수 있었던 기기에서만 확인한 정보로 부정확할 수 있음을 양해 바란다(나도 정말 정확한 방법을 찾고 싶다).&lt;/p&gt;

&lt;p&gt;우선 아래의 코드를 보자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mChildOfContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getIdentifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;config_showNavigationBar&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;android&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mChildOfContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ICE_CREAM_SANDWICH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasBackKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyCharacterMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deviceHasKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KEYCODE_BACK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasHomeKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyCharacterMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deviceHasKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KEYCODE_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasBackKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasHomeKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mChildOfContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasPermanentMenuKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 코드는 처음에 정리했던 코드다.&lt;/p&gt;

&lt;p&gt;1차적으로 &lt;code&gt;config_showNavigationBar&lt;/code&gt; 속성값을 이용해서 사용 유무를 판별한다. 개인적으로 그나마 가장 명시적인 값이라고 생각한다. 문제는 해당 값이 없는 기기가 있다거나 나중에 OS 버전이 올라가면서 속성값이 변경될 우려가 있다는 것이다. 그래서 이 부분을 보완하고자 다른 코드를 덧붙였다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/intl/ko/reference/android/view/ViewConfiguration.html#hasPermanentMenuKey%28%29&quot;&gt;hasPermanentMenuKey()&lt;/a&gt;를 사용하는 방법도 API 14 이상이라면 유용하다고 생각했으나 부정확했다. 갤럭시 노트 3에서 잘못된 값이 나왔다. 실제로 조사 결과 예상과 다른 값을 반환하는 경우가 다수 있었다(정확하게는 PermanentMenuKey와 Soft Navigation은 직접적인 관련이 없다는 것이 설명이다). 따라서 이 값은 사용이 부적절하다고 보인다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/intl/ko/reference/android/view/KeyCharacterMap.html&quot;&gt;KeyCharacterMap&lt;/a&gt;를 사용하는 방법은 잘 동작하는 것으로 보이나 정확한 방법이라고는 못하겠다.&lt;/p&gt;

&lt;p&gt;그래서 실제 사용하는 코드는 &lt;a href=&quot;http://developer.android.com/intl/ko/reference/android/view/ViewConfiguration.html#hasPermanentMenuKey%28%29&quot;&gt;hasPermanentMenuKey()&lt;/a&gt;를 제외하고 아래와 같이 사용하고 있다(현재까지는).&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mChildOfContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getIdentifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;config_showNavigationBar&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;android&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mChildOfContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasBackKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyCharacterMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deviceHasKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KEYCODE_BACK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasHomeKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyCharacterMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deviceHasKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KEYCODE_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;useSoftNavigation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasBackKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasHomeKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;또 다른 방법으로 Screen Size를 이용한 Navigation Bar의 높이를 구하는 방법이 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNavigationBarSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAppUsableScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realScreenSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRealScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// navigation bar on the right&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// navigation bar at the bottom&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appUsableSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// navigation bar is not present&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAppUsableScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WINDOW_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Display&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRealScreenSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WindowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WINDOW_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Display&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRealSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getRawWidth&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getRawHeight&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IllegalAccessException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvocationTargetException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NoSuchMethodException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;개인적으로는 스크린 사이즈를 이용하는 방법은 가급적 사용을 피하고 있다. OS 버전이 올라가는 경우와 기기의 다양성을 생각할 때 안정적으로 동작할 것이라는 생각이 들지 않기 때문이다. 하지만 대안이 없다면 사용을 고려하려고 한다.&lt;/p&gt;

&lt;p&gt;현재까지는 위 방법으로 필요한 요건을 만족하고 있으니 당분간 지켜볼 예정이다. 항상 그러하듯 안드로이드는 개발이 문제가 아니라 파편화된 상황을 고려하는 작업이 가장 큰 골치거리인 것 같다.&lt;/p&gt;
</content>
<summary>안드로이드 기기 중에는 Soft Navigation을 사용하는 것들이 있다. 보통은 뒤로, 메뉴, 홈 버튼 등이 스크린과 분리되어 물리적 버튼으로 구성되어 있으나 이 버튼들이 스크린 하단 영역에 포함되어 있는 경우다. 이런 기기에서는 상황에 딸 하단의 버튼 영역을 숨겨 보다 넓은 공간을 스크린으로 활용할 수 있다.여기서 다루고자 하는 것은 이런 물리 버튼을 가진 기기와 Soft Navigation을 사용하는 기기를 구분하는 방법이다.관련 정보를 찾아보면 명확하게 구분할 수 있는 방법을 제시하는 곳을 찾기가 어렵다(안드로이드에서 기기에 관련해서 명확한 구분을 할 수 있는 것을 찾는게 더 빠를지도). 그래서 몇가지를 조사해서 적용한 내용을 남기려고 한다. 이 부분은 현재 테스트할 수 있었던 기기에서만 확인한 정보로 부정확할 수 있음을 양해 바란다(나도 정말 정확한 방법을 찾고 싶다).우선 아래의 코드를 보자. 1 2 3 4 5 6 7 8 9101112int id = mChildOfContent.getContext().getResources().getIdentifier(&amp;quot;config_showNavigationBar&amp;quot;, &amp;quot;bool&amp;quot;, &amp;quot;android&amp;quot;);if (id &amp;gt; 0) {	useSoftNavigation = mChildOfContent.getContext().getResources().getBoolean(id);} else {	if (Build.VERSION.SDK_INT &amp;lt; Build.VERSION_CODES.ICE_CREAM_SANDWICH) {		boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);		boolean hasHomeKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_HOME);		useSoftNavigation = (!(hasBackKey &amp;amp;&amp;amp; hasHomeKey));	} else {		useSoftNavigation = ViewConfiguration.get(mChildOfContent.getContext()).hasPermanentMenuKey();	}}위 코드는 처음에 정리했던 코드다.1차적으로 config_showNavigationBar 속성값을 이용해서 사용 유무를 판별한다. 개인적으로 그나마 가장 명시적인 값이라고 생각한다. 문제는 해당 값이 없는 기기가 있다거나 나중에 OS 버전이 올라가면서 속성값이 변경될 우려가 있다는 것이다. 그래서 이 부분을 보완하고자 다른 코드를 덧붙였다.hasPermanentMenuKey()를 사용하는 방법도 API 14 이상이라면 유용하다고 생각했으나 부정확했다. 갤럭시 노트 3에서 잘못된 값이 나왔다. 실제로 조사 결과 예상과 다른 값을 반환하는 경우가 다수 있었다(정확하게는 PermanentMenuKey와 Soft Navigation은 직접적인 관련이 없다는 것이 설명이다). 따라서 이 값은 사용이 부적절하다고 보인다.KeyCharacterMap를 사용하는 방법은 잘 동작하는 것으로 보이나 정확한 방법이라고는 못하겠다.그래서 실제 사용하는 코드는 hasPermanentMenuKey()를 제외하고 아래와 같이 사용하고 있다(현재까지는).123456789boolean useSoftNavigation;int id = mChildOfContent.getContext().getResources().getIdentifier(&amp;quot;config_showNavigationBar&amp;quot;, &amp;quot;bool&amp;quot;, &amp;quot;android&amp;quot;);if (id &amp;gt; 0) {	useSoftNavigation = mChildOfContent.getContext().getResources().getBoolean(id);} else {	boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);	boolean hasHomeKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_HOME);	useSoftNavigation = (!(hasBackKey &amp;amp;&amp;amp; hasHomeKey));}또 다른 방법으로 Screen Size를 이용한 Navigation Bar의 높이를 구하는 방법이 있다. 1 2 3 4 5 6 7 8 9101112131415161718192021222324252627282930313233343536373839404142public static Point getNavigationBarSize(Context context) {    Point appUsableSize = getAppUsableScreenSize(context);    Point realScreenSize = getRealScreenSize(context);    // navigation bar on the right    if (appUsableSize.x &amp;lt; realScreenSize.x) {        return new Point(realScreenSize.x - appUsableSize.x, appUsableSize.y);    }    // navigation bar at the bottom    if (appUsableSize.y &amp;lt; realScreenSize.y) {        return new Point(appUsableSize.x, realScreenSize.y - appUsableSize.y);    }    // navigation bar is not present    return new Point();}public static Point getAppUsableScreenSize(Context context) {    WindowManager windowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);    Display display = windowManager.getDefaultDisplay();    Point size = new Point();    display.getSize(size);    return size;}public static Point getRealScreenSize(Context context) {    WindowManager windowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);    Display display = windowManager.getDefaultDisplay();    Point size = new Point();    if (Build.VERSION.SDK_INT &amp;gt;= 17) {        display.getRealSize(size);    } else if (Build.VERSION.SDK_INT &amp;gt;= 14) {        try {            size.x = (Integer) Display.class.getMethod(&amp;quot;getRawWidth&amp;quot;).invoke(display);            size.y = (Integer) Display.class.getMethod(&amp;quot;getRawHeight&amp;quot;).invoke(display);        } catch (IllegalAccessException e) {} catch (InvocationTargetException e) {} catch (NoSuchMethodException e) {}    }    return size;}개인적으로는 스크린 사이즈를 이용하는 방법은 가급적 사용을 피하고 있다. OS 버전이 올라가는 경우와 기기의 다양성을 생각할 때 안정적으로 동작할 것이라는 생각이 들지 않기 때문이다. 하지만 대안이 없다면 사용을 고려하려고 한다.현재까지는 위 방법으로 필요한 요건을 만족하고 있으니 당분간 지켜볼 예정이다. 항상 그러하듯 안드로이드는 개발이 문제가 아니라 파편화된 상황을 고려하는 작업이 가장 큰 골치거리인 것 같다.</summary>
</entry>
<entry>
<title>linux buffer/cache 비우기</title>
<link href="http://blog.asamaru.net/2016/01/19/centos-emptying-the-buffers-cache/" rel="alternate" type="text/html" title="linux buffer/cache 비우기" />
<published>2016-01-19T21:45:22+09:00</published>
<updated>2016-01-19T21:45:22+09:00</updated>
<id>http://blog.asamaru.net/2016/01/19/centos-emptying-the-buffers-cache</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/19/centos-emptying-the-buffers-cache/">&lt;p&gt;예전에 &lt;a href=&quot;/2015/10/02/linux-how-to-clear-memory-swap/&quot;&gt;리눅스에서 swap 메모리 초기화&lt;/a&gt;에서 swap 메모리를 비우는 방법을 남겼다. 이번엔 swap이 아닌 “buff/cache”를 비우는 방법을 남기고자 한다.&lt;/p&gt;

&lt;p&gt;linux에서 &lt;code&gt;top&lt;/code&gt; 또는 &lt;code&gt;free&lt;/code&gt; 명령으로 메모리 상황을 보면 “buff/cache” 항목이 있다. 이 부분은 실제로 직접 사용하고 있는 메모리가 아니라 말그대로 버퍼와 캐시에 사용된 메모리를 뜻한다. 그렇다면 “굳이 왜 이것을 비우려고 하는가?”하는 의문이 생길 수 있다.&lt;/p&gt;

&lt;p&gt;일반적으로 캐시는 느린 장치의 데이터를 빠른 장치에 임시 보관해두고 사용함으로써 성능을 높이는 것이 목적이다. 따라서 캐시는 당연히 사용하는게 좋다. 하지만 hit(적중률)가 낮은 경우엔 캐시를 사용하는 것이 부정적인 영향을 미칠 수 있다. 빠른 장치는 당연히 공간이 한정되어 있기 때문에 모든 정보를 캐시할 수 없으므로 캐시를 관리해야 한다. 이 과정에서 발생하는 비용이 캐시를 사용하는 것보다 크다면 캐시는 사용하지 않는 것이 좋다는 것이다. 캐시에 관한 자세한 내용은 여기서 다루고자하는 것이 아니니 이정도만 설명하고 넘어가자.&lt;/p&gt;

&lt;p&gt;실질적으로 이것이 어디에 필요한지에 대해 알아보자.&lt;/p&gt;

&lt;p&gt;linux에서는 기본적으로 디스크 상의 파일을 읽을 경우 해당 파일을 닫아도 free 메모리로 모두가 즉시 반환되지 않는다. 이유는 이 파일의 정보를 다음 사용에 대비해 cache하기 때문이다. 보다 자세한 내용을 확인하고 싶다면 &lt;a href=&quot;https://wiki.kldp.org/Translations/html/The_Linux_Kernel-KLDP/tlk3.html&quot;&gt;메모리 관리 (Memory Management)&lt;/a&gt;를 참고하자. 이런 파일의 cache와 관련하여 os / mysql 등 여러 분야의 성능 튜닝 내용 등을 쉽게 찾을 수 있다.&lt;/p&gt;

&lt;p&gt;대량의 파일이 관리되는 서버의 파일 cache hit가 낮은데 비해 buffer / cache 메모리 사용량이 높을 경우 해당 cache 기능을 끄거나 주기적으로 비움으로써 성능을 개선할 수 있다.&lt;/p&gt;

&lt;p&gt;우선 아래와 같이 선택적으로 cache를 비울 수 있다. &lt;code&gt;sync&lt;/code&gt; 명령을 사용하는 이유는 해당 cache 기능을 비우기 전에 사용중인 데이터를 sync하기 위한 것이다.&lt;/p&gt;

&lt;p&gt;pagecache 비우기&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;sync
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &amp;gt; /proc/sys/vm/drop_caches
&lt;span class=&quot;c&quot;&gt;# 또는&lt;/span&gt;
sync
sysctl -w vm.drop_caches&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;dentries, inodes 비우기&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;sync
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &amp;gt; /proc/sys/vm/drop_caches
&lt;span class=&quot;c&quot;&gt;# 또는&lt;/span&gt;
sync
sysctl -w vm.drop_caches&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;pagecache, dentries, inodes 모두 비우기&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;sync
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &amp;gt; /proc/sys/vm/drop_caches
&lt;span class=&quot;c&quot;&gt;# 또는&lt;/span&gt;
sync
sysctl -w vm.drop_caches&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위에서 1,2,3으로 지정한 값들은 영구적 설정이 아니라 설정되는 그 시점에만 적용된다. 바꿔서 이야기 하자면 &lt;code&gt;/proc/sys/vm/drop_caches&lt;/code&gt;는 파일이 아니라 명령어인 셈이다. 실제로 아래와 같이 기본값인 0으로 되돌리려고하면 오류가 난다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &amp;gt; /proc/sys/vm/drop_caches
-bash: &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;: write error: 부적절한 인수
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
<summary>예전에 리눅스에서 swap 메모리 초기화에서 swap 메모리를 비우는 방법을 남겼다. 이번엔 swap이 아닌 “buff/cache”를 비우는 방법을 남기고자 한다.linux에서 top 또는 free 명령으로 메모리 상황을 보면 “buff/cache” 항목이 있다. 이 부분은 실제로 직접 사용하고 있는 메모리가 아니라 말그대로 버퍼와 캐시에 사용된 메모리를 뜻한다. 그렇다면 “굳이 왜 이것을 비우려고 하는가?”하는 의문이 생길 수 있다.일반적으로 캐시는 느린 장치의 데이터를 빠른 장치에 임시 보관해두고 사용함으로써 성능을 높이는 것이 목적이다. 따라서 캐시는 당연히 사용하는게 좋다. 하지만 hit(적중률)가 낮은 경우엔 캐시를 사용하는 것이 부정적인 영향을 미칠 수 있다. 빠른 장치는 당연히 공간이 한정되어 있기 때문에 모든 정보를 캐시할 수 없으므로 캐시를 관리해야 한다. 이 과정에서 발생하는 비용이 캐시를 사용하는 것보다 크다면 캐시는 사용하지 않는 것이 좋다는 것이다. 캐시에 관한 자세한 내용은 여기서 다루고자하는 것이 아니니 이정도만 설명하고 넘어가자.실질적으로 이것이 어디에 필요한지에 대해 알아보자.linux에서는 기본적으로 디스크 상의 파일을 읽을 경우 해당 파일을 닫아도 free 메모리로 모두가 즉시 반환되지 않는다. 이유는 이 파일의 정보를 다음 사용에 대비해 cache하기 때문이다. 보다 자세한 내용을 확인하고 싶다면 메모리 관리 (Memory Management)를 참고하자. 이런 파일의 cache와 관련하여 os / mysql 등 여러 분야의 성능 튜닝 내용 등을 쉽게 찾을 수 있다.대량의 파일이 관리되는 서버의 파일 cache hit가 낮은데 비해 buffer / cache 메모리 사용량이 높을 경우 해당 cache 기능을 끄거나 주기적으로 비움으로써 성능을 개선할 수 있다.우선 아래와 같이 선택적으로 cache를 비울 수 있다. sync 명령을 사용하는 이유는 해당 cache 기능을 비우기 전에 사용중인 데이터를 sync하기 위한 것이다.pagecache 비우기12345syncecho 1 &amp;gt; /proc/sys/vm/drop_caches# 또는syncsysctl -w vm.drop_caches=1dentries, inodes 비우기12345syncecho 2 &amp;gt; /proc/sys/vm/drop_caches# 또는syncsysctl -w vm.drop_caches=2pagecache, dentries, inodes 모두 비우기12345syncecho 3 &amp;gt; /proc/sys/vm/drop_caches# 또는syncsysctl -w vm.drop_caches=3위에서 1,2,3으로 지정한 값들은 영구적 설정이 아니라 설정되는 그 시점에만 적용된다. 바꿔서 이야기 하자면 /proc/sys/vm/drop_caches는 파일이 아니라 명령어인 셈이다. 실제로 아래와 같이 기본값인 0으로 되돌리려고하면 오류가 난다.12$ echo 0 &amp;gt; /proc/sys/vm/drop_caches-bash: echo: write error: 부적절한 인수</summary>
</entry>
<entry>
<title>.xyz 도메인을 구매해서 CloudFlare에 연결하다</title>
<link href="http://blog.asamaru.net/2016/01/06/xyz-domain-and-cloudflare/" rel="alternate" type="text/html" title=".xyz 도메인을 구매해서 CloudFlare에 연결하다" />
<published>2016-01-06T16:22:28+09:00</published>
<updated>2016-01-06T16:22:28+09:00</updated>
<id>http://blog.asamaru.net/2016/01/06/xyz-domain-and-cloudflare</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/06/xyz-domain-and-cloudflare/">&lt;p&gt;어제 &lt;a href=&quot;/2016/01/05/cloudflare-free-plan/&quot;&gt;CloudFlare Free Plan&lt;/a&gt;에 대한 글을 쓰면서 CloudFlare를 적용하는 것에 대해 고민중이라고 했었다.&lt;/p&gt;

&lt;p&gt;드디어 오늘 그 고민을 끝내고 CloudFlare를 사용하기 시작했다. 원래 계획은 개인적으로 사용하던 도메인에 적용해서 테스트하는 것이었는데 이 블로그뿐아니라 이메일등 여러 곳에서 사용하고 있어서 새로 도메인을 하나 구매했다. 사실 다른 용도로 도메인이 하나 더 필요하기도 했지만.&lt;/p&gt;

&lt;p&gt;새로 구매한 도메인은 .xyz 도메인이다. Wix.com에서는 .xyz 도메인에 대해서 아래와 같이 안내하고 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;.xyz – ‘.xyz’는 도메인 이름이 알파벳처럼 XYZ로 끝이 나도록 만드는 독창적인 최상급 도메인(TLD)입니다. 이 최상급 도메인은 짧은 URL 주소로 높은 검색 클릭률을 원하는 회사들에게 적합합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;간단히 이야기하자면 특별한 의미가 없는 최상위 도메인이다. 구글이 알파벳이라는 회사를 설립하면서 abc.xyz 라는 도메인을 사용하면서 유명해졌다.&lt;/p&gt;

&lt;p&gt;어쨌든 원래 나는 도메인을 &lt;a href=&quot;http://cypack.com&quot;&gt;CYPACK&lt;/a&gt;에서 사용하고 있었다(그냥 조금 싼편이라). 그런데 여기서는 .xyz 도메인을 구매할 수 없었다. 그래서 할 수없이 비싼 &lt;a href=&quot;https://www.gabia.com/&quot;&gt;가비아&lt;/a&gt;에서 구매했다. 사실 &lt;a href=&quot;https://gen.xyz/&quot;&gt;XYZ&lt;/a&gt;에서 바로 구매하면 $10에 구매할 수 있다. 하지만 해외 사이트라 가비아에서 그냥 샀다. 국제 도메인은 해외에서 사는게 났다는 평이 많지만 그냥 귀찮아서 그냥 샀다.&lt;/p&gt;

&lt;p&gt;그런데 지금 행사중이라 .xyz 도메인이 무척 쌌다. 지금 1,400원이면 도메인을 구매할 수 있다. 부가세 포함 1,540원. 하지만 내년에 연장하려면 20,000원을 내고 연장해야 한다.&lt;/p&gt;

&lt;p&gt;어쟀든 도메인을 구매하고 바로 CloudFlare에 연결했다. 연결은 아주 간단했고 DNS 변경 후 반영되는데 약간의 시간이 걸린 후 바로 적용되기 시작했다.&lt;/p&gt;

&lt;p&gt;이제부터 CloudFlare를 사용해서 여러가지 테스트를 해봐야 할 것 같다.
그리고 어제 &lt;a href=&quot;/2016/01/05/cloudflare-free-plan/&quot;&gt;CloudFlare Free Plan&lt;/a&gt;에서 page rule을 사용할 수 없다고 했었는데 오늘 들어가보니 free plan의 경우도 3개까지는 사용이 가능한 것으로 나와있었다.&lt;/p&gt;
</content>
<summary>어제 CloudFlare Free Plan에 대한 글을 쓰면서 CloudFlare를 적용하는 것에 대해 고민중이라고 했었다.드디어 오늘 그 고민을 끝내고 CloudFlare를 사용하기 시작했다. 원래 계획은 개인적으로 사용하던 도메인에 적용해서 테스트하는 것이었는데 이 블로그뿐아니라 이메일등 여러 곳에서 사용하고 있어서 새로 도메인을 하나 구매했다. 사실 다른 용도로 도메인이 하나 더 필요하기도 했지만.새로 구매한 도메인은 .xyz 도메인이다. Wix.com에서는 .xyz 도메인에 대해서 아래와 같이 안내하고 있다.  .xyz – ‘.xyz’는 도메인 이름이 알파벳처럼 XYZ로 끝이 나도록 만드는 독창적인 최상급 도메인(TLD)입니다. 이 최상급 도메인은 짧은 URL 주소로 높은 검색 클릭률을 원하는 회사들에게 적합합니다.간단히 이야기하자면 특별한 의미가 없는 최상위 도메인이다. 구글이 알파벳이라는 회사를 설립하면서 abc.xyz 라는 도메인을 사용하면서 유명해졌다.어쨌든 원래 나는 도메인을 CYPACK에서 사용하고 있었다(그냥 조금 싼편이라). 그런데 여기서는 .xyz 도메인을 구매할 수 없었다. 그래서 할 수없이 비싼 가비아에서 구매했다. 사실 XYZ에서 바로 구매하면 $10에 구매할 수 있다. 하지만 해외 사이트라 가비아에서 그냥 샀다. 국제 도메인은 해외에서 사는게 났다는 평이 많지만 그냥 귀찮아서 그냥 샀다.그런데 지금 행사중이라 .xyz 도메인이 무척 쌌다. 지금 1,400원이면 도메인을 구매할 수 있다. 부가세 포함 1,540원. 하지만 내년에 연장하려면 20,000원을 내고 연장해야 한다.어쟀든 도메인을 구매하고 바로 CloudFlare에 연결했다. 연결은 아주 간단했고 DNS 변경 후 반영되는데 약간의 시간이 걸린 후 바로 적용되기 시작했다.이제부터 CloudFlare를 사용해서 여러가지 테스트를 해봐야 할 것 같다.그리고 어제 CloudFlare Free Plan에서 page rule을 사용할 수 없다고 했었는데 오늘 들어가보니 free plan의 경우도 3개까지는 사용이 가능한 것으로 나와있었다.</summary>
</entry>
<entry>
<title>CloudFlare Free Plan</title>
<link href="http://blog.asamaru.net/2016/01/05/cloudflare-free-plan/" rel="alternate" type="text/html" title="CloudFlare Free Plan" />
<published>2016-01-05T23:29:14+09:00</published>
<updated>2016-01-05T23:29:14+09:00</updated>
<id>http://blog.asamaru.net/2016/01/05/cloudflare-free-plan</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/01/05/cloudflare-free-plan/">&lt;p&gt;블로그를 Github Pages를 이용해 운영하면서 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BD%98%ED%85%90%EC%B8%A0_%EC%A0%84%EC%86%A1_%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC&quot;&gt;CDN&lt;/a&gt;을 적용하려고 여러가지를 알아보고 있었다. 사실 Github 자체가 기본적으로 CDN을 사용하고 있는 것으로 안다. &lt;a href=&quot;https://helloanselm.com/2013/use-a-cdn-on-github-pages/&quot;&gt;USE A CDN ON GITHUB PAGES&lt;/a&gt;에서도 그렇게 설명하고 있다. 그리고 이 글에서는 그럼에도 불구하고 CDN을 별도로 붙이는 것이 필요한 이유도 설명하고 있다.&lt;/p&gt;

&lt;p&gt;사실 나의 경우엔 페이지 로딩 속도에 큰 불만이 있는 것이 아니므로 굳이 별도의 CDN을 붙여야 할 이유는 없지만 CDN 적용을 테스트 해보기 위한 용도로 적용을 고려중이었다.&lt;/p&gt;

&lt;p&gt;예전부터 소문으로 들었던 &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;CloudFlare&lt;/a&gt;를 적용해보려고 틈틈이 조사를 해오고 있었다. 사실 장점이야 너무나도 잘 알려져 있으므로 문제가 생길 수 있는 단점 부분을 주로 조사를 하다보니 몇가지 신경쓰이는 것들이 보였다. 우선 이 부분들을 이야기하기 전에 잘 알려진 장점부터 간략히 이야기하고자 한다(관련성이 있어서).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;무료다. 아주 강력한 장점이다. CDN 서비스를 무료로 사용할 수 있다니.&lt;/li&gt;
  &lt;li&gt;대역폭 / 트래픽 제한이 없다.&lt;/li&gt;
  &lt;li&gt;서버 유입 트래픽을 절감해준다.&lt;/li&gt;
  &lt;li&gt;DNS 서비스를 제공한다. 서브 도메인별로 선택적으로 CDN을 적용할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DDoS 공격을 방어해준다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;응답 속도를 높여준다(해외에 서버가 있거나 해외로 서비스 해야하는 경우에 효과적이다).&lt;/li&gt;
  &lt;li&gt;무료 플랜에서도 SSL을 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;서버 정지 상태에서는 캐시된 데이터를 사용해 서비스를 유지시켜 준다.&lt;/li&gt;
  &lt;li&gt;보안 강화. 실제 서비스 서버가 cloudflare 뒤로 숨겨지므로 이에 따른 보안 설정을 통해 보안을 강화할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 외에도 활용 상황/방법에 따라 여러가지가 있을 수 있겠지만 국내에서는 대부분 호스팅 서비스의 트래픽 절감을 위해 가장 많이 사용하는 것으로 보인다.&lt;/p&gt;

&lt;p&gt;그렇다면 단점은 무엇이 있을까? 일반적인 CDN의 용도를 생각한다면 단점은 거의 없다고 본다. 대부분 더 좋은 환경을 위해서 사용하는 부가 요소이니 단점이 많다면 사용할 이유가 없을 것이다. 하지만 cloudflare를 무료로 사용하게 아래와 같은 제약사항이 존재한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;업로드에 제한(100M)이 있다. 무료일 경우에.&lt;/li&gt;
  &lt;li&gt;크롤링 주기가 1주일로 길다.&lt;/li&gt;
  &lt;li&gt;캐싱 정책 설정을 할 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 외에도 더 있는지는 모르겠지만 잘 알려진 것은 이 정도다. 그런데 이 정도의 문제라면 정적 리소스에 CDN을 적용하는데에는 큰 제약사항이 되지 않는다.&lt;/p&gt;

&lt;p&gt;하지만 다른 문제들에 대한 이야기가 많이 거론되고 있다. 대표적인 것이 한국에서 접속했음에도 한국 CDN 서버를 사용하지 않고 해외 CDN 서버를 사용해서 서비스가 더 느려지는 경우가 있다는 것이다. “&lt;a href=&quot;https://www.xpressengine.com/qna/22994192&quot;&gt;cloudflare CDN 위치가 원래 오락가락 하나요?&lt;/a&gt;“라는 글에서 사례가 언급되었는데 다른 곳에서도 비슷한 내용들이 보이고 있다. 사실 이 부분에 대해서는 검토가 필요한 부분이라고 생각한다. 요즘 잘나가는 모바일 앱의 서비스가 ip를 조회해보니 cloudflare를 사용하고 있었다. 위 문제가 심각하다면 해당 모바일 앱이 서비스를 운영하는데 문제가 발생 했을텐데 관련 이슈를 본 적이 없다.&lt;/p&gt;

&lt;p&gt;그리고 오늘 다른 부분을 찾아보다가 찾게된 글이 “&lt;a href=&quot;https://blog.ryush00.me/archives/121&quot;&gt;CloudFlare의 DDOS 공격 보호?&lt;/a&gt;“이다. 여기서 보면 익히 알고있는 것과 달리 무료 플랜의 경우엔 DDoS 방어가 제한적이라는 것이다. 실제로 cloudflare의 사이트를 보면 “&lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/200170186-Does-CloudFlare-offer-DDoS-protection-to-Free-and-Pro-plans-&quot;&gt;Does CloudFlare offer DDoS protection to Free and Pro plans?&lt;/a&gt;“라는 글에서 이 부분을 안내하고 있다.&lt;/p&gt;

&lt;p&gt;결론적으로 보자면 cloudflare를 적용하는 것이 옳은 선택이라고 생각된다. 문제가 될 수 있는 이슈가 있지만 적용 사례들을 종합적으로 보자면 현재까지는 cloudflare의 대안을 찾을 수 없다. 단, 무료 사용에 한해서다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;마지막으로 &lt;a href=&quot;https://blog.cloudflare.com/cloudflares-free-cdn-and-you/&quot;&gt;“CloudFlare’s Free CDN and You”&lt;/a&gt;에서 언급된 cloudflare에 대한 설명 중 일부를 참고용으로 발췌하여 아래에 첨부한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;What kind of static content does CloudFlare cache?&lt;/strong&gt;
CloudFlare caches common static content file extensions, including JavaScript, CSS and images. The full list of what CloudFlare caches can be found here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Does CloudFlare cache dynamic content, such as HTML or PHP?&lt;/strong&gt;
CloudFlare does not currently cache these content types.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;간단히 이야기하자면 cloudflare는 html, php와 같은 동적 콘텐츠는 cache하지 않고 JavaScript, CSS, image와 같은 정적 파일만 cache 처리한다는 것이다. 따라서 적용 도메인에 정적 콘텐츠와 동적 콘텐츠가 섞여 있더라도 알아서 구분하여 처리한다는 뜻이다.
정적 콘텐츠에 해당하는 파일 확장자 리스트는 &lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/200172516-What-file-extensions-does-CloudFlare-cache-for-static-content-&quot;&gt;Which file extensions does CloudFlare cache for static content?&lt;/a&gt;에 안내되어 있다.&lt;/p&gt;

&lt;p&gt;하지만 필요하다면 cloudflare Page Rule을 사용해서 cache 하도록 지정할 수 있다고 한다(HTTP header를 설정을 통해 cache를 지정할 수 있다는 이야기도 있으나 정확한 메뉴얼을 아직 찾지 못했다).&lt;/p&gt;
</content>
<summary>블로그를 Github Pages를 이용해 운영하면서 CDN을 적용하려고 여러가지를 알아보고 있었다. 사실 Github 자체가 기본적으로 CDN을 사용하고 있는 것으로 안다. USE A CDN ON GITHUB PAGES에서도 그렇게 설명하고 있다. 그리고 이 글에서는 그럼에도 불구하고 CDN을 별도로 붙이는 것이 필요한 이유도 설명하고 있다.사실 나의 경우엔 페이지 로딩 속도에 큰 불만이 있는 것이 아니므로 굳이 별도의 CDN을 붙여야 할 이유는 없지만 CDN 적용을 테스트 해보기 위한 용도로 적용을 고려중이었다.예전부터 소문으로 들었던 CloudFlare를 적용해보려고 틈틈이 조사를 해오고 있었다. 사실 장점이야 너무나도 잘 알려져 있으므로 문제가 생길 수 있는 단점 부분을 주로 조사를 하다보니 몇가지 신경쓰이는 것들이 보였다. 우선 이 부분들을 이야기하기 전에 잘 알려진 장점부터 간략히 이야기하고자 한다(관련성이 있어서).  무료다. 아주 강력한 장점이다. CDN 서비스를 무료로 사용할 수 있다니.  대역폭 / 트래픽 제한이 없다.  서버 유입 트래픽을 절감해준다.  DNS 서비스를 제공한다. 서브 도메인별로 선택적으로 CDN을 적용할 수 있다.  DDoS 공격을 방어해준다.  응답 속도를 높여준다(해외에 서버가 있거나 해외로 서비스 해야하는 경우에 효과적이다).  무료 플랜에서도 SSL을 사용할 수 있다.  서버 정지 상태에서는 캐시된 데이터를 사용해 서비스를 유지시켜 준다.  보안 강화. 실제 서비스 서버가 cloudflare 뒤로 숨겨지므로 이에 따른 보안 설정을 통해 보안을 강화할 수 있다.이 외에도 활용 상황/방법에 따라 여러가지가 있을 수 있겠지만 국내에서는 대부분 호스팅 서비스의 트래픽 절감을 위해 가장 많이 사용하는 것으로 보인다.그렇다면 단점은 무엇이 있을까? 일반적인 CDN의 용도를 생각한다면 단점은 거의 없다고 본다. 대부분 더 좋은 환경을 위해서 사용하는 부가 요소이니 단점이 많다면 사용할 이유가 없을 것이다. 하지만 cloudflare를 무료로 사용하게 아래와 같은 제약사항이 존재한다.  업로드에 제한(100M)이 있다. 무료일 경우에.  크롤링 주기가 1주일로 길다.  캐싱 정책 설정을 할 수 없다.이 외에도 더 있는지는 모르겠지만 잘 알려진 것은 이 정도다. 그런데 이 정도의 문제라면 정적 리소스에 CDN을 적용하는데에는 큰 제약사항이 되지 않는다.하지만 다른 문제들에 대한 이야기가 많이 거론되고 있다. 대표적인 것이 한국에서 접속했음에도 한국 CDN 서버를 사용하지 않고 해외 CDN 서버를 사용해서 서비스가 더 느려지는 경우가 있다는 것이다. “cloudflare CDN 위치가 원래 오락가락 하나요?“라는 글에서 사례가 언급되었는데 다른 곳에서도 비슷한 내용들이 보이고 있다. 사실 이 부분에 대해서는 검토가 필요한 부분이라고 생각한다. 요즘 잘나가는 모바일 앱의 서비스가 ip를 조회해보니 cloudflare를 사용하고 있었다. 위 문제가 심각하다면 해당 모바일 앱이 서비스를 운영하는데 문제가 발생 했을텐데 관련 이슈를 본 적이 없다.그리고 오늘 다른 부분을 찾아보다가 찾게된 글이 “CloudFlare의 DDOS 공격 보호?“이다. 여기서 보면 익히 알고있는 것과 달리 무료 플랜의 경우엔 DDoS 방어가 제한적이라는 것이다. 실제로 cloudflare의 사이트를 보면 “Does CloudFlare offer DDoS protection to Free and Pro plans?“라는 글에서 이 부분을 안내하고 있다.결론적으로 보자면 cloudflare를 적용하는 것이 옳은 선택이라고 생각된다. 문제가 될 수 있는 이슈가 있지만 적용 사례들을 종합적으로 보자면 현재까지는 cloudflare의 대안을 찾을 수 없다. 단, 무료 사용에 한해서다.마지막으로 “CloudFlare’s Free CDN and You”에서 언급된 cloudflare에 대한 설명 중 일부를 참고용으로 발췌하여 아래에 첨부한다.  What kind of static content does CloudFlare cache?CloudFlare caches common static content file extensions, including JavaScript, CSS and images. The full list of what CloudFlare caches can be found here.  Does CloudFlare cache dynamic content, such as HTML or PHP?CloudFlare does not currently cache these content types.간단히 이야기하자면 cloudflare는 html, php와 같은 동적 콘텐츠는 cache하지 않고 JavaScript, CSS, image와 같은 정적 파일만 cache 처리한다는 것이다. 따라서 적용 도메인에 정적 콘텐츠와 동적 콘텐츠가 섞여 있더라도 알아서 구분하여 처리한다는 뜻이다.정적 콘텐츠에 해당하는 파일 확장자 리스트는 Which file extensions does CloudFlare cache for static content?에 안내되어 있다.하지만 필요하다면 cloudflare Page Rule을 사용해서 cache 하도록 지정할 수 있다고 한다(HTTP header를 설정을 통해 cache를 지정할 수 있다는 이야기도 있으나 정확한 메뉴얼을 아직 찾지 못했다).</summary>
</entry>
</feed>
