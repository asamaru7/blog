<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.0.1">Jekyll</generator>
<link href="http://blog.asamaru.net/atom.xml" rel="self" type="application/atom+xml" />
<link href="http://blog.asamaru.net/" rel="alternate" type="text/html" />
<updated>2016-03-09T11:45:15+09:00</updated>
<id>http://blog.asamaru.net/</id>
<subtitle>세상에 필요한 소스코드 한줄 남기고 가자.
</subtitle>
<author>
<name>유영재</name>
</author>
<entry>
<title>PhantomJS 2.1.1: render PDF / pageSize format 버그 해결</title>
<link href="http://blog.asamaru.net/2016/03/08/phantomjs-2-pagesize-format-bug/" rel="alternate" type="text/html" title="PhantomJS 2.1.1: render PDF / pageSize format 버그 해결" />
<published>2016-03-08T10:49:31+09:00</published>
<updated>2016-03-08T10:49:31+09:00</updated>
<id>http://blog.asamaru.net/2016/03/08/phantomjs-2-pagesize-format-bug</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/03/08/phantomjs-2-pagesize-format-bug/">&lt;p&gt;이번에 작업을 하면서 &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;로 웹페이지를 PDF로 저장(캡춰)하는 부분을 처리하게 되었다. 기본적으로 PhantomJS는 보여지는 페이지를 &lt;a href=&quot;http://phantomjs.org/api/webpage/method/render.html&quot;&gt;render&lt;/a&gt; 함수를 사용해서 파일로 저장하는 기능을 기본적으로 제공한다. &lt;code&gt;render&lt;/code&gt;에서 제공하는 포멧은 PDF, PNG, JPEG, BMP, PPM
, GIF 이다. 따라서 원하는 기능을 아주 간단하게 구현할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://nodejs.org/ko/&quot;&gt;node.js&lt;/a&gt;의 설치나 PhantomJS의 설치에 관해서는 여기서 다루지 않는다. 복잡하지도 않고 검색해보면 상세히 설명되어 있는 자료도 많다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그런데 내 Vagrant 환경에서 이상없이 동작하던 기능이 동료의 Vagrant 환경에서 이상하게 동작했다. PDF 출력시 A4 사이즈를 지정했음에도 페이지가 잘려보였던 것이다. 그래서 원인을 찾아보니 PhantomJS의 버전 문제였다. 나의 경우는 예전부터 사용하면서 구버전(1.9)이 설치되어 있었고 동료의 경우는 새로 설치하면서 최신버전(2.1.1)이 설치되었던 것이다.&lt;/p&gt;

&lt;p&gt;이와 관련해서 찾아보니 아래와 같은 글들이 있었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs/issues/12936&quot;&gt;phantomjs 2 fails to render pdf properly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs/issues/12685&quot;&gt;PhantomJS 2: PDF rendering too large, page.zoomFactor doesn’t work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;분위기를 보면 PhantomJS가 2버전이 되면서 문제가 발생하는 것 같다. 이 글들에서 해결 방법으로 사람들이 이야기하는 것 중 그나마 효과가 있었던 것은 css로 zoom을 줘서 비율을 맞추는 것인데 이건 맘에 들지 않는다. 정확한 비율을 지정하기도 애매하고 나중에 버전이 변경되면서 어떻게 바뀔지 모르기 때문이다.&lt;/p&gt;

&lt;p&gt;결론적으로 나의 경우는 &lt;a href=&quot;http://phantomjs.org/api/webpage/property/paper-size.html&quot;&gt;page.paperSize&lt;/a&gt;에 width, height를 주는 것으로 일단 해결했다. 이것 또한 완벽한 해결이라고 보기엔 어렵지만 zoom을 사용하는 것보다는 낫다는 개인적인 생각이다.&lt;/p&gt;

&lt;p&gt;일단 코드를 보자. 실행시 첫번째 인자로 파일이 저장될 경로, 두번째 인자로 대상 url이 지정된 것을 가정하고 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;use strict&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*global phantom: false*/&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;major&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webpage&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// Web Page를 Control 하기 위한 Web Page Module 객체 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// fixme phantomjs 2.1.1 에서 pageSize.format A4 버그로 인해 강제로 사이즈를 지정함&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2339&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1654&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//page.viewportSize = viewportSize;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;768&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// PhantomJS에서 화면을 어떤 사이즈로 출력할 것인지에 대한 값 : 미디어 쿼리도 동작&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;A4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;portrait&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//,&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//header: {&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	height: &amp;#39;1cm&amp;#39;,&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	contents: phantom.callback(function () {&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//		return &amp;#39;&amp;lt;div&amp;gt;PhantomJS Header, Footer 예제입니다.&amp;lt;/div&amp;gt;&amp;#39;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	})&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//},&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//footer: {&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	height: &amp;#39;1cm&amp;#39;,&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	contents: phantom.callback(function (pageNum, numPages) {&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//		return &amp;#39;&amp;lt;div&amp;gt;&amp;#39; + pageNum + &amp;#39;/&amp;#39; + numPages + &amp;#39;&amp;lt;/div&amp;gt;&amp;#39;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//	})&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;major&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paperSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onLoadFinished&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 스크린 캡쳐파일 생성&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Status: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 폰트 문제로 사용가능한 폰트로 교체&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;html body, html body * { font-family:&amp;quot;바른돋움OTF&amp;quot; !important; }&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// html { zoom: 1; }&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// status 인자를 통해 성공, 실패여부 확인&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Cannot open webpage&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기서 이야기하는 문제와는 상관없지만 코드에서 설명이 필요한 부분들을 하나씩 보자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;major&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;예전에는 &lt;a href=&quot;http://phantomjs.org/api/phantom/property/args.html&quot;&gt;phantom.args&lt;/a&gt;를 사용해서 인자를 받았지만 메뉴엘에도 설명되어 있는 것처럼 지금은 phantom.args가 제거되고 system.args을 사용한다.&lt;/p&gt;

&lt;p&gt;그리고 중요한 부분. A4 사이즈에 대한 문제 해결 부분이다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// fixme phantomjs 2.1.1 에서 pageSize.format A4 버그로 인해 강제로 사이즈를 지정함&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2339&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1654&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//page.viewportSize = viewportSize;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;768&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// PhantomJS에서 화면을 어떤 사이즈로 출력할 것인지에 대한 값 : 미디어 쿼리도 동작&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;A4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;portrait&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.5cm&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;major&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewportSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paperSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기서 중요한 것은 width와 height이다. width의 경우는 페이지를 랜더링할 width를 기준으로 주면되고 height의 경우는 A4 용지 비율에 맞게 넣어야 한다. &lt;code&gt;(2339/1654)&lt;/code&gt;가 A4 용지의 세로 비율이다(참고 : &lt;a href=&quot;http://www.a4papersize.org/a4-paper-size-in-pixels.php&quot;&gt;A4PaperSize.org
&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;그리고 한가지. 여기서는 페이지가 잘려나가지 않고 비율을 맞추는데 초첨을 맞춘 해결 방법이므로 완벽한 방법은 아니다. 일례로 OSX의 크롬에서는 브라우저에서 PDF를 열어 출력해도 깔끔하게 나오나 사파리에서는 50% 비율로 출력해야 정확히 나온다. 단, 브라우저가 아닌 파일 다운로드 후 출력하면 당연히 정상적으로 출력된다.
이것은 DPI 문제인 것 같으나 아직 해결하진 못했다. 기본 DPI가 72 DPI로 설정된 것으로 보인다. 이 경우 사이즈가 595px X 842px가 되므로 페이지가 잘려나가는 것이다. 하지만 페이지를 595px로 랜더링하면 웹페이지의 가로가 너무 좁으니 이렇게 사용할 수도 없다.&lt;/p&gt;

&lt;p&gt;정확한 해결을 위해서는 &lt;a href=&quot;http://phantomjs.org/api/webpage/property/zoom-factor.html&quot;&gt;zoomFactor&lt;/a&gt;에 DPI 비율을 넣어줘야 하는데 지금 zoomFactor가 정상적으로 적용되지를 않는다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 폰트 문제로 사용가능한 폰트로 교체&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;html body, html body * { font-family:&amp;quot;바른돋움OTF&amp;quot; !important; }&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// html { zoom: 1; }&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styleElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;사실 위 부분은 실제로는 굳이 필요하지는 않다. PhantomJS의 경우는 서버 내부에 등록된 폰트를 사용하게 되므로 서버에 있는 폰트로 맞춰준 것이다. 위 코드를 사용하지 않아도 기본 한글 폰트가 지정되어 나온다. 단, 서버에 한글 폰트가 설치된 경우에 한해서. PhantomJS에서 한글이 나오지 않는다면 폰트가 설치되지 않은 것이고 이 또한 자료가 아주 많으니 쉽게 해결할 수 있다(간단히 말하자면 CentOS 기준으로 폰트 파일을 &lt;code&gt;/usr/share/fonts/&lt;/code&gt;에 넣으면 된다).&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onLoadFinished&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 스크린 캡쳐파일 생성&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Status: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;마지막으로 한가지 &lt;code&gt;page.render&lt;/code&gt; 처리를 setTimeout으로 씌운 것. 이 부분도 꼭 필요하지는 않으나 &lt;a href=&quot;http://phantomjs.org/api/webpage/method/evaluate-java-script.html&quot;&gt;page.evaluate&lt;/a&gt;가 실행되기 전에 render되는 경우가 있어 사용한 코드다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A4 출력 문제로 이 글을 썼지만 내용을 보면 웹페이지를 PDF로 저장하는 방법에 대해서도 충분한 샘플이 포함되어 있으니 원하는 작업에 약간의 도움이라도 되었으면 하는 바람이다.&lt;/p&gt;
</content>
<summary>이번에 작업을 하면서 PhantomJS로 웹페이지를 PDF로 저장(캡춰)하는 부분을 처리하게 되었다. 기본적으로 PhantomJS는 보여지는 페이지를 render 함수를 사용해서 파일로 저장하는 기능을 기본적으로 제공한다. render에서 제공하는 포멧은 PDF, PNG, JPEG, BMP, PPM, GIF 이다. 따라서 원하는 기능을 아주 간단하게 구현할 수 있다.  node.js의 설치나 PhantomJS의 설치에 관해서는 여기서 다루지 않는다. 복잡하지도 않고 검색해보면 상세히 설명되어 있는 자료도 많다.그런데 내 Vagrant 환경에서 이상없이 동작하던 기능이 동료의 Vagrant 환경에서 이상하게 동작했다. PDF 출력시 A4 사이즈를 지정했음에도 페이지가 잘려보였던 것이다. 그래서 원인을 찾아보니 PhantomJS의 버전 문제였다. 나의 경우는 예전부터 사용하면서 구버전(1.9)이 설치되어 있었고 동료의 경우는 새로 설치하면서 최신버전(2.1.1)이 설치되었던 것이다.이와 관련해서 찾아보니 아래와 같은 글들이 있었다.  phantomjs 2 fails to render pdf properly  PhantomJS 2: PDF rendering too large, page.zoomFactor doesn’t work분위기를 보면 PhantomJS가 2버전이 되면서 문제가 발생하는 것 같다. 이 글들에서 해결 방법으로 사람들이 이야기하는 것 중 그나마 효과가 있었던 것은 css로 zoom을 줘서 비율을 맞추는 것인데 이건 맘에 들지 않는다. 정확한 비율을 지정하기도 애매하고 나중에 버전이 변경되면서 어떻게 바뀔지 모르기 때문이다.결론적으로 나의 경우는 page.paperSize에 width, height를 주는 것으로 일단 해결했다. 이것 또한 완벽한 해결이라고 보기엔 어렵지만 zoom을 사용하는 것보다는 낫다는 개인적인 생각이다.일단 코드를 보자. 실행시 첫번째 인자로 파일이 저장될 경로, 두번째 인자로 대상 url이 지정된 것을 가정하고 있다. 1 2 3 4 5 6 7 8 9101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&amp;quot;use strict&amp;quot;;/*global phantom: false*/var dest, source;var v = phantom.version;if (v.major &amp;gt;= 2) {	var system = require(&amp;#39;system&amp;#39;);	dest = system.args[1];	source = system.args[2];} else {	dest = phantom.args[0];	source = phantom.args[1];}var page = require(&amp;#39;webpage&amp;#39;).create();	// Web Page를 Control 하기 위한 Web Page Module 객체 생성// fixme phantomjs 2.1.1 에서 pageSize.format A4 버그로 인해 강제로 사이즈를 지정함var viewportSize = {width: 1024, height: 1024 * (2339/1654)};//page.viewportSize = viewportSize;page.viewportSize = {width: 1024, height: 768};	// PhantomJS에서 화면을 어떤 사이즈로 출력할 것인지에 대한 값 : 미디어 쿼리도 동작var pageSize = {	format: &amp;#39;A4&amp;#39;,	orientation: &amp;#39;portrait&amp;#39;,	margin: {		top: &amp;#39;0.5cm&amp;#39;,		bottom: &amp;#39;0.5cm&amp;#39;,		left: &amp;#39;0.5cm&amp;#39;,		right: &amp;#39;0.5cm&amp;#39;	}//,	//header: {	//	height: &amp;#39;1cm&amp;#39;,	//	contents: phantom.callback(function () {	//		return &amp;#39;&amp;lt;div&amp;gt;PhantomJS Header, Footer 예제입니다.&amp;lt;/div&amp;gt;&amp;#39;;	//	})	//},	//footer: {	//	height: &amp;#39;1cm&amp;#39;,	//	contents: phantom.callback(function (pageNum, numPages) {	//		return &amp;#39;&amp;lt;div&amp;gt;&amp;#39; + pageNum + &amp;#39;/&amp;#39; + numPages + &amp;#39;&amp;lt;/div&amp;gt;&amp;#39;;	//	})	//}};if (v.major &amp;gt;= 2) {	pageSize.width = (viewportSize.width) + &amp;#39;px&amp;#39;;	pageSize.height = (viewportSize.height) + &amp;#39;px&amp;#39;;}page.paperSize = pageSize;page.onLoadFinished = function (status) {	setTimeout(function () {		page.render(dest);    // 스크린 캡쳐파일 생성		console.log(&amp;#39;Status: &amp;#39; + status);		phantom.exit();	}, 0);};page.open(source, function (status) {	page.evaluate(function () {		// 폰트 문제로 사용가능한 폰트로 교체		var cssCode = &amp;#39;html body, html body * { font-family:&amp;quot;바른돋움OTF&amp;quot; !important; }&amp;#39;;// html { zoom: 1; }		var styleElement = document.createElement(&amp;quot;style&amp;quot;);		styleElement.type = &amp;quot;text/css&amp;quot;;		if (styleElement.styleSheet) {			styleElement.styleSheet.cssText = cssCode;		} else {			styleElement.appendChild(document.createTextNode(cssCode));		}		document.getElementsByTagName(&amp;quot;head&amp;quot;)[0].appendChild(styleElement);	});	if (status !== &amp;#39;success&amp;#39;) {	// status 인자를 통해 성공, 실패여부 확인		console.log(&amp;#39;Cannot open webpage&amp;#39;);		phantom.exit();	}});여기서 이야기하는 문제와는 상관없지만 코드에서 설명이 필요한 부분들을 하나씩 보자. 1 2 3 4 5 6 7 8 910var dest, source;var v = phantom.version;if (v.major &amp;gt;= 2) {	var system = require(&amp;#39;system&amp;#39;);	dest = system.args[1];	source = system.args[2];} else {	dest = phantom.args[0];	source = phantom.args[1];}예전에는 phantom.args를 사용해서 인자를 받았지만 메뉴엘에도 설명되어 있는 것처럼 지금은 phantom.args가 제거되고 system.args을 사용한다.그리고 중요한 부분. A4 사이즈에 대한 문제 해결 부분이다. 1 2 3 4 5 6 7 8 91011121314151617181920// fixme phantomjs 2.1.1 에서 pageSize.format A4 버그로 인해 강제로 사이즈를 지정함var viewportSize = {width: 1024, height: 1024 * (2339/1654)};//page.viewportSize = viewportSize;page.viewportSize = {width: 1024, height: 768};	// PhantomJS에서 화면을 어떤 사이즈로 출력할 것인지에 대한 값 : 미디어 쿼리도 동작var pageSize = {	format: &amp;#39;A4&amp;#39;,	orientation: &amp;#39;portrait&amp;#39;,	margin: {		top: &amp;#39;0.5cm&amp;#39;,		bottom: &amp;#39;0.5cm&amp;#39;,		left: &amp;#39;0.5cm&amp;#39;,		right: &amp;#39;0.5cm&amp;#39;	}};if (v.major &amp;gt;= 2) {	pageSize.width = (viewportSize.width) + &amp;#39;px&amp;#39;;	pageSize.height = (viewportSize.height) + &amp;#39;px&amp;#39;;}page.paperSize = pageSize;여기서 중요한 것은 width와 height이다. width의 경우는 페이지를 랜더링할 width를 기준으로 주면되고 height의 경우는 A4 용지 비율에 맞게 넣어야 한다. (2339/1654)가 A4 용지의 세로 비율이다(참고 : A4PaperSize.org).그리고 한가지. 여기서는 페이지가 잘려나가지 않고 비율을 맞추는데 초첨을 맞춘 해결 방법이므로 완벽한 방법은 아니다. 일례로 OSX의 크롬에서는 브라우저에서 PDF를 열어 출력해도 깔끔하게 나오나 사파리에서는 50% 비율로 출력해야 정확히 나온다. 단, 브라우저가 아닌 파일 다운로드 후 출력하면 당연히 정상적으로 출력된다.이것은 DPI 문제인 것 같으나 아직 해결하진 못했다. 기본 DPI가 72 DPI로 설정된 것으로 보인다. 이 경우 사이즈가 595px X 842px가 되므로 페이지가 잘려나가는 것이다. 하지만 페이지를 595px로 랜더링하면 웹페이지의 가로가 너무 좁으니 이렇게 사용할 수도 없다.정확한 해결을 위해서는 zoomFactor에 DPI 비율을 넣어줘야 하는데 지금 zoomFactor가 정상적으로 적용되지를 않는다. 1 2 3 4 5 6 7 8 9101112page.evaluate(function () {  // 폰트 문제로 사용가능한 폰트로 교체  var cssCode = &amp;#39;html body, html body * { font-family:&amp;quot;바른돋움OTF&amp;quot; !important; }&amp;#39;;// html { zoom: 1; }  var styleElement = document.createElement(&amp;quot;style&amp;quot;);  styleElement.type = &amp;quot;text/css&amp;quot;;  if (styleElement.styleSheet) {    styleElement.styleSheet.cssText = cssCode;  } else {    styleElement.appendChild(document.createTextNode(cssCode));  }  document.getElementsByTagName(&amp;quot;head&amp;quot;)[0].appendChild(styleElement);});사실 위 부분은 실제로는 굳이 필요하지는 않다. PhantomJS의 경우는 서버 내부에 등록된 폰트를 사용하게 되므로 서버에 있는 폰트로 맞춰준 것이다. 위 코드를 사용하지 않아도 기본 한글 폰트가 지정되어 나온다. 단, 서버에 한글 폰트가 설치된 경우에 한해서. PhantomJS에서 한글이 나오지 않는다면 폰트가 설치되지 않은 것이고 이 또한 자료가 아주 많으니 쉽게 해결할 수 있다(간단히 말하자면 CentOS 기준으로 폰트 파일을 /usr/share/fonts/에 넣으면 된다).1234567page.onLoadFinished = function (status) {	setTimeout(function () {		page.render(dest);    // 스크린 캡쳐파일 생성		console.log(&amp;#39;Status: &amp;#39; + status);		phantom.exit();	}, 0);};마지막으로 한가지 page.render 처리를 setTimeout으로 씌운 것. 이 부분도 꼭 필요하지는 않으나 page.evaluate가 실행되기 전에 render되는 경우가 있어 사용한 코드다.A4 출력 문제로 이 글을 썼지만 내용을 보면 웹페이지를 PDF로 저장하는 방법에 대해서도 충분한 샘플이 포함되어 있으니 원하는 작업에 약간의 도움이라도 되었으면 하는 바람이다.</summary>
</entry>
<entry>
<title>ssh proxy를 이용한 git 사용하기</title>
<link href="http://blog.asamaru.net/2016/03/07/git-socks5-proxy/" rel="alternate" type="text/html" title="ssh proxy를 이용한 git 사용하기" />
<published>2016-03-07T20:28:24+09:00</published>
<updated>2016-03-07T20:28:24+09:00</updated>
<id>http://blog.asamaru.net/2016/03/07/git-socks5-proxy</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/03/07/git-socks5-proxy/">&lt;p&gt;앞서 &lt;a href=&quot;/2015/09/21/how-to-install-gogs-on-centos/&quot;&gt;CentOS에 gogs 설치하기&lt;/a&gt;,
&lt;a href=&quot;/2015/09/22/how-to-install-gitlib-on-centos/&quot;&gt;CentOS에 Gitlab 설치하기&lt;/a&gt;, &lt;a href=&quot;/2015/10/12/gitlab-ce-to-gitlab-dot-com/&quot;&gt;자체 설치한 gitlab-ce에서 gitlab.com으로 이전하다&lt;/a&gt;에서 언급했던 것처럼 git 저장소로 &lt;a href=&quot;https://gitlab.com/&quot;&gt;gitlab.com&lt;/a&gt;을 사용중이다. 한동안은 아무 문제없이 잘 사용하고 있었다. 아니 사실 gitlab.com에 접속이 되지 않는 문제가 간헐적으로 발생했었다. 얼마전까지만 하더라도 해외 서비스에서 서비스되는 사이트라서 그런가보다 했다.&lt;/p&gt;

&lt;p&gt;그런데 몇일 전부터 회사 네트워크에서 &lt;a href=&quot;https://gitlab.com/&quot;&gt;gitlab.com&lt;/a&gt;에 접속할 수 없었다. 웹사이트뿐 아니라 git push/pull도 할 수가 없었다. 처음엔 회사 네트워크 방화벽 문제인 줄 알고 확인했으나 아니었다. 그래서 tracepath로 확인해 보니 SK Broadband 네트워크를 벗어나지 못하고 있었다(회사 네트워크가 SK다). 이상해서 조금 검색해보니 예전부터 SK Broadband의 해외 사이트 접속 문제가 유명했던 것 같다. 사람들의 이야기를 봐도 SK에 이야기한다고 해결될 문제는 아닌 것 같고… 그렇다고 git를 사용하지 않을 수 없어서 다른 방법을 찾아야 했다.&lt;/p&gt;

&lt;p&gt;다행히 회사엔 외부망(SK가 아닌)에 연결된 Proxy가 하나 있다. 그래서 그 Proxy를 사용해서 급한대로 gitlab.com에 push/pull 하고 있다. 조금 더 기다려볼 생각이지만 빠른 시일 내에 접속이 복구되지 않는다면 다시 설치형 gitlab을 검토해야 할 것 같다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;본론으로 들어가서 위의 이유로 인해 사용하게된 ssh proxy에 대한 처리 방법을 설명하려고 한다. 이번에 필요에 의해 적용한 환경은 CentOS 7과 OSX 10.11 이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CentOS 7&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.ssh/config&lt;/code&gt; 파일에 아래의 내용을 추가 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;Host gitlab.com
    User                    git
    ProxyCommand            socat STDIO SOCKS4:[proxy ip]:%h:%p,socksport=[proxy port]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;여기서 중요한 부분. &lt;code&gt;socat&lt;/code&gt;이 설치되어 있어야 한다. 설치되어 있지 않다면 간단히 &lt;code&gt;yum install socat&lt;/code&gt;을 통해 설치할 수 있다.&lt;/p&gt;

&lt;p&gt;그리고 &lt;code&gt;SOCKS4&lt;/code&gt;는 Proxy의 프로토콜에 따라 변경되어야 한다. 사실 내가 사용한 Proxy는 &lt;code&gt;SOCKS5&lt;/code&gt;를 사용하는데 &lt;code&gt;SOCKS5&lt;/code&gt;를 지정하면 오류가 나고 &lt;code&gt;SOCKS4&lt;/code&gt;를 지정해야만 정상 동작했다. 기타 프로토콜의 경우는 &lt;a href=&quot;http://www.dest-unreach.org/socat/&quot;&gt;socat&lt;/a&gt;를 참고.&lt;/p&gt;

&lt;p&gt;위 처리를 하고나면 “gitlab.com” 도메인에 대해서는 ssh 접속시 지정한 Proxy를 사용한다. 따라서 git 명령을 사용하면 Proxy를 통해서 데이터가 전달된다. 단, ssh를 사용해서 git remote가 연결된 경우에.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OSX&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OSX 또한 &lt;code&gt;~/.ssh/config&lt;/code&gt; 파일에 아래의 내용을 추가 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;Host gitlab.com
    User                    git
    ProxyCommand            nc -X 5 -x [proxy ip]:[proxy port] %h %p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;OSX도 CentOS와 방법은 동일하나 socat 대신 nc(&lt;a href=&quot;http://netcat.sourceforge.net/&quot;&gt;netcat&lt;/a&gt;)를 사용하고 있다. nc가 기본적으로 설치되어 있어서 그냥 nc를 사용했다. 어짜피 원리는 같다.
nc의 경우는 -X 뒤에 있는 5가 Proxy 프로토콜을 뜻한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;-X proxy_version
            Requests that nc should use the specified protocol when talking to the proxy server.  Supported protocols are “4” (SOCKS v.4), “5”
            (SOCKS v.5) and “connect” (HTTPS proxy).  If the protocol is not specified, SOCKS version 5 is used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;PHPStorm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;덤으로 PHPStorm과 같은 IntelliJ IDE에서의 설정을 설명한다. 기본적으로 IntelliJ는 Git의 ssh 클라이언트를 Built-in을 사용한다. 이 설정을 Native로 바꿔주면 위에서 설정한 &lt;code&gt;~/.ssh/config&lt;/code&gt; 파일의 설정을 그대로 적용시킬 수 있다. 메뉴의 위치는 “Preference &amp;gt; Version Control &amp;gt; Git”에서 “SSH executable”를 찾으면 된다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;위 방법은 ssh의 설정을 이용한 방법이지만 git의 설정한 방법도 있다. 개인적으로 git에 설정하는게 더 복잡해서 그냥 ssh에 설정하는 것을 선택했을 뿐이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;참고글&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cms-sw.github.io/tutorial-proxy.html&quot;&gt;Tutorial: how to use git through a proxy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jones.ec/blogs/a/entry/using_git_through_a_socks/&quot;&gt;Using git through a SOCKS proxy (or SSH tunnel)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>앞서 CentOS에 gogs 설치하기,CentOS에 Gitlab 설치하기, 자체 설치한 gitlab-ce에서 gitlab.com으로 이전하다에서 언급했던 것처럼 git 저장소로 gitlab.com을 사용중이다. 한동안은 아무 문제없이 잘 사용하고 있었다. 아니 사실 gitlab.com에 접속이 되지 않는 문제가 간헐적으로 발생했었다. 얼마전까지만 하더라도 해외 서비스에서 서비스되는 사이트라서 그런가보다 했다.그런데 몇일 전부터 회사 네트워크에서 gitlab.com에 접속할 수 없었다. 웹사이트뿐 아니라 git push/pull도 할 수가 없었다. 처음엔 회사 네트워크 방화벽 문제인 줄 알고 확인했으나 아니었다. 그래서 tracepath로 확인해 보니 SK Broadband 네트워크를 벗어나지 못하고 있었다(회사 네트워크가 SK다). 이상해서 조금 검색해보니 예전부터 SK Broadband의 해외 사이트 접속 문제가 유명했던 것 같다. 사람들의 이야기를 봐도 SK에 이야기한다고 해결될 문제는 아닌 것 같고… 그렇다고 git를 사용하지 않을 수 없어서 다른 방법을 찾아야 했다.다행히 회사엔 외부망(SK가 아닌)에 연결된 Proxy가 하나 있다. 그래서 그 Proxy를 사용해서 급한대로 gitlab.com에 push/pull 하고 있다. 조금 더 기다려볼 생각이지만 빠른 시일 내에 접속이 복구되지 않는다면 다시 설치형 gitlab을 검토해야 할 것 같다.본론으로 들어가서 위의 이유로 인해 사용하게된 ssh proxy에 대한 처리 방법을 설명하려고 한다. 이번에 필요에 의해 적용한 환경은 CentOS 7과 OSX 10.11 이다.CentOS 7~/.ssh/config 파일에 아래의 내용을 추가 한다.Host gitlab.com    User                    git    ProxyCommand            socat STDIO SOCKS4:[proxy ip]:%h:%p,socksport=[proxy port]여기서 중요한 부분. socat이 설치되어 있어야 한다. 설치되어 있지 않다면 간단히 yum install socat을 통해 설치할 수 있다.그리고 SOCKS4는 Proxy의 프로토콜에 따라 변경되어야 한다. 사실 내가 사용한 Proxy는 SOCKS5를 사용하는데 SOCKS5를 지정하면 오류가 나고 SOCKS4를 지정해야만 정상 동작했다. 기타 프로토콜의 경우는 socat를 참고.위 처리를 하고나면 “gitlab.com” 도메인에 대해서는 ssh 접속시 지정한 Proxy를 사용한다. 따라서 git 명령을 사용하면 Proxy를 통해서 데이터가 전달된다. 단, ssh를 사용해서 git remote가 연결된 경우에.OSXOSX 또한 ~/.ssh/config 파일에 아래의 내용을 추가 한다.Host gitlab.com    User                    git    ProxyCommand            nc -X 5 -x [proxy ip]:[proxy port] %h %pOSX도 CentOS와 방법은 동일하나 socat 대신 nc(netcat)를 사용하고 있다. nc가 기본적으로 설치되어 있어서 그냥 nc를 사용했다. 어짜피 원리는 같다.nc의 경우는 -X 뒤에 있는 5가 Proxy 프로토콜을 뜻한다.  -X proxy_version            Requests that nc should use the specified protocol when talking to the proxy server.  Supported protocols are “4” (SOCKS v.4), “5”            (SOCKS v.5) and “connect” (HTTPS proxy).  If the protocol is not specified, SOCKS version 5 is used.PHPStorm덤으로 PHPStorm과 같은 IntelliJ IDE에서의 설정을 설명한다. 기본적으로 IntelliJ는 Git의 ssh 클라이언트를 Built-in을 사용한다. 이 설정을 Native로 바꿔주면 위에서 설정한 ~/.ssh/config 파일의 설정을 그대로 적용시킬 수 있다. 메뉴의 위치는 “Preference &amp;gt; Version Control &amp;gt; Git”에서 “SSH executable”를 찾으면 된다.위 방법은 ssh의 설정을 이용한 방법이지만 git의 설정한 방법도 있다. 개인적으로 git에 설정하는게 더 복잡해서 그냥 ssh에 설정하는 것을 선택했을 뿐이다.참고글  Tutorial: how to use git through a proxy  Using git through a SOCKS proxy (or SSH tunnel)</summary>
</entry>
<entry>
<title>PHP password_hash()와 BCrypt</title>
<link href="http://blog.asamaru.net/2016/03/03/php-password-hash-and-bcrypt/" rel="alternate" type="text/html" title="PHP password_hash()와 BCrypt" />
<published>2016-03-03T21:18:01+09:00</published>
<updated>2016-03-03T21:18:01+09:00</updated>
<id>http://blog.asamaru.net/2016/03/03/php-password-hash-and-bcrypt</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/03/03/php-password-hash-and-bcrypt/">&lt;p&gt;Naver D2에 &lt;a href=&quot;http://d2.naver.com/helloworld/318732&quot;&gt;안전한 패스워드 저장&lt;/a&gt;이란 글을 보면 비밀번호 저장을 위한 해시 함수에 대한 소개를 하고 있다. 그 중에서 bcrypt에 대해서는 아래와 같이 설명하고 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;bcrypt&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;bcrypt는 애초부터 패스워드 저장을 목적으로 설계되었다. Niels Provos와 David Mazières가 1999년 발표했고 현재까지 사용되는 가장 강력한 해시 메커니즘 중 하나이다. bcrypt는 보안에 집착하기로 유명한 OpenBSD에서 기본 암호 인증 메커니즘으로 사용되고 있고 미래에 PBKDF2보다 더 경쟁력이 있다고 여겨진다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;실제로 PHP의 &lt;a href=&quot;http://php.net/manual/kr/function.password-hash.php&quot;&gt;password_hash()&lt;/a&gt;는 암호화 알고리즘으로 bcrypt를 기본으로 사용하고 있다. 하지만 이는 현재 시점 기준이다. 메뉴얼에 따르면 향후 PHP에서 보다 강력한 알고리즘이 추가되면 변경된다고 한다(&lt;code&gt;PASSWORD_DEFAULT&lt;/code&gt; 알고리즘 사용시, &lt;code&gt;PASSWORD_BCRYPT&lt;/code&gt; 옵션을 사용해서 강제로 지정하는 것도 가능하다).&lt;/p&gt;

&lt;p&gt;이 시점에서 한가지만 짚고 넘어가자.&lt;/p&gt;

&lt;p&gt;“&lt;code&gt;PASSWORD_DEFAULT&lt;/code&gt; 사용시 향후 알고리즘이 변경될 수 있는데 그렇다면 기존 데이터는 어떻게 해야하나?”&lt;/p&gt;

&lt;p&gt;당연히 단방향 해시 알고리즘이므로 원래 값으로 복구할 수 없으므로 새로운 알고리즘으로 해시값을 만들 수 없다. 그렇다면 위의 의문처럼 기존 데이터와의 호환은 어떻게 되는가? 사실 걱정할 것은 없다. &lt;a href=&quot;http://php.net/manual/kr/function.password-hash.php&quot;&gt;password_hash()&lt;/a&gt;로 만들어진 해시값은  &lt;a href=&quot;http://php.net/manual/kr/function.password-verify.php&quot;&gt;password_verify()&lt;/a&gt;를 사용해서 검증하게 되는데 &lt;a href=&quot;http://php.net/manual/kr/function.password-verify.php&quot;&gt;password_verify()&lt;/a&gt;가 위 문제를 모두 해결해 준다.&lt;/p&gt;

&lt;p&gt;그럼 &lt;a href=&quot;http://php.net/manual/kr/function.password-verify.php&quot;&gt;password_verify()&lt;/a&gt;는 어떻게 이문제를 해결하는가? 이 부분을 이해하고나면 php에서 만들어진 해시값을 다른 언어(플랫폼)에서 검증하는 것도 가능하다는 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/20927202&quot;&gt;Determining the salt from a password_hash()&lt;/a&gt;에 설명된 내용 중 아래에 발췌한 내용이 그 답을 가지고 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;$2y$10$nOUIs5kJ7naTuTFkBy1veuK0kSxUFXfuaOKdOKf9xYT0KKIGSJwFa
 |  |  |                     |
 |  |  |                     hash-value = K0kSxUFXfuaOKdOKf9xYT0KKIGSJwFa
 |  |  |
 |  |  salt = nOUIs5kJ7naTuTFkBy1veu (22 characters)
 |  |
 |  cost-factor = 10 = 2^10 iterations
 |
 hash-algorithm = 2y = BCrypt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://php.net/manual/kr/function.password-verify.php&quot;&gt;password_verify()&lt;/a&gt;에서 만들어진 해시값은 위의 설명과 같이 구성되므로 검증에 필요한 모든 정보를 가지고 있다는 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;따라서 특별한 이유가 없다면 &lt;code&gt;PASSWORD_DEFAULT&lt;/code&gt; 옵션을 사용하는 것이 바람직하다는 생각이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://php.net/manual/kr/function.password-hash.php&quot;&gt;password_hash()&lt;/a&gt;에 관련된 몇가지 추가적 안내가 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이 함수는 php 5.5 이상에서만 사용할 수 있다. 그렇다면 이하 버전에서는 어떻게 할까? 당연히 해결방법은 있다. 친절하게도 &lt;a href=&quot;https://github.com/ircmaxell/password_compat&quot;&gt;ircmaxell/password_compat&lt;/a&gt;에 호환 라이브러리가 있다.&lt;/li&gt;
  &lt;li&gt;scrypt 알고리즘이 훨씬 더 강력하다고 알려져 있으나 아직 PHP에서 공식적으로 지원하지 않고 있다. 단, &lt;a href=&quot;https://pecl.php.net/package/scrypt&quot;&gt;PECL::scrypt&lt;/a&gt;, &lt;a href=&quot;https://github.com/DomBlack/php-scrypt&quot;&gt;DomBlack/php-scrypt&lt;/a&gt;를 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;참조하면 도움이 될만한 글들을 아래에 소개한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/02/24/php-password-hash-salt-option-has-been-deprecated/&quot;&gt;PHP password_hash() salt option has been deprecated&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hanbit.co.kr/network/view.html?bi_id=1960&quot;&gt;PHP에서의 더 안전한 암호 구축 : Bycrpt를 이용한 안전한 패스워드 저장&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hiun.github.io/2013/08/bcrypt.html&quot;&gt;bcrypt를 이용한 PHP기반 서비스의 비밀번호 암호화&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.phpschool.com/gnuboard4/bbs/board.php?bo_table=tipntech&amp;amp;wr_id=78316&quot;&gt;비밀번호 암호화의 정석&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>Naver D2에 안전한 패스워드 저장이란 글을 보면 비밀번호 저장을 위한 해시 함수에 대한 소개를 하고 있다. 그 중에서 bcrypt에 대해서는 아래와 같이 설명하고 있다.  bcrypt  bcrypt는 애초부터 패스워드 저장을 목적으로 설계되었다. Niels Provos와 David Mazières가 1999년 발표했고 현재까지 사용되는 가장 강력한 해시 메커니즘 중 하나이다. bcrypt는 보안에 집착하기로 유명한 OpenBSD에서 기본 암호 인증 메커니즘으로 사용되고 있고 미래에 PBKDF2보다 더 경쟁력이 있다고 여겨진다.실제로 PHP의 password_hash()는 암호화 알고리즘으로 bcrypt를 기본으로 사용하고 있다. 하지만 이는 현재 시점 기준이다. 메뉴얼에 따르면 향후 PHP에서 보다 강력한 알고리즘이 추가되면 변경된다고 한다(PASSWORD_DEFAULT 알고리즘 사용시, PASSWORD_BCRYPT 옵션을 사용해서 강제로 지정하는 것도 가능하다).이 시점에서 한가지만 짚고 넘어가자.“PASSWORD_DEFAULT 사용시 향후 알고리즘이 변경될 수 있는데 그렇다면 기존 데이터는 어떻게 해야하나?”당연히 단방향 해시 알고리즘이므로 원래 값으로 복구할 수 없으므로 새로운 알고리즘으로 해시값을 만들 수 없다. 그렇다면 위의 의문처럼 기존 데이터와의 호환은 어떻게 되는가? 사실 걱정할 것은 없다. password_hash()로 만들어진 해시값은  password_verify()를 사용해서 검증하게 되는데 password_verify()가 위 문제를 모두 해결해 준다.그럼 password_verify()는 어떻게 이문제를 해결하는가? 이 부분을 이해하고나면 php에서 만들어진 해시값을 다른 언어(플랫폼)에서 검증하는 것도 가능하다는 것을 알 수 있다.Determining the salt from a password_hash()에 설명된 내용 중 아래에 발췌한 내용이 그 답을 가지고 있다.$2y$10$nOUIs5kJ7naTuTFkBy1veuK0kSxUFXfuaOKdOKf9xYT0KKIGSJwFa |  |  |                     | |  |  |                     hash-value = K0kSxUFXfuaOKdOKf9xYT0KKIGSJwFa |  |  | |  |  salt = nOUIs5kJ7naTuTFkBy1veu (22 characters) |  | |  cost-factor = 10 = 2^10 iterations | hash-algorithm = 2y = BCryptpassword_verify()에서 만들어진 해시값은 위의 설명과 같이 구성되므로 검증에 필요한 모든 정보를 가지고 있다는 것을 알 수 있다.따라서 특별한 이유가 없다면 PASSWORD_DEFAULT 옵션을 사용하는 것이 바람직하다는 생각이다.password_hash()에 관련된 몇가지 추가적 안내가 있다.  이 함수는 php 5.5 이상에서만 사용할 수 있다. 그렇다면 이하 버전에서는 어떻게 할까? 당연히 해결방법은 있다. 친절하게도 ircmaxell/password_compat에 호환 라이브러리가 있다.  scrypt 알고리즘이 훨씬 더 강력하다고 알려져 있으나 아직 PHP에서 공식적으로 지원하지 않고 있다. 단, PECL::scrypt, DomBlack/php-scrypt를 사용할 수 있다.참조하면 도움이 될만한 글들을 아래에 소개한다.  PHP password_hash() salt option has been deprecated  PHP에서의 더 안전한 암호 구축 : Bycrpt를 이용한 안전한 패스워드 저장  bcrypt를 이용한 PHP기반 서비스의 비밀번호 암호화  비밀번호 암호화의 정석</summary>
</entry>
<entry>
<title>PHP password_hash() salt option has been deprecated</title>
<link href="http://blog.asamaru.net/2016/02/24/php-password-hash-salt-option-has-been-deprecated/" rel="alternate" type="text/html" title="PHP password_hash() salt option has been deprecated" />
<published>2016-02-24T20:19:32+09:00</published>
<updated>2016-02-24T20:19:32+09:00</updated>
<id>http://blog.asamaru.net/2016/02/24/php-password-hash-salt-option-has-been-deprecated</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/24/php-password-hash-salt-option-has-been-deprecated/">&lt;p&gt;php에서 비밀번호를 암호화해서 저장하기 위해서 &lt;a href=&quot;http://php.net/manual/kr/function.password-hash.php&quot;&gt;password_hash()&lt;/a&gt;를 사용하고 있다. 다른 곳에서도 오래전에는 MD5, SHA1과 같은 hash 함수를 사용하는 경우들도 있었지만 요즘은 대부분 &lt;code&gt;password_hash()&lt;/code&gt;을 사용하고 있을 것이라고 생각한다.&lt;/p&gt;

&lt;p&gt;이번에 사용중이던 PHP를 7버전으로 버전업하려고 Vagrant에서 먼저 테스트 중이다. 이야기하려는 주제와는 맞지 않지만 PHP 7을 사용하는 것은 필수적인 선택이라고 생각한다. 실제로 테스트 해보니 실행 성능이 향상되며 메모리 사용량도 40% 가량 줄었다. 이 부분은 상황에 따라 다른 결과를 가져올 수 있으나 확실한 것은 성능의 향상이 기대 이상이라는 것이다. 게다가 PHP는 버전업시에 하위 호환에 대해 보수적이라 PHP 7로 버전업하더라도 심각한 호환성 문제를 일으키는 경우는 거의 없을 것으로 생각된다.&lt;/p&gt;

&lt;p&gt;다시 본론으로 돌아와서 &lt;code&gt;password_hash()&lt;/code&gt;를 보면 PHP 7로 버전업되면서 변경 사항이 있다. 그중 하나가 “salt” 옵션이 Deprecated 되었다는 것이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Warning : The salt option has been deprecated as of PHP 7.0.0. It is now preferred to simply use the salt that is generated by default.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이와 관련해서 사용중이던 코드는 아래와 같다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encryptPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_BCRYPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;salt&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이 함수를 PHP 7에서 실행하면 아래와 같은 오류를 만나게 된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;PHP&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Deprecated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;salt&amp;#39;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deprecated&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그럼 이 문제를 해결하려면 어떻게 할까? 아래의 함수를 보자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;password_hash_compat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;crypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$2y$10$&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;PHP 7에서 &lt;code&gt;password_hash()&lt;/code&gt;와 동일한 동작을 하도록 만들어진 함수다. 다만, BCrypt에 한정되며 cost 등의 옵션을 사용할 수 없지만 샘플로 제시한 코드와는 동일한 결과를 반환한다. 주의할 것은 salt의 길이가 22자 이상이어야 한다는 것(실제값이 아니라 base64_encode된 문자열의 길이가 22자 이상).&lt;/p&gt;

&lt;p&gt;이 함수가 맘에 들지 않는다면 &lt;a href=&quot;https://github.com/ircmaxell/password_compat/blob/master/lib/password.php&quot;&gt;ircmaxell/password_compat&lt;/a&gt;을 사용할 수 있다. 단, 이 라이브러리는 &lt;code&gt;password_hash()&lt;/code&gt;가 지원되지 않는 구버전 PHP를 위한 함수로 PHP 7에서 동작하게 하려면 약간의 수정이 필요하다. 하지만 소스를 볼 수 있으니 내부 동작 원리를 파악할 수 있으므로 유용하다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;그런데 Deprecated 된 옵션을 굳이 compat 함수를 만들어가면서까지 유지 해야할 이유가 뭘까? 항상 동일한 hash를 얻어야 하는 것이 아니라면 굳이 필요가 없다. 비밀번호의 경우는 항상 동일한 hash를 만들어 비교하는 것이 목적이 아니라 비밀번호가 같은지만 비교하면 되기 때문에 동일한 hash는 필요치 않다.&lt;/p&gt;

&lt;p&gt;다시 이야기하자면 나의 경우는 맨 처음 적었던 코드를 사용했던 이유는 &lt;code&gt;password_hash()&lt;/code&gt;를 제대로 이해하지 못했기 때문이다. “salt를 넣지 않으면 생성시마다 다른 hash를 반환하니 추후에 다른 환경(언어)에서 해당 값을 비교할 수 없는 것이 아닌가?” 하는 걱정 때문에 salt를 사용했던 것이다. 이 부분이 착각이었던 것이다. &lt;code&gt;password_hash()&lt;/code&gt;와 짝을 이루는 &lt;a href=&quot;http://php.net/manual/kr/function.password-verify.php&quot;&gt;password_verify()&lt;/a&gt;에서는 salt 값이 필요하지 않다. 그렇다면 어떻게 검증을 하는 것일까? &lt;code&gt;password_hash()&lt;/code&gt;의 결과에 이미 salt 값이 포함되어 있기 때문에 salt를 따로 넣어줄 필요가 없는 것이다. 이와 관련된 자세한 정보는 “&lt;a href=&quot;/2016/03/03/php-password-hash-and-bcrypt/&quot;&gt;PHP password_hash()와 BCrypt&lt;/a&gt;“에 따로 남긴다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;결론은 나와 같은 착각을 하고 있는 것이라면 걱정을 뒤로하고 그냥 “salt” 옵션을 사용하지 않도록 변경함으로써 모든 문제는 해결된다. 다만, 다른 이유로 hash가 항상 동일한 값이 필요한 상황이라면 앞서 제시안 대안들을 검토하길 바란다. 비밀번호의 hash가 같은 것은 보안상으로도 좋지않고 다른 값의 hash로 사용하는 것이라면 SHA1 등을 사용하는 것이 맞을테니 대부분의 경우에 나와 같은 착각에서 이 문제를 고민하고 있을 것 같다.&lt;/p&gt;
</content>
<summary>php에서 비밀번호를 암호화해서 저장하기 위해서 password_hash()를 사용하고 있다. 다른 곳에서도 오래전에는 MD5, SHA1과 같은 hash 함수를 사용하는 경우들도 있었지만 요즘은 대부분 password_hash()을 사용하고 있을 것이라고 생각한다.이번에 사용중이던 PHP를 7버전으로 버전업하려고 Vagrant에서 먼저 테스트 중이다. 이야기하려는 주제와는 맞지 않지만 PHP 7을 사용하는 것은 필수적인 선택이라고 생각한다. 실제로 테스트 해보니 실행 성능이 향상되며 메모리 사용량도 40% 가량 줄었다. 이 부분은 상황에 따라 다른 결과를 가져올 수 있으나 확실한 것은 성능의 향상이 기대 이상이라는 것이다. 게다가 PHP는 버전업시에 하위 호환에 대해 보수적이라 PHP 7로 버전업하더라도 심각한 호환성 문제를 일으키는 경우는 거의 없을 것으로 생각된다.다시 본론으로 돌아와서 password_hash()를 보면 PHP 7로 버전업되면서 변경 사항이 있다. 그중 하나가 “salt” 옵션이 Deprecated 되었다는 것이다.  Warning : The salt option has been deprecated as of PHP 7.0.0. It is now preferred to simply use the salt that is generated by default.이와 관련해서 사용중이던 코드는 아래와 같다.1234public function encryptPassword($str){	return password_hash($str, PASSWORD_BCRYPT, [&amp;quot;salt&amp;quot; =&amp;gt; &amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;]);}이 함수를 PHP 7에서 실행하면 아래와 같은 오류를 만나게 된다.1PHP Deprecated:  password_hash(): Use of the &amp;#39;salt&amp;#39; option to password_hash is deprecated그럼 이 문제를 해결하려면 어떻게 할까? 아래의 함수를 보자.12345678function password_hash_compat($str, $salt) {	$salt = base64_encode($salt);  if (strlen($salt) &amp;lt; 22) {      return false;  }	$salt = str_replace(&amp;#39;+&amp;#39;, &amp;#39;.&amp;#39;, $salt);	return crypt($str, &amp;#39;$2y$10$&amp;#39;.$salt.&amp;#39;$&amp;#39;);}PHP 7에서 password_hash()와 동일한 동작을 하도록 만들어진 함수다. 다만, BCrypt에 한정되며 cost 등의 옵션을 사용할 수 없지만 샘플로 제시한 코드와는 동일한 결과를 반환한다. 주의할 것은 salt의 길이가 22자 이상이어야 한다는 것(실제값이 아니라 base64_encode된 문자열의 길이가 22자 이상).이 함수가 맘에 들지 않는다면 ircmaxell/password_compat을 사용할 수 있다. 단, 이 라이브러리는 password_hash()가 지원되지 않는 구버전 PHP를 위한 함수로 PHP 7에서 동작하게 하려면 약간의 수정이 필요하다. 하지만 소스를 볼 수 있으니 내부 동작 원리를 파악할 수 있으므로 유용하다.그런데 Deprecated 된 옵션을 굳이 compat 함수를 만들어가면서까지 유지 해야할 이유가 뭘까? 항상 동일한 hash를 얻어야 하는 것이 아니라면 굳이 필요가 없다. 비밀번호의 경우는 항상 동일한 hash를 만들어 비교하는 것이 목적이 아니라 비밀번호가 같은지만 비교하면 되기 때문에 동일한 hash는 필요치 않다.다시 이야기하자면 나의 경우는 맨 처음 적었던 코드를 사용했던 이유는 password_hash()를 제대로 이해하지 못했기 때문이다. “salt를 넣지 않으면 생성시마다 다른 hash를 반환하니 추후에 다른 환경(언어)에서 해당 값을 비교할 수 없는 것이 아닌가?” 하는 걱정 때문에 salt를 사용했던 것이다. 이 부분이 착각이었던 것이다. password_hash()와 짝을 이루는 password_verify()에서는 salt 값이 필요하지 않다. 그렇다면 어떻게 검증을 하는 것일까? password_hash()의 결과에 이미 salt 값이 포함되어 있기 때문에 salt를 따로 넣어줄 필요가 없는 것이다. 이와 관련된 자세한 정보는 “PHP password_hash()와 BCrypt“에 따로 남긴다.결론은 나와 같은 착각을 하고 있는 것이라면 걱정을 뒤로하고 그냥 “salt” 옵션을 사용하지 않도록 변경함으로써 모든 문제는 해결된다. 다만, 다른 이유로 hash가 항상 동일한 값이 필요한 상황이라면 앞서 제시안 대안들을 검토하길 바란다. 비밀번호의 hash가 같은 것은 보안상으로도 좋지않고 다른 값의 hash로 사용하는 것이라면 SHA1 등을 사용하는 것이 맞을테니 대부분의 경우에 나와 같은 착각에서 이 문제를 고민하고 있을 것 같다.</summary>
</entry>
<entry>
<title>jQuery $.ajax에서 응답 Content-Type을 application/json 사용시 응답 내용이 파일로 다운로드 처리되는 문제</title>
<link href="http://blog.asamaru.net/2016/02/23/jquery-ajax-ie8-content-type-application-json/" rel="alternate" type="text/html" title="jQuery $.ajax에서 응답 Content-Type을 application/json 사용시 응답 내용이 파일로 다운로드 처리되는 문제" />
<published>2016-02-23T21:24:34+09:00</published>
<updated>2016-02-23T21:24:34+09:00</updated>
<id>http://blog.asamaru.net/2016/02/23/jquery-ajax-ie8-content-type-application-json</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/23/jquery-ajax-ie8-content-type-application-json/">&lt;p&gt;jQuery의 $.ajax 함수를 사용해서 JSON 응답을 받고자 할 때 응답값을 배열(객체)로 받는 방법으로 서버 응답시 header 정보에 &lt;code&gt;Content-Type:application/json; charset=utf-8&lt;/code&gt;을 포함하는 방법을 주로 사용한다. 다른 방법도 있지만 응답 데이터의 유형을 명시적으로 지정해서 반환하는 것이 더 나은 방법이라는 생각이다. 실제로 이 방법으로 이제까지 잘 사용해 왔다.&lt;/p&gt;

&lt;p&gt;그런데 얼마전 간단한 작업을 하던 중 이상한 상황에 부딪혔다.
IE8/9에서 &lt;code&gt;Content-Type:application/json; charset=utf-8&lt;/code&gt;을 정상적으로 인식하지 못해 ajax 호출시 응답값을 파일로 저장(다운로드)하려고 하는 것이다(IE10에서 이상없음). 그래서 관련 내용을 찾아보니 &lt;a href=&quot;http://stackoverflow.com/questions/8892819/ie8-treats-json-response-as-file-and-tries-to-download-it&quot;&gt;IE8 treats json response as file and tries to download it&lt;/a&gt;라는 글이 있었다. 여기서의 설명처럼 &lt;code&gt;application/json&lt;/code&gt; 대신 &lt;code&gt;text/plain&lt;/code&gt;을 사용하면 다운로드를 시도하는 현상은 없어진다. 하지만 $.ajax의 done(success) 함수에서 받은 응답값이 배열(객체)가 아니라 text다. 어떻게보면 당연하다. 서버에서 text라고 보냈으니.&lt;/p&gt;

&lt;p&gt;그럼 이 문제는 어떻게 해결할까? 간단한 방법은 $.ajax 사용시 dataType을 ‘json’으로 지정하는 방법을 사용하면 해결된다. 위 링크에서 질문자가 올린 코드를 예시로 아래에 남긴다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;all is well&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 처럼 해결할 수는 있으나 매번 &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt;을 사용하는 것은 맘에 들지 않는다. 다른 방법으로 response가 text로 넘어왔으니 직접 JSON을 parse 하면 되지만 이것도 맘에 들지 않는다. 하지만 현재까지 확인한 바로는 다른 해결 방법을 찾지 못했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;사실 위 내용을 보고 이상하다는 생각을 할 수도 있다. 실제로 굳이 &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt;를 사용하지 않아도 IE8/9에서 이상없이 &lt;code&gt;application/json&lt;/code&gt; header를 사용하고 있는 사람이 있을 것이다. 나도 얼마전까지는 아무 문제없이 사용해오고 있었기 때문이다. 혹시나 싶어 기존 코드들 중 몇가지를 IE8에서 다시 테스트 해 봤으나 역시나 아무 문제가 없었다(아마도 구버전의 jQuery에서는 이 문제를 가지고 있었으나 현재는 관련 문제를 jQuery에서 해결해주고 있는 것으로 보인다.)&lt;/p&gt;

&lt;p&gt;정확히 이야기하자면 나의 경우는 &lt;a href=&quot;http://malsup.com/jquery/form/&quot;&gt;jQuery Form Plugin&lt;/a&gt;을 사용하면서 이 문제가 발생했다. 이번 작업에서 AJAX 파일업로드를 처리 할 일이 있어서 위 라이브러리를 사용했다. 그런데 이 라이브러리의 문제인 것인지 &lt;code&gt;$.ajaxForm&lt;/code&gt; 함수를 사용하면 위 문제가 발생한다.&lt;/p&gt;

&lt;p&gt;해결 방법은 jQuery와 동일하다. 서버 응답시 header에 &lt;code&gt;text/plain&lt;/code&gt;를 사용하고 &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt;을 옵션으로 추가하면 해결된다. 아래의 예시를 보자.&lt;/p&gt;

&lt;p&gt;우선 PHP 샘플 코드다. IE의 버전을 검사해서 필요시에만 &lt;code&gt;text/plain&lt;/code&gt;를 적용한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$returnData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/(?i)msie [5-9]/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type:text/plain; charset=utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type:application/json; charset=utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$returnData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;다음은 javascript 샘플 코드다. &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt;를 추가해서 사용한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#form&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajaxForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;beforeSubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jqForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;statusText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;success&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;statusText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parseJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;추가적으로 응답값의 데이터 타입을 검사해서 text이면 &lt;code&gt;$.parseJSON&lt;/code&gt; 또는 &lt;code&gt;JSON.parse&lt;/code&gt;를 수행해 주도록 한다. 위 코드대로라면 IE9 이하에서는 response가 “string”으로 넘어오고 기타 브라우저에서는 “object”로 넘어올 것이기 때문이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이 글에서는 조금 두서없이 설명을 했다. 상황적으로 그런 것이 jQuery를 사용할 때는 굳이 부수적인 처리가 필요없지만(경험상으로는) 기타 AJAX를 사용하는 상황에서 위와 비슷한 문제가 발생할 수 있어 원인과 해결 방법의 힌트를 설명하고자 여러가지 이야기를 섞어서 설명할 수 밖에 없었으니 양해 바란다. 더욱 상세히 설명하지 못한 부분이 더 문제일수도… 하지만 일일이 설명하자니 너무 글이 길어질 것 같아 기본적인 부분만 언급하고 넘어가니 혹시 더 필요한 부분이 있다면 따로 요청 바란다.&lt;/p&gt;
</content>
<summary>jQuery의 $.ajax 함수를 사용해서 JSON 응답을 받고자 할 때 응답값을 배열(객체)로 받는 방법으로 서버 응답시 header 정보에 Content-Type:application/json; charset=utf-8을 포함하는 방법을 주로 사용한다. 다른 방법도 있지만 응답 데이터의 유형을 명시적으로 지정해서 반환하는 것이 더 나은 방법이라는 생각이다. 실제로 이 방법으로 이제까지 잘 사용해 왔다.그런데 얼마전 간단한 작업을 하던 중 이상한 상황에 부딪혔다.IE8/9에서 Content-Type:application/json; charset=utf-8을 정상적으로 인식하지 못해 ajax 호출시 응답값을 파일로 저장(다운로드)하려고 하는 것이다(IE10에서 이상없음). 그래서 관련 내용을 찾아보니 IE8 treats json response as file and tries to download it라는 글이 있었다. 여기서의 설명처럼 application/json 대신 text/plain을 사용하면 다운로드를 시도하는 현상은 없어진다. 하지만 $.ajax의 done(success) 함수에서 받은 응답값이 배열(객체)가 아니라 text다. 어떻게보면 당연하다. 서버에서 text라고 보냈으니.그럼 이 문제는 어떻게 해결할까? 간단한 방법은 $.ajax 사용시 dataType을 ‘json’으로 지정하는 방법을 사용하면 해결된다. 위 링크에서 질문자가 올린 코드를 예시로 아래에 남긴다. 1 2 3 4 5 6 7 8 9101112$.ajax({  url: url_string,  dataType: &amp;quot;json&amp;quot;,  success: function(response){    alert(&amp;#39;all is well&amp;#39;);  },  error: function(request, status, error){    alert(request);    alert(status);    alert(error);  }});위 처럼 해결할 수는 있으나 매번 dataType: &quot;json&quot;을 사용하는 것은 맘에 들지 않는다. 다른 방법으로 response가 text로 넘어왔으니 직접 JSON을 parse 하면 되지만 이것도 맘에 들지 않는다. 하지만 현재까지 확인한 바로는 다른 해결 방법을 찾지 못했다.사실 위 내용을 보고 이상하다는 생각을 할 수도 있다. 실제로 굳이 dataType: &quot;json&quot;를 사용하지 않아도 IE8/9에서 이상없이 application/json header를 사용하고 있는 사람이 있을 것이다. 나도 얼마전까지는 아무 문제없이 사용해오고 있었기 때문이다. 혹시나 싶어 기존 코드들 중 몇가지를 IE8에서 다시 테스트 해 봤으나 역시나 아무 문제가 없었다(아마도 구버전의 jQuery에서는 이 문제를 가지고 있었으나 현재는 관련 문제를 jQuery에서 해결해주고 있는 것으로 보인다.)정확히 이야기하자면 나의 경우는 jQuery Form Plugin을 사용하면서 이 문제가 발생했다. 이번 작업에서 AJAX 파일업로드를 처리 할 일이 있어서 위 라이브러리를 사용했다. 그런데 이 라이브러리의 문제인 것인지 $.ajaxForm 함수를 사용하면 위 문제가 발생한다.해결 방법은 jQuery와 동일하다. 서버 응답시 header에 text/plain를 사용하고 dataType: &quot;json&quot;을 옵션으로 추가하면 해결된다. 아래의 예시를 보자.우선 PHP 샘플 코드다. IE의 버전을 검사해서 필요시에만 text/plain를 적용한다.1234567$returnData = [1,2,3];if (preg_match(&amp;#39;/(?i)msie [5-9]/&amp;#39;, $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;])) {  header(&amp;#39;Content-Type:text/plain; charset=utf-8&amp;#39;);} else {  header(&amp;#39;Content-Type:application/json; charset=utf-8&amp;#39;);}echo json_encode($returnData);다음은 javascript 샘플 코드다. dataType: &quot;json&quot;를 추가해서 사용한다. 1 2 3 4 5 6 7 8 9101112131415$(&amp;#39;#form&amp;#39;).ajaxForm({	dataType: &amp;quot;json&amp;quot;,	beforeSubmit: function (formData, jqForm, options) {		return true;	},	success: function (response, statusText, xhr, $form) {		if (&amp;#39;success&amp;#39; == statusText) {			if ((response) &amp;amp;&amp;amp; (typeof response !== &amp;quot;object&amp;quot;)) {				response = $.parseJSON(response);			}		}	},	error: function () {	}});추가적으로 응답값의 데이터 타입을 검사해서 text이면 $.parseJSON 또는 JSON.parse를 수행해 주도록 한다. 위 코드대로라면 IE9 이하에서는 response가 “string”으로 넘어오고 기타 브라우저에서는 “object”로 넘어올 것이기 때문이다.이 글에서는 조금 두서없이 설명을 했다. 상황적으로 그런 것이 jQuery를 사용할 때는 굳이 부수적인 처리가 필요없지만(경험상으로는) 기타 AJAX를 사용하는 상황에서 위와 비슷한 문제가 발생할 수 있어 원인과 해결 방법의 힌트를 설명하고자 여러가지 이야기를 섞어서 설명할 수 밖에 없었으니 양해 바란다. 더욱 상세히 설명하지 못한 부분이 더 문제일수도… 하지만 일일이 설명하자니 너무 글이 길어질 것 같아 기본적인 부분만 언급하고 넘어가니 혹시 더 필요한 부분이 있다면 따로 요청 바란다.</summary>
</entry>
<entry>
<title>Error Code: 2006 - MySQL server has gone away</title>
<link href="http://blog.asamaru.net/2016/02/23/error-code-2006-mysql-server-has-gone-away/" rel="alternate" type="text/html" title="Error Code: 2006 - MySQL server has gone away" />
<published>2016-02-23T19:51:01+09:00</published>
<updated>2016-02-23T19:51:01+09:00</updated>
<id>http://blog.asamaru.net/2016/02/23/error-code-2006-mysql-server-has-gone-away</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/23/error-code-2006-mysql-server-has-gone-away/">&lt;p&gt;MySQL이나 MariaDB를 사용하다보면 아래와 같은 오류를 만날 때가 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;Error Code: 2006 - MySQL server has gone away
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;실행중인 Query가 중단되는 이유는 많지만 Error 2006의 경우는 대부분 접속이 끊어지거나 Packet의 크기와 관련이 있다.&lt;/p&gt;

&lt;p&gt;MySQL 공식 메뉴얼에서 &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/gone-away.html&quot;&gt;B.5.2.9 MySQL server has gone away&lt;/a&gt;를 보면 관련된 정보를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;일반적인 상황에서는 접속 중단보다는 Packet이 지정된 사이즈보다 커서 이 오류를 만나는 경우가 대부분이다. 이 경우에 대한 해결 방법 또한 MySQL 공식 메뉴얼의 &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/packet-too-large.html&quot;&gt;B.5.2.10 Packet Too Large&lt;/a&gt;에서 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;요약하자면 아래와 같이 &lt;code&gt;[mysqld]&lt;/code&gt; 항목에 &lt;code&gt;max_allowed_packet&lt;/code&gt; 속성에 적당한 값을 입력함으로써 해결이 가능하다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nmcode&quot;&gt;[mysqld]
max_allowed_packet=16M
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 방법은 데몬의 재시작 시마다 계속 반영되므로 덤프 데이터를 복구하는 경우와 같이 일시적으로만 늘려서 사용하고 싶을 때는 메뉴얼에서의 설명처럼 mysql 실행시  &lt;code&gt;--max_allowed_packet&lt;/code&gt; 속성을 사용할 수도 있다.&lt;/p&gt;
</content>
<summary>MySQL이나 MariaDB를 사용하다보면 아래와 같은 오류를 만날 때가 있다.Error Code: 2006 - MySQL server has gone away실행중인 Query가 중단되는 이유는 많지만 Error 2006의 경우는 대부분 접속이 끊어지거나 Packet의 크기와 관련이 있다.MySQL 공식 메뉴얼에서 B.5.2.9 MySQL server has gone away를 보면 관련된 정보를 확인할 수 있다.일반적인 상황에서는 접속 중단보다는 Packet이 지정된 사이즈보다 커서 이 오류를 만나는 경우가 대부분이다. 이 경우에 대한 해결 방법 또한 MySQL 공식 메뉴얼의 B.5.2.10 Packet Too Large에서 확인 할 수 있다.요약하자면 아래와 같이 [mysqld] 항목에 max_allowed_packet 속성에 적당한 값을 입력함으로써 해결이 가능하다.[mysqld]max_allowed_packet=16M위 방법은 데몬의 재시작 시마다 계속 반영되므로 덤프 데이터를 복구하는 경우와 같이 일시적으로만 늘려서 사용하고 싶을 때는 메뉴얼에서의 설명처럼 mysql 실행시  --max_allowed_packet 속성을 사용할 수도 있다.</summary>
</entry>
<entry>
<title>OSX에서 Microsoft RDP 접속 설정 정보 저장 위치</title>
<link href="http://blog.asamaru.net/2016/02/15/Microsoft-RDP-8-for-Mac-configuration-backup/" rel="alternate" type="text/html" title="OSX에서 Microsoft RDP 접속 설정 정보 저장 위치" />
<published>2016-02-15T20:25:19+09:00</published>
<updated>2016-02-15T20:25:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/15/Microsoft-RDP-8-for-Mac-configuration-backup</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/15/Microsoft-RDP-8-for-Mac-configuration-backup/">&lt;p&gt;개인적으로 MS를 좋아하지 않지만 MS에서 내놓은 것 중 정말 괜찮다고 생각하는 것 중 하나가 RDP(Microsoft Remote Desktop)이다. 업무용으로 맥북을 사용하다보니 윈도우가 필히 필요한 작업을 할 때는 난감하다. 기존에는 VMWare 같은 것들을 썼지만 이런 가상 PC를 띄우는 것조차 귀찮아져서 최근에는 일반 PC에 원도우를 설치해 두고 원격 데스크탑을 사용중이다. 물론 나 혼자 사용하는 것은 아니고 직장 동료들도 각각의 계정을 만들어 함께 사용중이다. 이렇게 사용하니 급할때는 스마트폰에서도 접속할 수 있고 맥북에서 접속시에도 모든 작업을 할 수 있어 무척 편리하다. 앞서 이야기에서 이것을 정말 괜찮은 프로그램이라고 이야기한 이유는 쾌적한 속도 때문이다. 다른 원격 프로그램보다 성능이 훨씬 뛰어나서 원격 데스크톱인 것을 인지하지 못할 정도다.&lt;/p&gt;

&lt;p&gt;서론이 길었는데 오늘 이야기하고자하는 것은 이게 아니다. 사실 얼마전 맥북을 신형으로 교체하면서 RDP의 설정을 이전해야 했다. 그런데 이 RDP의 최대 단점 중 하나가 설정을 한번에 추출할 수가 없다는 것이다. Export 기능이 있기는하나 하나씩 별도로 추출해야하며 비밀번호 등은 추출되지 않고, 한글로된 이름은 나중에 Import시에 다 깨진다. 역시 MS. 이래서 싫어.
나의 경우는 일반 작업뿐 아니라 구버전 IE를 테스트할 때도 원격 데스크탑을 활용하므로 설정이 아주 많은데 OSX를 설치할 때마다 옮기는 것이 여간 귀찮은 것이 아니었다. 어쨌든 이번에도 설정을 결국 다 날려먹고, 앞으로는 제대로 백업하고 싶은 마음에 조사를 조금 해봤다.&lt;/p&gt;

&lt;p&gt;결국은 백업할 방법을 &lt;a href=&quot;http://apple.stackexchange.com/a/182258&quot;&gt;Where does Microsoft RDP 8 for Mac store it’s configuration&lt;/a&gt;에서 찾았다.&lt;/p&gt;

&lt;p&gt;RDP의 plist 파일 자체를 백업하는 것이다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;ls ~/Library/Containers/com.microsoft.rdc.mac/Data/Library/Preferences/com.microsoft.rdc.mac.plist
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 글에 따르면 이 파일안에 모든 정보가 들어가 있다고 한다. 사실 확인은 해보지 않았으나 다음에 OSX를 재설치하게 되면 꼭 이 파일을 백업해서 복구에 사용하려고 한다.&lt;/p&gt;

&lt;p&gt;검증되지는 않았지만 OSX를 재설치하고자 하고 RDP를 사용중이라면 위 파일을 백업해서 사용해보길 권한다. 밑져야 본전이니.&lt;/p&gt;
</content>
<summary>개인적으로 MS를 좋아하지 않지만 MS에서 내놓은 것 중 정말 괜찮다고 생각하는 것 중 하나가 RDP(Microsoft Remote Desktop)이다. 업무용으로 맥북을 사용하다보니 윈도우가 필히 필요한 작업을 할 때는 난감하다. 기존에는 VMWare 같은 것들을 썼지만 이런 가상 PC를 띄우는 것조차 귀찮아져서 최근에는 일반 PC에 원도우를 설치해 두고 원격 데스크탑을 사용중이다. 물론 나 혼자 사용하는 것은 아니고 직장 동료들도 각각의 계정을 만들어 함께 사용중이다. 이렇게 사용하니 급할때는 스마트폰에서도 접속할 수 있고 맥북에서 접속시에도 모든 작업을 할 수 있어 무척 편리하다. 앞서 이야기에서 이것을 정말 괜찮은 프로그램이라고 이야기한 이유는 쾌적한 속도 때문이다. 다른 원격 프로그램보다 성능이 훨씬 뛰어나서 원격 데스크톱인 것을 인지하지 못할 정도다.서론이 길었는데 오늘 이야기하고자하는 것은 이게 아니다. 사실 얼마전 맥북을 신형으로 교체하면서 RDP의 설정을 이전해야 했다. 그런데 이 RDP의 최대 단점 중 하나가 설정을 한번에 추출할 수가 없다는 것이다. Export 기능이 있기는하나 하나씩 별도로 추출해야하며 비밀번호 등은 추출되지 않고, 한글로된 이름은 나중에 Import시에 다 깨진다. 역시 MS. 이래서 싫어.나의 경우는 일반 작업뿐 아니라 구버전 IE를 테스트할 때도 원격 데스크탑을 활용하므로 설정이 아주 많은데 OSX를 설치할 때마다 옮기는 것이 여간 귀찮은 것이 아니었다. 어쨌든 이번에도 설정을 결국 다 날려먹고, 앞으로는 제대로 백업하고 싶은 마음에 조사를 조금 해봤다.결국은 백업할 방법을 Where does Microsoft RDP 8 for Mac store it’s configuration에서 찾았다.RDP의 plist 파일 자체를 백업하는 것이다.1ls ~/Library/Containers/com.microsoft.rdc.mac/Data/Library/Preferences/com.microsoft.rdc.mac.plist위 글에 따르면 이 파일안에 모든 정보가 들어가 있다고 한다. 사실 확인은 해보지 않았으나 다음에 OSX를 재설치하게 되면 꼭 이 파일을 백업해서 복구에 사용하려고 한다.검증되지는 않았지만 OSX를 재설치하고자 하고 RDP를 사용중이라면 위 파일을 백업해서 사용해보길 권한다. 밑져야 본전이니.</summary>
</entry>
<entry>
<title>PHP CLI 사용자 입력(STDIN) 받기</title>
<link href="http://blog.asamaru.net/2016/02/10/php-stdin/" rel="alternate" type="text/html" title="PHP CLI 사용자 입력(STDIN) 받기" />
<published>2016-02-10T20:50:19+09:00</published>
<updated>2016-02-10T20:50:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/10/php-stdin</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/10/php-stdin/">&lt;p&gt;PHP CLI를 사용해서 Shell Script를 생성하다보면 사용자에게 어떤 데이터를 입력 받아야 상황이 발생할 수 있다. 이런 경우에 사용할 수 있는 몇가지 방법에 대해 설명하고자 한다.&lt;/p&gt;

&lt;p&gt;우선 PHP 메뉴얼 중 &lt;a href=&quot;http://php.net/manual/kr/features.commandline.io-streams.php&quot;&gt;Input/output streams&lt;/a&gt;에 있는 예시에 약간의 코드를 더해서 설명하겠다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;php://stdin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$fileContents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fclose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fileContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;우선 위 방법은 fopen을 사용해서 사용자에게 입력 받는 방법이다. 이 방법은 사용자의 입력이 완료될 때(Enter 입력시)까지 대기하게 하거나 pipe(|)를 이용해 입력이 가능하다. 위 내용을 &lt;code&gt;fopenTest.php&lt;/code&gt;로 저장했다면 아래와 같이 실행해 볼 수 있다. 그리고 1024는 입력의 최대 길이로 그 이상의 입력이 들어오면 무시된다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이와 동일한 역할로 다음과 같이 사용할 수도 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// reads one line from STDIN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;처음 코드와 동일하게 동작한다. 그리고 특정 형식으로 데이터를 입력받고 싶다면 아래와 같이 사용할 수도 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// reads number from STDIN&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 코드는 실행 결과는 약간 다른점이 있으니 아래의 실행 예시를 참고하자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 입력값이 무시되어 아무값도 출력되지 않음&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
2test3 &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 2 이후의 입력값이 무시됨&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php fopenTest.php
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 입력 후 Enter&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 유효한 입력으로 123이 출력됨&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; php fopenTest.php
&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 유효한 입력으로 123이 출력됨&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;PHP에서는 다른 방법으로 &lt;a href=&quot;http://php.net/manual/kr/function.readline.php&quot;&gt;readline&lt;/a&gt;을 사용하는 것이 가능하다. 예를들면 아래와 같이 확인해 볼 수 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//get 3 commands from user&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Command: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;readline_add_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//dump history&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline_list_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//dump variables&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;그런데 이 함수는 제약조건이 있다. 메뉴얼에 따르면 &lt;a href=&quot;http://php.net/manual/kr/function.readline-list-history.php&quot;&gt;readline_list_history&lt;/a&gt;는 &lt;code&gt;libreadline&lt;/code&gt;과 함께 컴파일되어야만 사용할 수 있다고 되어 있다. 그래서 위 예시는 제대로 테스트 해보지 못했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;그렇다면 사용자에게 한글자의 입력만 받고 싶다면 어떻게하면 될까? 아래의 예시를 보자.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fgetc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;위 코드를 실행하면 한글자만 입력을 받게 되지만 한글자를 입력하고 Enter를 눌러야 한다. 그럼 그냥 한글자를 입력하면 바로 입력을 완료하고자 한다면 어떻게 할까? 아래에 그 답이 있다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;readline_callback_handler_install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strcasecmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;작업을 취소함&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;변경 완료&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;나의 경우엔 위 스크립트를 사용해야하는 상황이 가장 많은 것 같다. 위험한 동작을 실행하기전 다시 한번 확인하는 것이 정신 건강에 이롭다.&lt;/p&gt;
</content>
<summary>PHP CLI를 사용해서 Shell Script를 생성하다보면 사용자에게 어떤 데이터를 입력 받아야 상황이 발생할 수 있다. 이런 경우에 사용할 수 있는 몇가지 방법에 대해 설명하고자 한다.우선 PHP 메뉴얼 중 Input/output streams에 있는 예시에 약간의 코드를 더해서 설명하겠다.123456&amp;lt;?php$stdin = fopen(&amp;#39;php://stdin&amp;#39;, &amp;#39;r&amp;#39;);$fileContents = fread($stdin, 1024);fclose($stdin);echo $fileContents;우선 위 방법은 fopen을 사용해서 사용자에게 입력 받는 방법이다. 이 방법은 사용자의 입력이 완료될 때(Enter 입력시)까지 대기하게 하거나 pipe(|)를 이용해 입력이 가능하다. 위 내용을 fopenTest.php로 저장했다면 아래와 같이 실행해 볼 수 있다. 그리고 1024는 입력의 최대 길이로 그 이상의 입력이 들어오면 무시된다.123456$ php fopenTest.phptest # 입력 후 Entertest$ echo &amp;quot;test&amp;quot; | php fopenTest.phptest이와 동일한 역할로 다음과 같이 사용할 수도 있다.12&amp;lt;?phpecho trim(fgets(STDIN)); // reads one line from STDIN처음 코드와 동일하게 동작한다. 그리고 특정 형식으로 데이터를 입력받고 싶다면 아래와 같이 사용할 수도 있다.123&amp;lt;?phpfscanf(STDIN, &amp;quot;%d\n&amp;quot;, $number); // reads number from STDINecho $number;위 코드는 실행 결과는 약간 다른점이 있으니 아래의 실행 예시를 참고하자. 1 2 3 4 5 6 7 8 91011121314$ php fopenTest.phptest # 입력 후 Enter# 입력값이 무시되어 아무값도 출력되지 않음$ php fopenTest.php2test3 # 입력 후 Enter2 # 2 이후의 입력값이 무시됨$ php fopenTest.php123 # 입력 후 Enter123 # 유효한 입력으로 123이 출력됨$ echo &amp;quot;123&amp;quot; | php fopenTest.php123 # 유효한 입력으로 123이 출력됨PHP에서는 다른 방법으로 readline을 사용하는 것이 가능하다. 예를들면 아래와 같이 확인해 볼 수 있다. 1 2 3 4 5 6 7 8 9101112&amp;lt;?php//get 3 commands from userfor ($i=0; $i &amp;lt; 3; $i++) {        $line = readline(&amp;quot;Command: &amp;quot;);        readline_add_history($line);}//dump historyprint_r(readline_list_history());//dump variablesprint_r(readline_info());그런데 이 함수는 제약조건이 있다. 메뉴얼에 따르면 readline_list_history는 libreadline과 함께 컴파일되어야만 사용할 수 있다고 되어 있다. 그래서 위 예시는 제대로 테스트 해보지 못했다.그렇다면 사용자에게 한글자의 입력만 받고 싶다면 어떻게하면 될까? 아래의 예시를 보자.123&amp;lt;?phpecho &amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;;$input = fgetc(STDIN);위 코드를 실행하면 한글자만 입력을 받게 되지만 한글자를 입력하고 Enter를 눌러야 한다. 그럼 그냥 한글자를 입력하면 바로 입력을 완료하고자 한다면 어떻게 할까? 아래에 그 답이 있다. 1 2 3 4 5 6 7 8 9101112131415161718192021&amp;lt;?phpecho &amp;#39;변경 후에는 복구할 수 없습니다. 변경하시겠습니까? (y/n) &amp;#39;;readline_callback_handler_install(&amp;#39;&amp;#39;, function () {});while (true) {  $r = [STDIN];  $w = null;  $e = null;  $n = stream_select($r, $w, $e, 0);  if ($n &amp;amp;&amp;amp; in_array(STDIN, $r)) {    $c = stream_get_contents(STDIN, 1);    if (strcasecmp($c, &amp;#39;y&amp;#39;) != 0) {      echo &amp;quot;\n작업을 취소함\n&amp;quot;;      exit;    }    break;  }}echo &amp;quot;변경 완료\n&amp;quot;;나의 경우엔 위 스크립트를 사용해야하는 상황이 가장 많은 것 같다. 위험한 동작을 실행하기전 다시 한번 확인하는 것이 정신 건강에 이롭다.</summary>
</entry>
<entry>
<title>CCProxy를 사용해서 Windows Proxy Server 만들기</title>
<link href="http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy/" rel="alternate" type="text/html" title="CCProxy를 사용해서 Windows Proxy Server 만들기" />
<published>2016-02-02T14:27:19+09:00</published>
<updated>2016-02-02T14:27:19+09:00</updated>
<id>http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/02/windows-proxy-server-using-ccproxy/">&lt;p&gt;Proxy Server를 사용할 일이 생겼는데 필요한 프로그램이 윈도우용 프로그램이라 윈도우 PC에 프록서 서버를 구성해야하는 상황이었다. 정확히 이야기하자면 외부 Proxy 서비스를 사용하고 있는데 서비스 제공자가 접속 프로그램을 윈도우용으로만 제공해서 어쩔 수 없이 윈도우에서 사용중이었다. 그런데 이 Proxy 서비스를 사용해야하는 프로그램은 linux 환경에서 동작해서 기존에는 윈도우 PC에 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;로 linux 환경을 구성해서 사용했다. 그런데 문제는 proxy를 선택적으로 사용해야 하는데 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 내부에서는 가상망으로 구성되어 무조건 부모망을 사용해서 선택적으로 사용할 수 없었다. NIC을 추가해서 망을 이중화하면 되지만 여러가지 이유로 그냥 윈도우 PC는 중개(Proxy)용으로만 사용하고 별도의 서버를 구성하기로 했다. 그래서 윈도우용 Proxy Server를 구성하게된 것이다. 다시말해 Proxy를 Proxy를 통해 사용하는 것. 사설이 길었는데 이건 중요한 것은 아니고.&lt;/p&gt;

&lt;p&gt;결론적으로 몇가지 프로그램을 알아보던 중 &lt;a href=&quot;http://www.youngzsoft.net/ccproxy/&quot;&gt;CCProxy&lt;/a&gt;를 선택했다. 최대 3명의 사용자까지 무료로 사용 가능하고 NT Service로 등록 가능하며 설정이 무척 쉽다.&lt;/p&gt;

&lt;p&gt;설치 과정은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youngzsoft.net/ccproxy/&quot;&gt;CCProxy&lt;/a&gt;에서 free version을 다운 받아서 설치한다. 설치 후에 프로그램을 실행하면 방화벽에서 허용할 것인지 물어보는데 당연히 허용해야 한다. 아니면 사용할 포트만 직접 방화벽에서 열어주어도 된다.&lt;/p&gt;

&lt;p&gt;프로그램이 실행되면 “Options”를 눌러 사용할 포트만 체크해주고 “Local IP Address” 영역을 확인해 준다. “Local IP Address” 영역에는 기본적으로 “Auto Detect”가 체크되어 있는데 원하는 IP가 아니라면 체크를 해제하고 원하는 IP를 선택하면 된다. 그리고 “NT Service”를 체크해주고 “OK”를 누르면 완료.&lt;/p&gt;

&lt;p&gt;마지막으로 접속하는 Client를 제한하고 싶다면 “Account” 메뉴에서 지정하면 된다.&lt;/p&gt;

&lt;p&gt;스샷을 첨부하려 했으나 그럴 필요가 없을 정도로 간단하다.&lt;/p&gt;
</content>
<summary>Proxy Server를 사용할 일이 생겼는데 필요한 프로그램이 윈도우용 프로그램이라 윈도우 PC에 프록서 서버를 구성해야하는 상황이었다. 정확히 이야기하자면 외부 Proxy 서비스를 사용하고 있는데 서비스 제공자가 접속 프로그램을 윈도우용으로만 제공해서 어쩔 수 없이 윈도우에서 사용중이었다. 그런데 이 Proxy 서비스를 사용해야하는 프로그램은 linux 환경에서 동작해서 기존에는 윈도우 PC에 Vagrant로 linux 환경을 구성해서 사용했다. 그런데 문제는 proxy를 선택적으로 사용해야 하는데 Vagrant 내부에서는 가상망으로 구성되어 무조건 부모망을 사용해서 선택적으로 사용할 수 없었다. NIC을 추가해서 망을 이중화하면 되지만 여러가지 이유로 그냥 윈도우 PC는 중개(Proxy)용으로만 사용하고 별도의 서버를 구성하기로 했다. 그래서 윈도우용 Proxy Server를 구성하게된 것이다. 다시말해 Proxy를 Proxy를 통해 사용하는 것. 사설이 길었는데 이건 중요한 것은 아니고.결론적으로 몇가지 프로그램을 알아보던 중 CCProxy를 선택했다. 최대 3명의 사용자까지 무료로 사용 가능하고 NT Service로 등록 가능하며 설정이 무척 쉽다.설치 과정은 다음과 같다.CCProxy에서 free version을 다운 받아서 설치한다. 설치 후에 프로그램을 실행하면 방화벽에서 허용할 것인지 물어보는데 당연히 허용해야 한다. 아니면 사용할 포트만 직접 방화벽에서 열어주어도 된다.프로그램이 실행되면 “Options”를 눌러 사용할 포트만 체크해주고 “Local IP Address” 영역을 확인해 준다. “Local IP Address” 영역에는 기본적으로 “Auto Detect”가 체크되어 있는데 원하는 IP가 아니라면 체크를 해제하고 원하는 IP를 선택하면 된다. 그리고 “NT Service”를 체크해주고 “OK”를 누르면 완료.마지막으로 접속하는 Client를 제한하고 싶다면 “Account” 메뉴에서 지정하면 된다.스샷을 첨부하려 했으나 그럴 필요가 없을 정도로 간단하다.</summary>
</entry>
<entry>
<title>구형 애플 맥 미니 CentOS 7 서버로 재활용하기</title>
<link href="http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini/" rel="alternate" type="text/html" title="구형 애플 맥 미니 CentOS 7 서버로 재활용하기" />
<published>2016-02-02T12:37:47+09:00</published>
<updated>2016-02-02T12:37:47+09:00</updated>
<id>http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini</id>
<content type="html" xml:base="http://blog.asamaru.net/2016/02/02/installing-centos-7-on-an-apple-mac-mini/">&lt;p&gt;회사에서 맥북 프로를 새로 구매하면서 맥 미니(2012년형)가 한대 남게 되었다. 사실은 다른 이유로 2대가 남게 되었는데 한대는 예비로 그냥 두고 한대를 서버로 사용하기로 했다. 그래서 설치 방법을 찾아보다 &lt;a href=&quot;http://drewcdecker.me/2014/08/installing-centos-7-on-an-apple-mac-mini/&quot;&gt;Installing CentOS 7 on an Apple Mac Mini&lt;/a&gt;를 찾았다. 그런데 이 글에서는 &lt;a href=&quot;https://www.centos.org/&quot;&gt;CentOS 7&lt;/a&gt;을 바로 설치할 수 없어 CentOS 6.5를 설치 후 7으로 업데이트하는 방법을 안내하고 있었다. 이 방법은 개인적인 취향상 선택하기 싫었다. 그래서 조금 더 찾다보니 &lt;a href=&quot;http://www.myiphoneadventure.com/os-x/create-a-bootable-centos-usb-drive-with-a-mac-os-x&quot;&gt;Create a bootable CentOS USB drive with a Mac (OS X) for a PC&lt;/a&gt;라는 글이 있었다. 여기서는 맥 설치용 CentOS 7 부트 USB를 만드는 법을 설명하고 있어서 이 글을 참고해서 작업을 시작했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;우선 &lt;a href=&quot;https://www.centos.org/download/&quot;&gt;CentOS 7용 iso 이미지&lt;/a&gt;를 내려 받는다. 나는 minimal을 선호하기 때문에 위 글의 설명과 달리 minimal을 다운 받았다.&lt;/p&gt;

&lt;p&gt;해당 이미지가 있는 폴더에 가서 아래와 같이 dmg 파일을 우선 생성한다. 당연히 맥에서 작업해야 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hdiutil convert -format UDRW -o target.img CentOS-7-x86_64-Minimal-1511.iso

Master Boot Record&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MBR : 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
CentOS &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; x86_64                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Apple_ISO : 1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Type EF : 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
.
CentOS &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; x86_64                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Apple_ISO : 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 읽는 중...
....................................................................................................................................................................
경과 시간: 661.204ms
속도: 912.0Mbytes/초
저장: 0.0%
created: /Users/yjyou/Downloads/target.img.dmg
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;부트 이미지를 담을 USB를 연결한 다음 아래와 같이 &lt;code&gt;diskutil&lt;/code&gt;을 사용해서 disk 번호를 확인한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil list

/dev/disk0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;internal, physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:      GUID_partition_scheme                        *500.3 GB   disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:          Apple_CoreStorage Macintosh HD            250.5 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
   4:                  Apple_HFS DATA                    248.8 GB   disk0s4
/dev/disk1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;internal, virtual&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:                  Apple_HFS Macintosh HD           +250.1 GB   disk1
                                 Logical Volume on disk0s2
                                 55AC6B2F-B3B4-450F-B4DE-E025311E9955
                                 Unencrypted
/dev/disk2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;external, physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
   &lt;span class=&quot;c&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER&lt;/span&gt;
   0:      GUID_partition_scheme                        *15.8 GB    disk2
   1:                        EFI EFI                     209.7 MB   disk2s1
   2:       Microsoft Basic Data USB                     15.6 GB    disk2s2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;나의 경우는 &lt;code&gt;/dev/disk2&lt;/code&gt;에 mount 되어 있었다. &lt;strong&gt;이후의 과정에서는 당연히 자신에게 맞는 disk 번호를 사용해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;우선 USB를 unmount 한다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; diskutil unmountDisk /dev/disk2

Unmount of all volumes on disk2 was successful
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이제는 실제로 위에 만든 dmg 이미지를 이용해서 부트 USB를 만든다.&lt;/p&gt;

&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight notranslate&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;sudo dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;target.img.dmg &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/disk2 &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1m

602+1 records in
602+1 records out
&lt;span class=&quot;m&quot;&gt;632262656&lt;/span&gt; bytes transferred in 155.872514 secs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4056281&lt;/span&gt; bytes/sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

real	2m36.025s
user	0m0.006s
sys	0m2.548s
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;이미지를 만드는데 시간이 조금 소요되니 걱정하지 말고 기다리자. 그리고 생성되고 나면 해당 디스크를 인식할 수 없다고 자동적으로 추출된다. 이제는 USB를 빼서 설치할 맥 미니에 연결하고 부팅한다. 당연히 &lt;code&gt;alt/option&lt;/code&gt;를 누르고 부팅해서 부팅 디스크를 선택하는 화면으로 진입해야 한다.&lt;/p&gt;

&lt;p&gt;이후 과정을 진행하기 전에 파티션의 변경이 필요하다면 미리 맥 미니 내에서 설정해 두어야 한다. 나의 경우를 보자면 500G의 디스크를 2개의 파티션으로 나누고 복구 파티션까지 3개가 있었다. 처음엔 복구 파티션을 두고 두개의 파티션을 CentOS 설치 과정에서 묶으려고 했는데 복구 파티션이 두개 파티션 사이에 위치해 합칠 수 없었다. 그래서 맥에서 두개의 파티션을 합쳐주고 다시 설치했다. 사실은 이 과정은 복구 파티션을 두려고 했던 것인데 실제 CentOS를 설치하면서 복구 파티션도 날렸다(원하지 않았지만). 이렇게되면 위 과정이 필요없었을 수 있지만 혹시나해서 남겨둔다.&lt;/p&gt;

&lt;p&gt;이제부터는 일반적으로 CentOS를 설치하는 것과 동일하게 설치하면 된다. 설치 방법이 궁금하다면 &lt;a href=&quot;/2015/10/14/centos-7-minimal-install/&quot;&gt;CentOS 7 minimal 설치&lt;/a&gt;를  참고해도 된다.&lt;/p&gt;

&lt;p&gt;마지막으로 중요한 부분이 있다. 파티션 설치시 &lt;code&gt;/boot/efi&lt;/code&gt;을 별도로 지정해야 한다는 것이다. 일반적인 설치에서는 하지 않던 작업인데 맥 미니의 경우 해당 파티션이 기본적으로 없어서 그런 것인지 지정하지 않으면 파티셔닝이 완료되지 않았다. &lt;code&gt;/boot/efi&lt;/code&gt;의 용량은 최소 100MB를 지정하도록 권장하는 것 같다. 이 부분 또한 자동 파티셔닝이 아닌 사용자 지정 파티션을 사용해서 발생한 문제일지도 모르겠다. 하지만 개인적인 생각으로 “맥 미니에서 다른 CentOS 설치시 잘 안되는 경우는 이것 때문이지 않을까?”해서 경험을 남겨둔다.&lt;/p&gt;

&lt;p&gt;이후부터는 정말 CentOS 설치와 동일하다(일단 나의 경우엔).&lt;/p&gt;
</content>
<summary>회사에서 맥북 프로를 새로 구매하면서 맥 미니(2012년형)가 한대 남게 되었다. 사실은 다른 이유로 2대가 남게 되었는데 한대는 예비로 그냥 두고 한대를 서버로 사용하기로 했다. 그래서 설치 방법을 찾아보다 Installing CentOS 7 on an Apple Mac Mini를 찾았다. 그런데 이 글에서는 CentOS 7을 바로 설치할 수 없어 CentOS 6.5를 설치 후 7으로 업데이트하는 방법을 안내하고 있었다. 이 방법은 개인적인 취향상 선택하기 싫었다. 그래서 조금 더 찾다보니 Create a bootable CentOS USB drive with a Mac (OS X) for a PC라는 글이 있었다. 여기서는 맥 설치용 CentOS 7 부트 USB를 만드는 법을 설명하고 있어서 이 글을 참고해서 작업을 시작했다.우선 CentOS 7용 iso 이미지를 내려 받는다. 나는 minimal을 선호하기 때문에 위 글의 설명과 달리 minimal을 다운 받았다.해당 이미지가 있는 폴더에 가서 아래와 같이 dmg 파일을 우선 생성한다. 당연히 맥에서 작업해야 한다. 1 2 3 4 5 6 7 8 9101112$ hdiutil convert -format UDRW -o target.img CentOS-7-x86_64-Minimal-1511.isoMaster Boot Record(MBR : 0) 읽는 중...CentOS 7 x86_64                 (Apple_ISO : 1) 읽는 중...(Type EF : 2) 읽는 중....CentOS 7 x86_64                 (Apple_ISO : 3) 읽는 중.......................................................................................................................................................................경과 시간: 661.204ms속도: 912.0Mbytes/초저장: 0.0%created: /Users/yjyou/Downloads/target.img.dmg부트 이미지를 담을 USB를 연결한 다음 아래와 같이 diskutil을 사용해서 disk 번호를 확인한다. 1 2 3 4 5 6 7 8 91011121314151617181920$ diskutil list/dev/disk0 (internal, physical):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:      GUID_partition_scheme                        *500.3 GB   disk0   1:                        EFI EFI                     209.7 MB   disk0s1   2:          Apple_CoreStorage Macintosh HD            250.5 GB   disk0s2   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3   4:                  Apple_HFS DATA                    248.8 GB   disk0s4/dev/disk1 (internal, virtual):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:                  Apple_HFS Macintosh HD           +250.1 GB   disk1                                 Logical Volume on disk0s2                                 55AC6B2F-B3B4-450F-B4DE-E025311E9955                                 Unencrypted/dev/disk2 (external, physical):   #:                       TYPE NAME                    SIZE       IDENTIFIER   0:      GUID_partition_scheme                        *15.8 GB    disk2   1:                        EFI EFI                     209.7 MB   disk2s1   2:       Microsoft Basic Data USB                     15.6 GB    disk2s2나의 경우는 /dev/disk2에 mount 되어 있었다. 이후의 과정에서는 당연히 자신에게 맞는 disk 번호를 사용해야 한다.우선 USB를 unmount 한다.123$  diskutil unmountDisk /dev/disk2Unmount of all volumes on disk2 was successful이제는 실제로 위에 만든 dmg 이미지를 이용해서 부트 USB를 만든다.123456789$ time sudo dd if=target.img.dmg of=/dev/disk2 bs=1m602+1 records in602+1 records out632262656 bytes transferred in 155.872514 secs (4056281 bytes/sec)real	2m36.025suser	0m0.006ssys	0m2.548s이미지를 만드는데 시간이 조금 소요되니 걱정하지 말고 기다리자. 그리고 생성되고 나면 해당 디스크를 인식할 수 없다고 자동적으로 추출된다. 이제는 USB를 빼서 설치할 맥 미니에 연결하고 부팅한다. 당연히 alt/option를 누르고 부팅해서 부팅 디스크를 선택하는 화면으로 진입해야 한다.이후 과정을 진행하기 전에 파티션의 변경이 필요하다면 미리 맥 미니 내에서 설정해 두어야 한다. 나의 경우를 보자면 500G의 디스크를 2개의 파티션으로 나누고 복구 파티션까지 3개가 있었다. 처음엔 복구 파티션을 두고 두개의 파티션을 CentOS 설치 과정에서 묶으려고 했는데 복구 파티션이 두개 파티션 사이에 위치해 합칠 수 없었다. 그래서 맥에서 두개의 파티션을 합쳐주고 다시 설치했다. 사실은 이 과정은 복구 파티션을 두려고 했던 것인데 실제 CentOS를 설치하면서 복구 파티션도 날렸다(원하지 않았지만). 이렇게되면 위 과정이 필요없었을 수 있지만 혹시나해서 남겨둔다.이제부터는 일반적으로 CentOS를 설치하는 것과 동일하게 설치하면 된다. 설치 방법이 궁금하다면 CentOS 7 minimal 설치를  참고해도 된다.마지막으로 중요한 부분이 있다. 파티션 설치시 /boot/efi을 별도로 지정해야 한다는 것이다. 일반적인 설치에서는 하지 않던 작업인데 맥 미니의 경우 해당 파티션이 기본적으로 없어서 그런 것인지 지정하지 않으면 파티셔닝이 완료되지 않았다. /boot/efi의 용량은 최소 100MB를 지정하도록 권장하는 것 같다. 이 부분 또한 자동 파티셔닝이 아닌 사용자 지정 파티션을 사용해서 발생한 문제일지도 모르겠다. 하지만 개인적인 생각으로 “맥 미니에서 다른 CentOS 설치시 잘 안되는 경우는 이것 때문이지 않을까?”해서 경험을 남겨둔다.이후부터는 정말 CentOS 설치와 동일하다(일단 나의 경우엔).</summary>
</entry>
</feed>
