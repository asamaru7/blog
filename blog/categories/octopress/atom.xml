<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | 이 세상에 하나는 남기고 가자]]></title>
  <link href="http://blog.asamaru.net/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://blog.asamaru.net/"/>
  <updated>2015-10-13T14:33:51+09:00</updated>
  <id>http://blog.asamaru.net/</id>
  <author>
    <name><![CDATA[유영재]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[구글 번역 사용시 특정 영역을 번역에서 제외하기]]></title>
    <link href="http://blog.asamaru.net/2015/09/18/google-translate-exclude-words/"/>
    <updated>2015-09-18T12:13:16+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/18/google-translate-exclude-words</id>
    <content type="html"><![CDATA[<p>이 블로그에는 구글 번역 기능이 붙어 있다. 관련해서 포스팅한 글 <a href="/2015/09/05/octopress-google-translate/">옥토프레스에 구글 번역기 달기</a>도 있다.
현재 테스트로 몇가지 언어를 선택 가능하도록 하고 사용중인데 문제가 생겼다. 기존에는 기능을 달아 놓고 번역이 되는 것만 확인하고는 자세히 보지 않아서 몰랐는데 오늘 확인하니 소스 코드까지 부분적으로 번역이 되는 것이 아닌가. 사실 이 블로그의 주된 내용이 프로그래밍 관련이라 코드 블록이 아주 많다.
그래서 방법을 구글 번역 메뉴얼에서 보니 다음과 같은 방법이 나와있었다.</p>

<h2 id="부분적으로-번역-제외하기">부분적으로 번역 제외하기</h2>

<p>해당 영역을 둘러싸고 있는 Tag에 notranslate Class를 준다.</p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;notranslate&quot;</span><span class="nt">&gt;</span>번역하지 말아야 할 영역<span class="nt">&lt;/span&gt;</span>
</code></pre></div>
<h2 id="문서-전체를-번역-제외하기">문서 전체를 번역 제외하기</h2>

<p>Html의 head 영역에 아래의 Meta 정보를 추가한다.</p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;google&quot;</span> <span class="na">content=</span><span class="s">&quot;notranslate&quot;</span><span class="nt">&gt;</span>
</code></pre></div>
<h2 id="옥토프레스에-적용하기">옥토프레스에 적용하기</h2>

<p>문제는 옥토프레스의 결과 HTML은 직접 만드는 것이 아니라는 것이다. 여러가지 방법이 있을 수 있으나 나는 code block만 검색에서 제외되면 되므로 그냥 관련 플러그인을 수정해 버렸다. <code>backtick_code_block.rb</code> 파일에서 <code>&lt;figure class=&#39;code&#39;&gt;</code> 부분을 찾아서 <code>&lt;figure class=&#39;code notranslate&#39;&gt;</code>로 바꿔 버렸다.</p>

<p>이것으로 모든 것이 해결된 것은 아니다. 문장 내에서 사용된 코드 블록은 backtick_code_block 플러그인에서 처리하지 않으니 다른 플러그인을 고쳐야 하는데 어딘지 찾지 못했다. 아마도 markdown 해석 플러그인 내부에 있을텐데 gem으로 설치된 것인지 내부에서는 보이지 않는 듯하다(사실 귀찮아서 자세히 찾지 않았다. 게다가 Ruby를 거의 모른다.)</p>

<p>어쨌든 이로써 소스 코드 영역은 번역에서 제외되어 조금은 나아졌다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[옥토프레스에 구글 번역기 달기]]></title>
    <link href="http://blog.asamaru.net/2015/09/05/octopress-google-translate/"/>
    <updated>2015-09-05T06:47:14+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/05/octopress-google-translate</id>
    <content type="html"><![CDATA[<p>구글에서는 웹사이트에 여러가지 언어로 번역해서 보여줄 수 있는 기능을 제공해 준다.
이 블로그에 한국어가 아닌 다른 언어를 사용하는 사람이 누가 오겠냐만은 이 블로그는 여러가지 실험을 하기 위한 블로그이므로 구글 번역기도 달아봤다. 생각보다 간단하다.</p>

<h2 id="구글-번역-스크립트-생성">구글 번역 스크립트 생성</h2>

<p><a href="http://translate.google.com/manager/website/">http://translate.google.com/manager/website/</a></p>

<p><img src="/img/2015-09-05-octopress-google-translate-1.png" alt="웹사이트에 지금 추가" title="웹사이트에 지금 추가"></p>

<p>&quot;웹사이트에 지금 추가&quot;를 눌러 다음으로.</p>

<p><img src="/img/2015-09-05-octopress-google-translate-2.png" alt="웹사이트 정보"></p>

<p>번역기를 넣을 웹사이트 주소를 입력하고 언어 선택 후 다음.</p>

<p><img src="/img/2015-09-05-octopress-google-translate-3.png" alt="플러그인 설정"></p>

<p>원하는 옵션을 선택하고 다음.</p>

<p><img src="/img/2015-09-05-octopress-google-translate-4.png" alt="플러그인 추가"></p>

<p>번역 스크립트 완성. 이제 이 스크립트를 복사해서 원하는 곳에 넣으면 끝이다.</p>

<h2 id="옥토프레스에-추가">옥토프레스에 추가</h2>

<p>옥토프레스에 추가하는 방법은 템플릿 html 어딘가에(노출을 원하는 위치) 넣으면 끝이다.
맨 상단 메뉴에 넣고 싶다면 source/_includes/navigation.html 파일 내부에 원하는 곳에 넣으면 된다. 당연히 하단, 본문 등 원하는 곳에 그냥 넣으면 끝이다.</p>

<p>하지만. 난 우측 aside 영역에 넣기로 했다. 그리고 그냥 넣지않고 파일을 분리하기로 했다. 플러그인 처럼.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">vi <span class="nb">source</span>/_includes/custom/asides/google_translate.html
</code></pre></div>
<p>우선 google_translate.html을 열어 구글에서 제공해준 스크립트를 넣는다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">vi _config.yml
</code></pre></div>
<p>_config.yml 파일을 열어 아래처럼 default_asides 항목에 생성한 파일을 넣어준다.(원하는 순서에)</p>
<div class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">custom/asides/google_translate.html</span><span class="p-Indicator">,</span> <span class="nv">...</span><span class="p-Indicator">]</span>
</code></pre></div>
<p>이것으로 끝.</p>

<p>확인을 위해</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">rake generate
rake deploy
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[옥토프레스 category list 플러그인 설치]]></title>
    <link href="http://blog.asamaru.net/2015/08/28/octopress-category-list-plugin-install/"/>
    <updated>2015-08-28T20:45:21+09:00</updated>
    <id>http://blog.asamaru.net/2015/08/28/octopress-category-list-plugin-install</id>
    <content type="html"><![CDATA[<p>이번엔 옥토프레스에 category list 플러그인을 추가해 보았다.</p>

<p>사실 현재 시점에서 쓰고 있는 테마를 선택한 이유가 우측에 나오는 카테고리 목록이었다. 그런데 막상 테마를 설치한 후에도 카테고리 목록이 보이지 않았다. 처음엔 설정이 누락되어서 그렇다고 생각했고 시간이 없어서 그냥 두다가 오늘에서야 추가를 하고자 확인해 봤다.</p>

<p>현재 시점에 사용하고 있는 테마는 <a href="%22https://github.com/kAworu/octostrap3%22">octostrap3</a>다. 해당 소스를 뒤져서 aside에 추가하는 부분은 찾았으나 테마엔 그 파일이 없었다. 그럼 이사람은 없는 파일을 어떻게 불러서 쓴단 말인가?</p>

<p>알아보니 별도 플러그인을 추가해야만 했다.
<a href="https://github.com/ctdk/octopress-category-list">https://github.com/ctdk/octopress-category-list</a>
현재 내가 적용한 플러그인이다. 최근 업데이트가 시점이 오래되어 조금 미심쩍지만 대안이 없다.</p>

<p>일단 설명이 된대로 소스를 받아서 안내하는 경로에 집어 넣었다.
그리고 octostrap3에서 사용하던것 처럼 <em>config.xml 파일에 추가 했다.일단 사이드 영역에 &quot;custom/asides/category</em>list.html&quot;를 추가.</p>

<blockquote>
<p>default_asides: [asides/recent_posts.html, custom/asides/category_list.html, asides/github.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]</p>
</blockquote>

<p>그리고는 정상적으로 적용이 되는지 확인.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake generate
<span class="c">## Generating Site with Jekyll</span>
Configuration file: /Volumes/Data/DropBox/blog/_config.yml
            Source: <span class="nb">source</span>
<span class="nb">       </span>Destination: public/blog
      Generating...
  Liquid Exception: undefined method <span class="sb">`</span>+<span class="s1">&#39; for nil:NilClass in _layouts/page.html</span>
<span class="s1">jekyll 2.5.3 | Error:  undefined method `+&#39;</span> <span class="k">for</span> nil:NilClass
</code></pre></div>
<p>하지만 오류.. 이런.. 불친절하게 어디가 문제인지 명확히 알려주지 않는다. 무작정 소스를 봤다. ruby를 아예 모르는 관계로 봐도 모르겠다. 하지만 nil 오류라고 하니 값이 없는 것이 문제라는 생각에 의심되는 부분들을 보다가 발견한 부분..</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
  <span class="n">lists</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="n">max</span><span class="p">,</span> <span class="n">min</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span>
  <span class="n">config</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">config</span>
  <span class="n">category_dir</span> <span class="o">=</span> <span class="n">config</span><span class="o">[</span><span class="s1">&#39;root&#39;</span><span class="o">]</span> <span class="o">+</span> <span class="n">config</span><span class="o">[</span><span class="s1">&#39;category_dir&#39;</span><span class="o">]</span> <span class="o">+</span> <span class="s1">&#39;/&#39;</span>
  <span class="n">categories</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span>
  <span class="n">categories</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">sort_by</span><span class="p">{</span> <span class="o">|</span><span class="n">str</span><span class="o">|</span> <span class="n">str</span><span class="o">.</span><span class="n">downcase</span> <span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">category</span><span class="o">|</span>
    <span class="n">count</span> <span class="o">=</span> <span class="n">categories</span><span class="o">[</span><span class="n">category</span><span class="o">].</span><span class="n">count</span>
    <span class="n">lists</span><span class="o">[</span><span class="n">category</span><span class="o">]</span> <span class="o">=</span> <span class="n">count</span>
    <span class="n">max</span> <span class="o">=</span> <span class="n">count</span> <span class="k">if</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="n">max</span>
  <span class="k">end</span>
</code></pre></div>
<p>여기서 config[&#39;root&#39;] 이 부분이 문제 였다. 내 _config.xml 파일에서는 &quot;root:&quot; 부분을 비워두었다. 하위 폴더를 사용하지 않기 때문에. 여기에 값이 없어서 오류. 그래서 &quot;root: /&quot;로 수정.</p>

<p>다시 시도.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake generate
</code></pre></div>
<p>이젠 된다. 카테고리 목록도 잘 나온다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[옥토프레스 rake deploy에서 오류가 날 경우]]></title>
    <link href="http://blog.asamaru.net/2015/08/20/octopress-rake-deploy-error/"/>
    <updated>2015-08-20T22:56:20+09:00</updated>
    <id>http://blog.asamaru.net/2015/08/20/octopress-rake-deploy-error</id>
    <content type="html"><![CDATA[<p>옥토프레스를 설치하고 테스트 포스팅을 한 후 본격적으로 세팅을 하려고 시작했다.
도메인도 세팅하고 구글 어날리틱스, disqus 등도 연결을 하고자 _config.xml 파일을 수정하고 몇가지 글도 포스팅하려고 저장 후 generate 했다.</p>

<p>이제 배포를 하려고 rake deploy를 하니 아래와 같은 오류가 나타났다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">To https://github.com/asamaru7/blog.git
 ! <span class="o">[</span>rejected<span class="o">]</span>        gh-pages -&gt; gh-pages <span class="o">(</span>non-fast-forward<span class="o">)</span>
error: failed to push some refs to <span class="s1">&#39;https://github.com/asamaru7/blog.git&#39;</span>
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes <span class="o">(</span>e.g.
hint: <span class="s1">&#39;git pull ...&#39;</span><span class="o">)</span> before pushing again.
hint: See the <span class="s1">&#39;Note about fast-forwards&#39;</span> in <span class="s1">&#39;git push --help&#39;</span> <span class="k">for</span> details.
</code></pre></div>
<p>구글에서 검색해서 여러가지 방법들을 따라 시도해도 진행이 되지 않다가 발견한 stackoverflow에서 강제 업데이트하는 방법을 안내하고 있었다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">vi Rakefile
</code></pre></div>
<p>Rakefile을 열어 deploy_branch로 검색하다 보면 아래와 같은 부분을 볼 수 있다.</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">desc</span> <span class="s2">&quot;deploy public directory to github pages&quot;</span>
<span class="n">multitask</span> <span class="ss">:push</span> <span class="k">do</span>
  <span class="nb">puts</span> <span class="s2">&quot;## Deploying branch to Github Pages &quot;</span>
  <span class="nb">puts</span> <span class="s2">&quot;## Pulling any updates from Github Pages &quot;</span>
  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
    <span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git pull&quot;</span> <span class="p">}</span>
  <span class="k">end</span>
  <span class="p">(</span><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">/*&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">rm_rf</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
  <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="ss">:copydot</span><span class="o">].</span><span class="n">invoke</span><span class="p">(</span><span class="n">public_dir</span><span class="p">,</span> <span class="n">deploy_dir</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Copying </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span>
  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/.&quot;</span><span class="p">,</span> <span class="n">deploy_dir</span>
  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
    <span class="nb">system</span> <span class="s2">&quot;git add -A&quot;</span>
    <span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Committing: </span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span>
    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Pushing generated </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2"> website&quot;</span>
    <span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git push origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Github Pages deploy complete&quot;</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div>
<p>여기서 고칠 부분은 <code>Bundler.with_clean_env { system &quot;git push origin #{deploy_branch}&quot; }</code> 이 부분이다.
<code>#{deploy_branch}&quot;</code> 앞에 +를 붙여준다.</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git push origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</code></pre></div>
<p>이제 저장후 나와서 다시 deploy...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c">## Pushing generated _deploy website</span>
Counting objects: 36, <span class="k">done</span>.
Delta compression using up to <span class="m">4</span> threads.
Compressing objects: 100% <span class="o">(</span>27/27<span class="o">)</span>, <span class="k">done</span>.
Writing objects: 100% <span class="o">(</span>36/36<span class="o">)</span>, 12.90 KiB <span class="p">|</span> <span class="m">0</span> bytes/s, <span class="k">done</span>.
Total <span class="m">36</span> <span class="o">(</span>delta 14<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
To https://github.com/asamaru7/blog.git
 + 9295247...d6c0b14 gh-pages -&gt; gh-pages <span class="o">(</span>forced update<span class="o">)</span>
</code></pre></div>
<p>이번엔 gh-pages (forced update) 안내를 보여주며 push 성공.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 설치]]></title>
    <link href="http://blog.asamaru.net/2015/08/19/octopress-install/"/>
    <updated>2015-08-19T23:29:26+09:00</updated>
    <id>http://blog.asamaru.net/2015/08/19/octopress-install</id>
    <content type="html"><![CDATA[<h1 id="octopress-설치">Octopress 설치</h1>

<p><a href="http://octopress.org/">Octopress</a>는 <a href="http://jekyllrb.com/">Jekyll</a>을 위해 디자인된 프레임워크다.
Jekyll은 Github pages를 이용한 정적 블로깅 엔진으로 무료로 블로그 사이트를 생성할 수 있다.
하지만 해커들을 위한 블로깅 프레임워크이라고도 불리는 Jekyll은 사용이 그리 간단하지만은 않다.
자세한 내용은 검색하면 많이 찾을 수 있으니 그만 넘어가자.</p>

<h2 id="기본-설치">기본 설치</h2>

<p>Octopress에 안내된 설치방법은 아래의 사이트를 참고하자.
<a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></p>

<p>하지만 위의 설명대로 잘 되지 않는다면 아래의 내용을 참고해 볼수도 있다. 나의 경우엔 설치가 그리 쉽지만은 않았다.</p>

<p>우선 설치 환경은 osx 10.10 기준이다.</p>

<p>이미 git, brew 등은 설치가 되어있었기 때문에 rvm으로 ruby 1.9.3을 설치하려고 했으나 아래와 같은 오류를 만났다.</p>

<h3 id="오류-requirements_osx_brew_libs_install-gcc49-openssl">오류 : requirements_osx_brew_libs_install gcc49 openssl</h3>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo rvm install 1.9.3
Searching <span class="k">for</span> binary rubies, this might take some time.
No binary rubies available <span class="k">for</span>: osx/10.10/x86_64/ruby-1.9.3-p551.
Continuing with compilation. Please <span class="nb">read</span> <span class="s1">&#39;rvm help mount&#39;</span> to get more information on binary rubies.
Checking requirements <span class="k">for</span> osx.
Installing requirements <span class="k">for</span> osx.
Updating system.....
Installing required packages: gcc49, openssl....
Error running <span class="s1">&#39;requirements_osx_brew_libs_install gcc49 openssl&#39;</span>,
showing last <span class="m">15</span> lines of /Users/yyj/.rvm/log/1439982916_ruby-1.9.3-p551/package_install_gcc49_openssl.log
++ <span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
++ <span class="o">[[</span> -t <span class="m">1</span> <span class="o">]]</span>
++ <span class="k">return</span> 1
++ <span class="nb">printf</span> %b <span class="s1">&#39;There were package installation errors, make sure to read the log.</span>

<span class="s1">Try `brew tap --repair` and make sure `brew doctor` looks reasonable.</span>

<span class="s1">Check Homebrew requirements https://github.com/Homebrew/homebrew/wiki/Installation\n&#39;</span>
There were package installation errors, make sure to <span class="nb">read </span>the log.

Try <span class="sb">`</span>brew tap --repair<span class="sb">`</span> and make sure <span class="sb">`</span>brew doctor<span class="sb">`</span> looks reasonable.

Check Homebrew requirements https://github.com/Homebrew/homebrew/wiki/Installation
++ <span class="k">case</span> <span class="s2">&quot;$_system_version&quot;</span> in
++ <span class="k">return</span> 1
Requirements installation failed with status: 1.
</code></pre></div>
<p>우선 안내에 나온대로 <code>brew tap --repair</code>와 <code>brew doctor</code>를 실행해서 안내하는대로 처리를 완료했음에도 문제는 해결이 되지 않았다.
그래서 다음과 같이 rvm에서 필요로하는 lib을 먼저 설치했다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rvm get head --autolibs<span class="o">=</span>3
<span class="nv">$ </span>rvm requirements
</code></pre></div>
<p>재시도 ...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo rvm install 1.9.3
</code></pre></div>
<p>이번엔 오류가 나지않고 ruby를 다운로드 시작... 그러나 엄청나게 느림... 중간에 끊어짐... 이런...
오랜 기다림 끝에 이제 ruby 1.9.3 설치 완료.
이제 ruby 1.9.3을 사용하도록 하고...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rvm use 1.9.3
<span class="nv">$ </span>rvm rubygems latest
</code></pre></div>
<p>그다음은 공식 사이트 설명대로... 단, Octopress를 clone 받은 경로로 가서...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>gem install bundler
</code></pre></div>
<p>이번엔 그냥 넘아가나 했더니 아래와 같은 오류...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">ERROR:  Could not find a valid gem <span class="s1">&#39;bundler&#39;</span> <span class="o">(</span>&gt;<span class="o">=</span> 0<span class="o">)</span>, here is why:
          Unable to download data from https://rubygems.org/ - server did not <span class="k">return</span> a valid file <span class="o">(</span>https://rubygems.org/latest_specs.4.8.gz<span class="o">)</span>
</code></pre></div>
<p>이번에도 아래와 같이 하고...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rvm use 1.9.3
Using /Users/yyj/.rvm/gems/ruby-1.9.3-p551
<span class="nv">$ </span>rvm rubygems latest
</code></pre></div>
<p>재시도...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>gem install bundler
</code></pre></div>
<p>이번엔 퍼미션 에러...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo gem install bundler
</code></pre></div>
<p>드디어 설치.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rbenv rehash <span class="c"># 이건 필요시에만 한다고하니 명령이 없다는 오류가 나면 무시</span>
<span class="nv">$ </span>bundle install
</code></pre></div>
<p>이번에도 <code>bundle install</code>에서 퍼미션 에러...</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo bundle install
</code></pre></div>
<p>아.. 드디어 기본 설치 완료</p>

<h2 id="테마설치">테마설치</h2>

<p>기본 테마 설치</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake install
</code></pre></div>
<p>다른 테마를 원한다면 <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a> 에 가서 고르면 된다.</p>

<p>설치는 다음과 같이</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone https://github.com/~~~.git .themes/테마이름
<span class="nv">$ </span>rake install<span class="o">[</span><span class="s1">&#39;테마이름&#39;</span><span class="o">]</span>
</code></pre></div>
<p>octostrap3 테마 적용 예시.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">% git clone https://github.com/kAworu/octostrap3.git .themes/octostrap3
% rake install<span class="o">[</span><span class="s2">&quot;octostrap3&quot;</span><span class="o">]</span>
</code></pre></div>
<h2 id="설정">설정</h2>

<p>아래와 같이 명령을 실행하고 생성해둔 github 프로젝트 주소를 넣으면 설치는 완료된다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake setup_github_pages
Enter the <span class="nb">read</span>/write url <span class="k">for</span> your repository
<span class="o">(</span>For example, <span class="s1">&#39;git@github.com:your_username/your_username.github.io.git)</span>
<span class="s1">           or &#39;</span>https://github.com/your_username/your_username.github.io<span class="err">&#39;</span><span class="o">)</span>
Repository url: https://github.com/~~~/~~~.git
</code></pre></div>
<h2 id="배포">배포</h2>

<p>아직 작성한 글이 아무것도 없지만 일단 deploy 해본다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake generate
<span class="nv">$ </span>rake deploy
</code></pre></div>
<p>deploy를 하고나면 기본적으로 생성해 주는 아주 간단한 index.html 파일이 push되어 있는 것을 볼 수 있다.</p>

<p>이제 페이지가 정상적으로 뜨는지만 확인하면 기본 설치는 모두 완료.</p>

<h2 id="repository-연결">repository 연결</h2>

<p>블로그는 gh-pages branch로 연결되어 있으니 원소스를 master로 연결하여 백업의 역할을 할 수 있도록 설정해보자.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git remote add origin https://github.com/~~~/~~~.git
<span class="nv">$ </span>git config branch.master.remote origin

<span class="nv">$ </span>git push
</code></pre></div>
<h2 id="독립-도메인-연결">독립 도메인 연결</h2>

<p>이왕이면 내 도메인도 연결해보자. 아래의 명령은 CNAME 파일을 통해 도메인 연결을 github에 알려주는 것으로 이후 deploy가 될 때 이 파일이 함께 배포되면 적용된다. 단, 도메인을 변경했으므로 이에 맞춰 _config.yml 파일도 함께 수정해야 한다.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;blog.asamaru.net&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</code></pre></div>]]></content>
  </entry>
  
</feed>
