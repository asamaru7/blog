<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tip | 이 세상에 하나는 남기고 가자]]></title>
  <link href="http://blog.asamaru.net/blog/categories/tip/atom.xml" rel="self"/>
  <link href="http://blog.asamaru.net/"/>
  <updated>2015-10-14T14:58:11+09:00</updated>
  <id>http://blog.asamaru.net/</id>
  <author>
    <name><![CDATA[유영재]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[북마클릿(bookmarklet) 생성기]]></title>
    <link href="http://blog.asamaru.net/2015/10/12/bookmarklet/"/>
    <updated>2015-10-12T19:58:04+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/12/bookmarklet</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Bookmarklet">Bookmarklet</a>은 브라우저에 새로운 기능을 추가하는 자바스크립트 명령을 포함한 브라우저 북마크다.
표준으로 정의된 형식은 없으나 일반적으로 아래와 같은 형태를 가진다.</p>
<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">javascript</span><span class="o">:</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
  <span class="c1">//Statements returning a non-undefined type.</span>
<span class="p">})();</span>
</code></pre></div>
<p>북마클릿에 대해 상세히 설명할 내용은 없다. 북마클릿을 사용해서 할 수 있는 일은 무궁무진하다. 단, 브라우저에 사용자가 직접 추가해야하며 직접 북마크를 눌러 실행해야 한다. 예를들어 핀터레스트에서는 &quot;Pin it&quot; 기능을 <a href="https://about.pinterest.com/en/goodies">The Pin It button</a> 북마클릿으로 제공하고 있다.</p>

<p>마지막으로 북마클릿을 쉽게 만들수 있도록 도와주는 도구를 소개하고자 한다.</p>

<p><strong><a href="http://bookmarklet.asamaru.net/">Bookmarklet Generator</a></strong></p>

<p>여러가지 도구가 있지만 이게 가장 직관적인 것 같다. 이 도구는 <a href="http://web-development.cc/bookmarklet-generator/">bookmarklet generator</a>을 fork하여 jquery 버전만 수정했다. 기존 프로젝트는 사용중인 jquery의 버전이 낮아서 만들어진 북마크릿이 정상 동작하지 않는다. 향후 시간이 된다면 불편한 부분들을 개선하도록 하겠다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[퓨니코드(Punycode)]]></title>
    <link href="http://blog.asamaru.net/2015/10/06/punycode/"/>
    <updated>2015-10-06T11:49:03+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/06/punycode</id>
    <content type="html"><![CDATA[<blockquote>
<p>퓨니코드(Punycode)는 유니코드 문자열을 호스트 이름에서 허용된 문자만으로 인코딩하는 방법으로, <a href="https://tools.ietf.org/html/rfc3492">RFC 3492</a>에 기술되어 있다. 퓨니코드는 유니코드가 지원하는 모든 언어로 국제화 도메인을 쓸 수 있게 한 IDNA의 일부로, 변환은 전적으로 웹 브라우저와 같은 클라이언트에서 이루어진다.
출처 : <a href="https://ko.wikipedia.org/wiki/%ED%93%A8%EB%8B%88%EC%BD%94%EB%93%9C">https://ko.wikipedia.org/wiki/%ED%93%A8%EB%8B%88%EC%BD%94%EB%93%9C</a></p>
</blockquote>

<p>쉽게 얘기해서 기본적으로 도메인은 ASCII 문자 집합만 사용 가능한데 국제화 도메인을 사용하기 위해서 퓨니코드라는 것이 필요하다는 것이다. 퓨니코드는 <code>xn--</code> 접두어를 통해 구분된다. 예를들어 &quot;wiki백과.한국&quot; 도메인은 IDNA에서 xn--wiki-ei4p334e.xn--3e0b707e로 변환된다.</p>

<p>국제화 도메인과 퓨니코드를 상호 변환을 테스트 해보려면 <a href="http://krnic.or.kr/jsp/resources/domainInfo/punyCode.jsp">KISA 퓨니코드 변환기</a>를 사용할 수 있다. 이 외에도 퓨니코드 변환기로 검색하면 많은 변환기들이 존재한다.</p>

<p>사실 이 퓨니코드에 대한 소개를 하는 이유는 일반적인 상황에서는 직접 처리해야할 일이 없지만 특수한 경우에는 이것이 필요할 수 있기 때문이다. 예를들어 이런 경우가 있다. IE8 이하에서는 한글도메인과 퓨니코드로 변환된 도메인을 다르게 인식하여 AJAX 사용시 cross domain 문제를 일으킬 수 있다. 이런 경우엔 퓨니코드를 한글 도메인으로 다시 변환하여 URL을 사용해야 문제를 막을 수 있다.</p>

<p>따라서 퓨니코드에 대한 이해와 변환 방법에 대해 알아두면 도움이 될 것이다. 아래는 변환에 바로 사용할 수 있는 몇가지 오픈소스 프로젝트를 안내한다. 이외에도 조금만 검색하면 많은 오픈소스를 찾을 수 있다.</p>

<ul>
<li><a href="https://github.com/bestiejs/punycode.js">punycode.js</a></li>
<li><a href="https://github.com/true/php-punycode">php-punycode</a></li>
<li><a href="https://github.com/Wevah/Punycode-Cocoa">Punycode-Cocoa</a></li>
<li><a href="http://opensource.apple.com/source/ChatServer/ChatServer-262/libidn/java/gnu/inet/encoding/Punycode.java">Punycode.java</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Gmail에서 '다른 주소에서 메일 보내기' 사용시 'Functionality Not Enabled.' 오류 해결]]></title>
    <link href="http://blog.asamaru.net/2015/10/06/resolving-the-functionality-not-enabled-message-in-google-apps/"/>
    <updated>2015-10-06T08:01:10+09:00</updated>
    <id>http://blog.asamaru.net/2015/10/06/resolving-the-functionality-not-enabled-message-in-google-apps</id>
    <content type="html"><![CDATA[<p>지금은 구글 앱스의 무료 계정이 없지만 예전에는 사용자 50명 이내에 한해서 무료 계정을 제공했다. 그때 나의 개인 계정과 회사 계정을 등록해 두어서 현재까지 무료로 사용중이다. 요즘에는 다음 등에서도 비슷한 서비스를 제공하지만 역시 구글이 훨씬 다양한 기능을 제공한다.</p>

<p>우선 나는 내 개인 계정 한군데에 다른 메일 서비스에 수신되는 모든 메일이 포워딩 되도록 사용중이다. 따라서 메일 발수신을 모두 내 계정에서 한다. 수신은 당연히 문제가 없지만 발신의 경우 특정 이메일을 사용해서 발신해야 하는 경우가 있다. 예를들어 회사 업무차 메일을 보낼때는 회사 메일 주소로 메일을 보내야 하는 것이다. 어런 경우에 유용하게 사용할 수 있는 것이 &quot;다른 주소에서 메일 보내기&quot; 기능이다. 이 기능은 &quot;환경설정 &gt; 계정&quot;에서 찾을 수 있다.</p>

<p>&quot;다른 주소에서 메일 보내기&quot;에서 발신을 위한 메일 주소를 등록해두면 메일 발신시 해당 메일 주소로 메일을 보낼 수 있다.</p>

<p>그런데 어제 새로운 메일 주소를 등록하려고 하니 &quot;Functionality Not Enabled.&quot; 오류 메시지와 함께 정상 등록되지 않았다. 현재 등록하려던 곳은 일반 GMail이 아닌 Google Apps에서 제공하는 Gmail 이다. 분명 예전에는 새로운 메일 주소를 등록하면 해당 주소로 확인 메일을 보내주고 메일 내용에 들어있는 확인 코드를 넣으면 간단히 등록되었었다.</p>

<p>구글의 정책이 변경된 것으로 보인다. 어쨌든 등록을 해야해서 오류를 해결하는 방법을 찾아보았다. 일반 Gmail을 사용하는 경우라면 위 오류가 나타나지 않았을 것이니 이 단계가 필요없다. 단, 다른 구글 계정의 이메일 주소를 연결하는 방법을 보려면 조금 더 아래의 내용을 참고하자.</p>

<ul>
<li><a href="https://productforums.google.com/forum/#!topic/apps/z1IS-ocp6yk">Send mail as - Add another email address you own - &quot;Functionality not enabled&quot; message.</a></li>
<li><a href="https://www.youtube.com/watch?v=kK7QpOWCz_A">Resolving The Functionality Not Enabled Message In Google Apps</a></li>
</ul>

<p>위 링크들을 참고하면 이 문제를 쉽게 해결할 수 있다. 요약하자면 아래와 같다. 다시말하지만 이 경우는 Google Apps인 경우다.</p>

<ul>
<li>도메인 관리(Google Apps 관리) 페이지로 접속한다.</li>
<li>사용자 &gt; 해당 사용자 선택 &gt; 사용하도록 설정된 Google Apps &gt; GMail로 들어간다.</li>
<li>고급 설정 &gt; 최종 사용자 액세스 &gt; 사용자별 발신 게이트웨이 허용을 체크한다.</li>
</ul>

<p>일단 이렇게 설정하면 위 오류 메시지는 해결된다. 단, 이 변경이 적용되는데 어느 정도 시간이 걸린다. 저장시에 안내 메시지가 나오는데 내 경우는 1시간 이내라고 안내가 나왔었다.</p>

<p>자.. 그래서 1시간 후 다시 시도.</p>

<p>Gmail로 돌아와서 &quot;다른 이메일 주소 추가&quot;를 누르면 기존과 동일하게 아래의 화면이 나타난다.</p>

<p><img src="/img/2015-10-06-resolving-the-functionality-not-enabled-message-in-google-apps-1.png" alt="다른 이메일 주소를 추가하세요"></p>

<p>원하는 이름과 이메일 주소를 입력하고 &quot;다음 단계&quot;를 선택. 그럼 아래와 같이 오류 대신 SMTP 서버 정보를 넣으라는 화면이 나온다(기존에는 이 단계가 없었다).</p>

<p><img src="/img/2015-10-06-resolving-the-functionality-not-enabled-message-in-google-apps-2.png" alt="다른 이메일 주소를 추가하세요"></p>

<p>이 단계에서는 SMTP 서버 정보를 넣으면 되는데 추가하려는 이메일 주소가 Gmail 또는 Google Apps Gmail 인 경우라면 SMTP 서버에 &quot;smtp.gmail.com&quot;, 포트는 587을 선택하고 아이디와 비밀번호를 입력하면 된다. 단, 아이디(사용자 이름)은 <a href="mailto:abc@gmail.com">abc@gmail.com</a> 등과 같이 이메일 풀주소를 넣어야 한다. 조금더 상세한 정보는 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-google-s-smtp-server">How To Use Google&#39;s SMTP Server</a>를 참고하자. 단, 여기서는 포트를 465로 안내하고 있지만 내 경우는 587을 사용해야 했다.</p>

<p>마지막 확인 코드 입력 화면이다. 정상적으로 정보가 확인된다면 입력한 이메일 주소로 확인 코드를 보내주는데 이 확인 코드를 아래의 화면에 입력하면 등록이 완료된다.</p>

<p><img src="/img/2015-10-06-resolving-the-functionality-not-enabled-message-in-google-apps-3.png" alt="다른 이메일 주소를 추가하세요"></p>

<p>확인 코드를 정상적으로 입력했다면 추가한 이메일이 보일 것이다. 이제부터는 메일을 보낼때 이 이메일 주소를 사용할 수 있다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[필요해서 만든 대출 이자 계산기]]></title>
    <link href="http://blog.asamaru.net/2015/09/30/loan-calculator/"/>
    <updated>2015-09-30T21:17:45+09:00</updated>
    <id>http://blog.asamaru.net/2015/09/30/loan-calculator</id>
    <content type="html"><![CDATA[<p>올해 집을 이사하면서 돈이 부족해서 대출을 받게 되었다.
대출을 받기 전에 예산을 잡는 과정에서 대출 비용에 따른 월 부담 비용을 알아보기 위해 대출 계산기를 찾아다녔었다. 그런데 딱히 편한게 없었다. 어짜피 계산값이야 다를 수 없는 것이므로 계산이 불편하지는 않았으나 계산했던 결과를 저장해 둘 수가 없어서 매번 다시 계산해야하는 불편함이 있었다. 하루에도 몇번씩 얼마를 빌려야할지가 변하는 상황에서 월 비용을 모두 기억할 수는 없었기 때문에 자주 다시 계산하게 되었던 것이다. 그래서 직접 안드로이드 앱을 만들어 버렸다. 아래의 링크를 통해 마켓으로 갈 수 있다.</p>

<h3 id="안드로이드-대출-계산기-앱"><a href="https://play.google.com/store/apps/details?id=net.asamaru.calc">안드로이드 대출 계산기 앱</a></h3>

<p>그리고 앱을 만들면서 하이브리드앱 형태로 만들었었기 때문에 조금만 수정해서 웹 버전도 만들었다. 단, 아직 계산 결과 저장 기능은 넣이 않았다. 그게 제일 중요한 목적이긴 했는데 아직 완성하지 못했다. 시간이 되는대로 기능을 넣을 예정이다. 웹 버전은 아래의 링크를 통해 볼 수 있다.</p>

<h3 id="대출-이자-계산기"><a href="http://loan.asamaru.net/">대출 이자 계산기</a></h3>

<p>내가 필요해서 만든 것이지만 혹시라도 필요한 사람들이 있을까해서 공개해 본다. 앞으로의 버전업은 크게 기대하기 어렵지만 앱/웹 버전 모두 소스를 공개해 두었기 때문에 계산 로직 등이 필요한 사람들은 도움이 될지도 모르겠다.</p>

<hr>

<p>위의 프로그램들과는 크게 상관없지만 대출의 종류를 간단히 소개하고자 한다.</p>

<h4 id="원리금균등분할상환">원리금균등분할상환</h4>

<blockquote>
<p>일반적으로 사용되는 상황방식으로 매기간 원금과 이자의 합계가 균등한 저당이다. 초기에는 원리금 중 이자가 차지하는 부분이 많으나 후기에는 원금상환 비중이 커지면 대출만기 일자에 대출원금은 완전히 상환된다.</p>
</blockquote>

<h4 id="원금균등분할상환">원금균등분할상환</h4>

<blockquote>
<p>대출원금을 융자기간으로 나눈 할부 상환금에 월별잔고에 대한 이자를 합산하여 납부하는 방식이다. 원금액은 동일하나 이자지불액은 원금을 갚아나가면서 조금씩 줄어듦에 따라 매 기간 적어지게 된다. 따라서 원금균등상환방식은 초기에는 월부금이 많이 지급되고 후기에는 점차 줄어들기 때문에 대출자 입장에서는 차입자에게 원금균등분할상환방식으로 대출해 주는 것이 원금회수 측면에서 보다 안전하다.</p>
</blockquote>

<h4 id="원금만기일시상환-만기상환저당">원금만기일시상환(만기상환저당)</h4>

<blockquote>
<p>원금은 만기에 상환하고 대출기간 중에는 이자만 지불하는 저당대출을 말한다. 이 방식을 인터리스트 온리 모기지(interest only mortgage)라고도 한다.</p>
</blockquote>

<p>내가 알기론 원금균등상환이 돈을 빌리는 입장에서 제일 유리한 것으로 알고 있으나 대부분의 대출 상품은 원리금균등상환이다.</p>

<p><strong>예전엔 빚테크라는 말도 있듯이 대출을 잘 활용하는 것이 좋았지만 요즘같은 시국엔 빚없이 사는게 제일인 것 같다.</strong> 아무쪼록 내가 만든 프로그램들이 대출을 효율적으로 받는데 도움이 되었으면 한다.</p>
]]></content>
  </entry>
  
</feed>
